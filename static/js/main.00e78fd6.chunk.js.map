{"version":3,"sources":["static/Audio/long-bell.mp3","static/Audio/bowl-struck.mp3","static/Audio/bell4.mp3","static/Audio/buddhist-prayer-bell.mp3","static/Audio/gong-burmese.wav","static/Audio/gong-chinese.wav","static/Audio/tingsha.wav","static/Audio/zen-bell.mp3","static/Logos/cog-solid.svg","Components/Clock/ClockLabels.js","generalFunctions.js","Components/Clock/clock-functions.js","Components/Clock/NumbersOfClock.js","Components/Clock/ClockButtons.js","Components/Clock/Clock.js","Components/Clock/Timer.js","Components/Modals/Modal.js","Components/Bells/index.js","Components/Modals/AudiosModal.js","Components/App/TabButtons.js","Components/App/BelowClockContainer.js","Components/App/ChangeSizeButton.js","App.js","index.js"],"names":["module","exports","ClockLabels","hoursDisplayed","className","noop","getClockMethod","clockStarted","clockPaused","clockMethods","isTimerInZero","startClock","pauseClock","checkIfTimerIsInZero","isCountDown","seconds","minutes","hours","convertOrdinaryNumbersInTimeNumbers","numOfSeconds","numOfMinutes","numOfHours","convertHours","addLeadingZero","num","stringNum","toString","TIME_UNITS","NumbersOfClock","props","removeClassOfSpanExceptTargeted","spanRefsArr","target","targetSpan","find","element","setState","activeSpan","setPositionOfCursorInInput","positionInClockRightToLeft","selectBorderForSpan","spanToBorder","focusOnInput","spanRefs","spanRefsSettings","map","spanSettings","cloneObj","Object","assign","ref","defaultSelectedSpan","spanElements","e","elem","classList","contains","undefined","isSpanAvailableToBorder","includes","state","unit","prevProps","this","inputValueLength","handleClockEvents","numbersByUnit","clockSpans","obj","i","value","inputLength","key","hoursToDisplay","slice","minutesToDisplay","secondsToDisplay","onClick","onMouseDown","Component","defaultProps","ClockButtons","firstButton","secondButton","text","Clock","tick","stopClock","bellStarting","nextSecond","nextMinute","nextHour","setNextSecondAndNextMinute","isTimeToRing","Number","isInteger","ringEvery","clockId","setInterval","clearInterval","setNewTimer","newMinutes","newSeconds","newHours","keyPressingOnClock","document","activeElement","startAndPauseButton","arrayOfMethods","clockStatus","clockByUnits","focusOnInputSettings","isFocused","handleFocus","push","keyMethod","getMethodsForEnterPressing","handleOnInputFocus","forEach","fn","initialSeconds","initialMinutes","initialHours","keyPressed","areHoursDisplayedInClock","areConditionsForSettingANewTimer","hoursDisplayedInClock","setHoursInClock","stateName","firstButtonProps","onClickMethods","btnInfo","getSettingsForButton","firstButtonRef","el","id","ariaIdForContainer","aria-labelledby","role","numberClicked","children","React","Timer","onInputChange","ev","length","numberToTest","isNaN","isNaturalNumber","timeToSet","inputValue","inputSeconds","inputMinutes","inputHours","changeTimerNumbers","inputClockRef","current","blur","position","setSelectionRange","handleOnBlur","clickedInClockContainer","handleOnFocus","focus","handleOnMouseDown","handleOnClick","nodeName","event","eventsHandlers","type","createRef","tabIndex","onBlur","onFocus","onChange","Modal","closeModalOnKeyPress","stopKeyEventPropagation","nativeEvent","stopImmediatePropagation","closeModal","closeSuccessModal","divToFocus","setDivFocus","focusDiv","modalState","title","modalValidation","aria-describedby","onKeyDown","audiosInfoArray","name","src","longBell","bowlStruck","japaneseGong","buddhistPrayerBell","burmeseGong","chineseGong","tingshaBell","zenBell","notIncludedNumber","AudiosModal","handleSelectAudiosChange","selectAudiosValue","handleInputChange","autoCompleteInputValue","startAudioBellFromBeginning","bellRef","currentTime","play","initialSelectValue","ringBellEvery","audios","sort","objA","objB","nameA","nameB","MenuItem","selectedAudioSrc","minutesOptionsArr","maxMinutes","notIncludedNumbersCb","minutesAndHoursArray","getLabel","minute","hour","units","getNumWithUnit","setUnit","hourWithUnit","minuteWithUnit","label","parseInt","getNumberWithTimeUnitLabel","FormControl","InputLabel","Select","labelId","controls","showTimer","options","getOptionSelected","option","getOptionLabel","handleMinutesSelect","handleHomeEndKeys","filterSelectedOptions","fullWidth","renderInput","params","TextField","variant","TabButtons","classNames","handleClick","buttonsText","amountOfButtons","activeTab","buttons","buttonText","aria-selected","aria-controls","button","aria-label","container","BelowClockContainer","numberToRing","handleModal","SettingsSVG","alt","height","width","ChangeSizeButton","App","handleClockBtns","succeed","modalClicked","modalSelectValue","showingOverlay","setAppInBigSize","showAppInBig","onBodyKeydown","handleModalSelect","optionSelectedObj","handleWindowFocus","window","windowBlur","mainContainerRef","keyPressedEvent","isTimerShowingHours","isStopwatchShowingHours","addEventListener","removeEventListener","prevState","hoursBeingDisplayed","isTimer","buttonsClassnames","href","ReactDOM","render","getElementById"],"mappings":"oIAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,+MCiB1BC,MAdjB,YAA0C,IAAnBC,EAAkB,EAAlBA,eACnB,OACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAS,oBAAgBD,EAAkB,GAAK,SAArD,SACA,yBAAKC,UAAU,aAAf,WACA,yBAAKA,UAAU,aAAf,aCRKC,EAAO,aCEb,IAAMC,EAAiB,SAACC,EAAcC,EAAaC,GAAyC,IAA3BC,EAA0B,wDAEtFC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEpB,OAAIF,EAAsBL,EAEtBE,IAAiBC,EAAoBI,EAElCD,GAGEE,EAAuB,SAACC,EAAaC,EAASC,EAASC,GAAhC,OAA2CH,GAA2B,IAAZC,GAA6B,IAAZC,GAA2B,IAAVC,GAsHzH,SAASC,IAA8G,IAA1EC,EAAyE,uDAA1D,EAAGC,EAAuD,uDAAxC,EAAGC,EAAqC,uDAAxB,EAAGC,IAAqB,yDAEvHP,EAAUI,EACVH,EAAUI,EACVH,EAAQI,EAEZ,OAAIN,GAAW,IAAMC,GAAW,KAE5BD,EAAU,KACVA,GAAW,GACXC,GAAW,GAGXM,GAAgBN,EAAU,KAC1BA,GAAW,GACXC,GAAS,GAGTA,EAAQ,KAERA,EAAQ,GACRD,EAAU,GACVD,EAAU,KAhB6B,CAAEA,UAASC,UAASC,SA2B1D,IAAMM,EAAiB,SAAAC,GAC5B,IAAMC,EAAYD,EAAIE,WAEtB,OAAQF,EAAM,GAAM,CAAC,IAAKC,GAAa,CAACA,EAAU,GAAIA,EAAU,KCjK5DE,EACO,UADPA,EAEO,UAFPA,EAGK,QAGLC,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAwCVC,gCAAkC,SAACC,EAAaC,GAE5C,IAAIC,EAAaF,EAAYG,MAAK,qBAAGC,UAA0BH,KAE/D,IAAMC,EAAa,OAAO,EAAKG,SAAS,CAAEC,WAAY,OAEtD,EAAKD,SAAS,CAAEC,WAAYJ,EAAWE,UACvC,EAAKN,MAAMS,2BAA2BL,EAAWM,2BAA6B,IAhDhE,EAsDlBC,oBAAsB,WAAO,IAAD,EAEe,EAAKX,MAApCY,EAFgB,EAEhBA,aAAcC,EAFE,EAEFA,aAEhBC,EAAW,EAAKC,iBAAiBC,KAAI,SAACC,GACxC,IAAMC,EAAWC,OAAOC,OAAO,GAAIH,GAC3BP,EAAmCQ,EAAnCR,2BAA4BW,EAAOH,EAAPG,IAKpC,OAHAH,EAASZ,QAAU,EAAKe,GACxBH,EAASI,oBAAsD,IAA/BZ,EAEzBQ,KAGX,GAAKL,EAAL,CAMA,IAAMU,EAAeT,EAASE,KAAI,SAAAQ,GAAC,OAAIA,EAAElB,WACnCE,EAAae,EAAalB,MAAM,SAAAoB,GAAI,OAAKA,EAAKC,UAAUC,SAAS,cAAiBF,OAAOG,KACzFC,IAA2BjB,GAAgBA,EAAac,UAAUC,SAAS,oBAEjF,KAAMnB,IAAeqB,GACpBrB,IAAeI,GACfA,IAAiBW,EAAaO,SAASlB,IAExC,IAAOJ,GAAeI,KAAmBJ,GAAeqB,GASxD,EAAK5B,gCAAgCa,EAAUF,OAT/C,CAAoF,IAE/DR,EAAeU,EAAST,MAAK,mBAAsD,IAAtD,EAAGiB,uBAAzChB,QAER,EAAKL,gCAAgCa,EAAUV,SAjB/C,EAAKH,gCAAgCa,EAAU,OAlEnD,EAAKiB,MAAQ,CACTvB,WAAY,MAGhB,EAAKO,iBAAmB,CACpB,CACIL,2BAA4B,EAC5BW,IAAK,mBACLW,KAAMlC,GAEV,CACIY,2BAA4B,EAC5BW,IAAK,kBACLW,KAAMlC,GAEV,CACIY,2BAA4B,EAC5BW,IAAK,qBACLW,KAAMlC,GAEV,CACIY,2BAA4B,EAC5BW,IAAK,oBACLW,KAAMlC,GAEV,CACIY,2BAA4B,EAC5BW,IAAK,qBACLW,KAAMlC,GAEV,CACIY,2BAA4B,EAC5BW,IAAK,oBACLW,KAAMlC,IApCA,E,+DA8FCmC,GAEXA,EAAUrB,eAAiBsB,KAAKlC,MAAMY,cACtCqB,EAAUpB,eAAiBqB,KAAKlC,MAAMa,cAEtCqB,KAAKvB,wB,+BAIF,IAAD,WAE4EuB,KAAKlC,MAA/EZ,EAFF,EAEEA,MAAOyB,EAFT,EAESA,aAAcsB,EAFvB,EAEuBA,iBAAkBC,EAFzC,EAEyCA,kBAAmBnD,EAF5D,EAE4DA,YAC1DuB,EAAe0B,KAAKH,MAApBvB,WAEF6B,GAAa,mBACdvC,EAAqBJ,EAAewC,KAAKlC,MAAMd,UADjC,cAEdY,EAAqBJ,EAAewC,KAAKlC,MAAMb,UAFjC,cAGdW,EAAmBJ,EAAewC,KAAKlC,MAAMZ,QAH/B,GAiBbkD,EAXmBJ,KAAKnB,iBAAiBC,KAAI,SAACuB,EAAKC,GACrD,IAAMtB,EAAWC,OAAOC,OAAO,GAAImB,GAG7BE,EADYJ,EAAcE,EAAIP,MACZQ,EAAI,GAI5B,OAFAtB,EAASuB,MAAQA,EAEVvB,KAGyBF,KAAI,YAIjC,IAHyB0B,EAG1B,EAHFhC,2BACAW,EAEE,EAFFA,IACAoB,EACE,EADFA,MAEJ,OAAO,0BACHE,IAAKtB,EACLA,IAAK,SAAAG,GAAC,OAAI,EAAKH,GAAOG,GACtBjD,UAAS,UACDiC,IAAe,EAAKa,GAAQ,aAAe,GAD1C,YACiDR,GAAgBsB,EAAmBO,EACzF,oBAAuBzD,EAAe,mBAAqB,KAG9DwD,MAICG,EAAiBN,EAAWO,MAAM,EAAE,GACpCC,EAAmBR,EAAWO,MAAM,EAAG,GACvCE,EAAmBT,EAAWO,MAAM,EAAG,GAE7C,OACI,yBACItE,UAAS,4BAAwBsC,GAAgB5B,EAAe,eAAiB,IACjF+D,QAASZ,EACTa,YAAab,GAEb,yBAAK7D,UAAS,yBAA+B,IAAVa,GAAgByB,EAAyB,GAAT,SAC/D,yBAAKtC,UAAU,WAAWqE,GAC1B,yBAAKrE,UAAU,WAAf,MAEJ,yBAAKA,UAAU,WAAWuE,GAC1B,yBAAKvE,UAAU,WAAf,KACA,yBAAKA,UAAU,WAAWwE,Q,GAhKbG,aAkL7BnD,EAAeoD,aAAe,CAC1BjE,QAAS,EACTC,QAAS,EACTC,MAAO,EACPyB,cAAc,EACdsB,iBAAkB,EAClBC,kBAAmB5D,GAIRuB,QCjKAqD,MApCf,YAAmD,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,aAChC,OACI,yBAAK/E,UAAU,yBACX,4BACIA,UAAS,uBAAkB8E,EAAY9E,WACvCyE,QAASK,EAAYL,QACrB3B,IAAKgC,EAAYhC,KAEhBgC,EAAYE,MAEjB,4BACIhF,UAAS,uBAAkB+E,EAAa/E,WACxCyE,QAASM,EAAaN,QACtB3B,IAAKiC,EAAajC,KAEjBiC,EAAaC,QCLxBC,E,kDACJ,WAAYxD,GAAQ,IAAD,uBACjB,cAAMA,IAoBRyD,KAAO,WAAO,IAAD,EACyB,EAAK1B,MAAjC7C,EADG,EACHA,QAASC,EADN,EACMA,QAASC,EADf,EACeA,MAE1B,GAAI,EAAKY,MAAMf,aAA2B,IAAZC,GAA6B,IAAZC,GAA2B,IAAVC,EAI9D,OAFA,EAAKsE,iBACL,EAAK1D,MAAM2D,eAKb,GAAK,EAAK3D,MAAMf,aAA2B,KAAZC,GAA8B,KAAZC,GAA4B,KAAVC,EAAnE,CAXW,MHS2B,SAACH,EAAaC,EAASC,EAASC,GAEtE,IAAIwE,EAAa1E,EACb2E,EAAa1E,EACb2E,EAAW1E,EA+Cf,OA7CIH,EAEiB,IAAf2E,GAEFA,EAAa,GAEM,IAAfC,GAEFA,EAAa,GACbC,KAIAD,KAKFD,IAMiB,KAAfA,GAEFA,EAAa,EAEM,KAAfC,GAEFA,EAAa,EACbC,KAIFD,KAKAD,IAKG,CACHA,aACAC,aACAC,YG7CyCC,CAA2B,EAAK/D,MAAMf,YAAaC,EAASC,EAASC,GAA1GwE,EAlBG,EAkBHA,WAAYC,EAlBT,EAkBSA,WAAYC,EAlBrB,EAkBqBA,SAE1BE,EAAgBC,OAAOC,UAAUL,EAAa,EAAK7D,MAAMmE,YAA6B,IAAfP,GAExE,EAAK5D,MAAMf,aAAe+E,GAAc,EAAKhE,MAAM2D,eAExD,EAAKpD,SAAS,CACZrB,QAAS0E,EACTzE,QAAS0E,EACTzE,MAAO0E,SAdP,EAAKJ,aAlCU,EAoDnB5E,WAAa,WACX,EAAKsF,QAAUC,YAAY,EAAKZ,KAAM,KAEtC,EAAKlD,SAAS,CACZ7B,cAAc,EACdC,aAAa,KAzDE,EA6DnBI,WAAa,WACXuF,cAAc,EAAKF,SAEnB,EAAK7D,SAAS,CAAE5B,aAAa,KAhEZ,EAoEnB+E,UAAY,WAAO,IAAD,EACoB,EAAK1D,MAAjCd,EADQ,EACRA,QAASC,EADD,EACCA,QAASC,EADV,EACUA,MAE1BkF,cAAc,EAAKF,SAEnB,EAAK7D,SAAS,CACZ7B,cAAc,EACdC,aAAa,EACbO,QAASA,EACTC,QAASA,EACTC,MAAOA,KA9EQ,EAkFnBmF,YAAc,SAACrF,EAASC,EAASC,GAAW,IAAD,EAKrCC,EAAoCH,EAASC,EAASC,GAH/CoF,EAF8B,EAEvCrF,QACSsF,EAH8B,EAGvCvF,QACOwF,EAJgC,EAIvCtF,MAGF,EAAKmB,SAAS,CACZrB,QAASuF,EACTtF,QAASqF,EACTpF,MAAOsF,KA5FQ,EAgGnBC,mBAAqB,SAAChC,GAAS,IAAD,EAEU,EAAKZ,MAAnCrD,EAFoB,EAEpBA,aAAcC,EAFM,EAENA,YAFM,EAGmC,EAAKqB,MAA5Df,EAHoB,EAGpBA,YAAa4B,EAHO,EAGPA,aAAczB,EAHP,EAGOA,MAAOD,EAHd,EAGcA,QAASD,EAHvB,EAGuBA,QAEnD,GAAI0F,SAASC,gBAAkB,EAAKC,oBAApC,CAEA,IAAMC,EHfgC,SAAC,GAOpC,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,aACArG,EAII,EAJJA,aACA2F,EAGI,EAHJA,YACAW,EAEI,EAFJA,qBACAjG,EACI,EADJA,YAGQP,EAA8BsG,EAA9BtG,aAAcC,EAAgBqG,EAAhBrG,YACdO,EAA4B+F,EAA5B/F,QAASC,EAAmB8F,EAAnB9F,QAASC,EAAU6F,EAAV7F,MAClB+F,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEfL,EAAiB,GAEhBrG,GAAiBC,GACpBoG,EAAeM,MAAK,kBAAMd,EAAYrF,EAASC,EAASC,MAGtDH,GAAekG,GAAWJ,EAAeM,MAAK,kBAAMD,GAAY,MAEpE,IAAMvG,EAAgBG,EAAqBC,EAAaC,EAASC,EAASC,GAEpEkG,EAAY7G,EAAeC,EAAcC,EAAaC,EAAcC,GAG1E,OAFAkG,EAAeM,KAAKC,GAEbP,EGXkBQ,CAA2B,CAChDP,YAAa,CAAEtG,eAAcC,eAC7BsG,aAAc,CAAE/F,UAASC,UAASC,SAClCR,aAAc,EAAKA,aACnBsG,qBAAsB,CACpBC,UAAWtE,EACXuE,YAAa,kBAAM,EAAKpF,MAAMwF,oBAAmB,KAEnDjB,YAAa,EAAKA,YAClBtF,gBAGF,OAAQ0D,GACN,IAAK,QACHoC,EAAeU,SAAQ,SAAAC,GAAE,OAAIA,UArHhB,MAGiE,EAAK1F,MAAtE2F,EAHA,EAGTzG,QAAkC0G,EAHzB,EAGgBzG,QAAgC0G,EAHhD,EAGyCzG,MAHzC,OAKjB,EAAK2C,MAAQ,CACXrD,cAAc,EACdC,aAAa,EACbO,QAASyG,EACTxG,QAASyG,EACTxG,MAAOyG,GAGT,EAAKjH,aAAe,CAClBE,WAAY,EAAKA,WACjBC,WAAY,EAAKA,WACjB2E,UAAW,EAAKA,WAhBD,E,+DA6HAzB,GAAW,IAAD,EAEWC,KAAKH,MAAnCrD,EAFmB,EAEnBA,aAAcC,EAFK,EAELA,YAFK,EAG4BuD,KAAKlC,MAApDa,EAHmB,EAGnBA,aAAcsB,EAHK,EAGLA,iBAAkB2D,EAHb,EAGaA,WAElCC,EAAiD,IAArB7D,KAAKH,MAAM3C,OAAe8C,KAAKlC,MAAMa,aAEjEmF,GAAqC9D,KAAKlC,MAAMmC,mBAAqBzD,IAAiBC,IACzFuD,KAAKH,MAAM3C,QAAU6C,EAAU7C,OAChC8C,KAAKH,MAAM5C,UAAY8C,EAAU9C,SACjC+C,KAAKH,MAAM7C,UAAY+C,EAAU/C,SAYnC,GAVI+C,EAAU6D,aAAeA,GAAY5D,KAAKyC,mBAAmBzC,KAAKlC,MAAM8F,YAExE3D,GAAoBxD,GAAauD,KAAKwB,YAEtC7C,IAAiBoB,EAAUpB,cAAgBnC,GAAcwD,KAAKnD,aAE9DiH,GACF9D,KAAKqC,YAAYtC,EAAU/C,QAAS+C,EAAU9C,QAAS8C,EAAU7C,OAG/D2G,IAA6B7D,KAAKlC,MAAMiG,sBAAsBxD,MAAO,CAAC,IAAD,EAEhCP,KAAKlC,MAAMiG,uBAElDC,EAJuE,EAE/DA,iBAF+D,EAE9CC,UAEEJ,M,+BAIpB,IAAD,SAKJ7D,KAAKH,MAFPrD,EAHM,EAGNA,aACAC,EAJM,EAINA,YAGIO,EAAWgD,KAAKlC,MAAMmC,iBAAoBD,KAAKlC,MAAMd,QAAUgD,KAAKH,MAAM7C,QAC1EC,EAAW+C,KAAKlC,MAAMmC,iBAAoBD,KAAKlC,MAAMb,QAAU+C,KAAKH,MAAM5C,QAC1EC,EAAS8C,KAAKlC,MAAMmC,iBAAoBD,KAAKlC,MAAMZ,MAAQ8C,KAAKH,MAAM3C,MAEtEP,EAAgBG,EAAqBkD,KAAKlC,MAAMf,YAAaC,EAASC,EAASC,GAEjFgH,EHvK4B,SAAC1H,EAAcC,EAAa0H,EAAgBxH,GAE5E,IAEMyH,EAAU,CACZtD,QAHgBvE,EAAeC,EAAcC,EAAa0H,EAAgBxH,IAuB9E,OAjBKH,EAMOC,GAOR2H,EAAQ/C,KAAO,WACf+C,EAAQ/H,UAAY,gCANpB+H,EAAQ/C,KAAO,QACf+C,EAAQ/H,UAAY,gCAPpB+H,EAAQ/C,KAAO,QACf+C,EAAQ/H,UAAR,UAAwBM,EAAiB,WAAa,gBAcnDyH,EG8IgBC,CAAqB7H,EAAcC,EAAauD,KAAKtD,aAAcC,GACpF2H,EAAiB,CAAEnF,IAAK,SAAAoF,GAAE,OAAI,EAAK3B,oBAAsB2B,IAG/D,OAFAL,EAAmBjF,OAAOC,OAAOgF,EAAkBI,GAGjD,yBAAKE,GAAIxE,KAAKlC,MAAM2G,mBAAoBC,kBAAiB1E,KAAKlC,MAAM2G,mBAAoBE,KAAK,YAC3F,yBAAKA,KAAK,QAAQtI,UAAU,kBAC1B,kBAAC,EAAD,CACEW,QAASA,EACTC,QAASA,EACTC,MAAOA,EACPH,YAAaiD,KAAKlC,MAAMf,YACxB2B,aAAcsB,KAAKlC,MAAM8G,cACzBjG,aAAcqB,KAAKlC,MAAMa,aACzBsB,iBAAkBD,KAAKlC,MAAMmC,iBAC7BC,kBAAmBF,KAAKlC,MAAMoC,kBAC9B3B,2BAA4ByB,KAAKlC,MAAMS,6BAExCyB,KAAKlC,MAAM+G,SACZ,kBAAC,EAAD,CAAazI,eAAgB4D,KAAKlC,MAAMiG,sBAAsBxD,SAEhE,kBAAC,EAAD,CACEY,YAAa+C,EACb9C,aAAc,CACZN,QAASd,KAAKwB,UACdH,KAAM,QACNhF,UAAU,gBAAD,OAAmBG,EAAgB,iBAAmB,mB,GAnMvDsI,IAAM9D,WA8N1BM,EAAML,aAAe,CACjBjE,QAAS,EACTC,QAAS,EACTC,MAAO,EACPH,aAAa,EACb4B,cAAc,GAGH2C,QC/BAyD,E,kDA3MX,WAAYjH,GAAQ,IAAD,uBACf,cAAMA,IAqBVkH,cAAgB,SAACC,GAGb,GLWD,SAA0BxH,GAE7B,GAA2B,MAAvBA,EAAIA,EAAIyH,OAAQ,GAAY,OAAO,EAEvC,IAAMC,EAAepD,OAAOtE,GAE5B,OAAIsE,OAAOqD,MAAMD,MAEZpD,OAAOC,UAAUmD,GKpBIE,CAAgBJ,EAAGhH,OAAOsC,OAChD,CAEA,IAAMA,EAAQ0E,EAAGhH,OAAOsC,MAAM5C,WAE9B,GAAI4C,EAAO,CAEP,IAAM+E,EAAY,CACdtI,SAAUuD,EAAMA,EAAM2E,OAAS,IAAM,IAAM3E,EAAMA,EAAM2E,OAAS,IAAM,GACtEjI,SAAUsD,EAAMA,EAAM2E,OAAS,IAAM,IAAM3E,EAAMA,EAAM2E,OAAS,IAAM,GACtEhI,OAAQqD,EAAMA,EAAM2E,OAAQ,IAAM,IAAM3E,EAAMA,EAAM2E,OAAQ,IAAM,IAGhEK,EAAchF,EAAM2E,QAAU,EAAK3E,EAAMI,MAAMJ,EAAM2E,OAAS,EAAG3E,EAAM2E,QAAU3E,EAEvF,EAAKlC,SAAS,CACVkH,WAAYA,EACZC,cAAeF,EAAUtI,QACzByI,cAAeH,EAAUrI,QACzByI,YAAaJ,EAAUpI,aAG3B,EAAKmB,SAAS,CACVkH,WAAY,GACZC,aAAc,EACdC,aAAc,EACdC,WAAY,MAlDL,EAuDnBC,mBAAqB,WAAO,IAAD,EAC2B,EAAK9F,MADhC,EAEY1C,EAFZ,EACfqI,aADe,EACDC,aADC,EACaC,YAC5B1I,EAFe,EAEfA,QAASC,EAFM,EAENA,QAASC,EAFH,EAEGA,MAE1B,EAAKmB,SAAS,CACVmH,aAAcxI,EACdyI,aAAcxI,EACdyI,WAAYxI,KA9DD,EAkEnBoG,mBAAqB,WAA8C,IAA7C3E,EAA4C,wDAA5B,EAAKkB,MAAMlB,aAExCA,GACD,EAAKgH,qBAGJhH,GAAgB+D,SAASC,gBAAkB,EAAKiD,cAAcC,SAC/D,EAAKD,cAAcC,QAAQC,OAG/B,EAAKzH,SAAS,CACVM,aAAcA,EACd4G,WAAY,MA9ED,EAkFnBhH,2BAA6B,SAAAwH,GACzB,GAAK,EAAKlG,MAAM0F,WAAWL,OAA3B,CAEA,IAAM3E,EAAQ,EAAKV,MAAM0F,WAAWL,OAASa,EAC7C,EAAKH,cAAcC,QAAQG,kBAAkBzF,EAAOA,KAtFrC,EAyFnB0F,aAAe,WAEPvD,SAASC,gBAAkB,EAAKiD,cAAcC,UAG9C,EAAKhG,MAAMqG,wBAEX,EAAK7H,SAAS,CAAE6H,yBAAyB,KAI7C,EAAK5C,oBAAmB,GACxB,EAAKjF,SAAS,CAAEuG,cAAe,UArGhB,EA0GnBuB,cAAgB,WAEZ,IAAK,EAAKtG,MAAMlB,aAKZ,OAHA,EAAK2E,oBAAmB,QACxB,EAAKsC,cAAcC,QAAQO,SA/GhB,EAqHnBC,kBAAoB,WACX,EAAKxG,MAAMqG,yBAAyB,EAAK7H,SAAS,CAAE6H,yBAAyB,KAtHnE,EAyHnBI,cAAgB,SAACrB,GAEc,SAAvBA,EAAGhH,OAAOsI,UAAqB,EAAKlI,SAAS,CAAEuG,cAAeK,EAAGhH,SAEhE,EAAK4B,MAAMlB,cAAc,EAAK2E,oBAAmB,GAEtD,EAAKsC,cAAcC,QAAQO,QAC3B,EAAK/H,SAAS,CAAE6H,yBAAyB,KAhI1B,EAoInBhG,kBAAoB,SAAC+E,GAEjB,IAOyBuB,EAPnBC,EAAiB,CACnB,KAAQ,EAAKR,aACb,MAAS,EAAKK,cACd,MAAS,EAAKH,cACd,UAAa,EAAKE,mBAMtB,OAHyBG,EACOvB,EAAGyB,KADAD,EAAeD,IAGnCvB,IA7If,EAAKW,cAAgBd,IAAM6B,YAHZ,MASP,EAAK7I,MAHA2F,EANE,EAMXzG,QACS0G,EAPE,EAOXzG,QACO0G,EARI,EAQXzG,MARW,OAWf,EAAK2C,MAAQ,CACT0F,WAAY,GACZ5G,cAAc,EACd6G,aAAc/B,EACdgC,aAAc/B,EACdgC,WAAY/B,EACZuC,yBAAyB,EACzBtB,cAAe,MAlBJ,E,qDAoJR,IAAD,EASF5E,KAAKH,MANLlB,EAHE,EAGFA,aACA4G,EAJE,EAIFA,WACAG,EALE,EAKFA,WACAD,EANE,EAMFA,aACAD,EAPE,EAOFA,aACAZ,EARE,EAQFA,cAGJ,OACI,kBAAC,EAAD,CACI1H,MAAOwI,EACPzI,QAASwI,EACTzI,QAASwI,EACTzI,aAAa,EACb6H,cAAeA,EACfjG,aAAcA,EACdsB,iBAAkBsF,EAAWL,OAC7BhF,kBAAmBF,KAAKE,kBACxBoD,mBAAoBtD,KAAKsD,mBACzB7B,aAAczB,KAAKlC,MAAM2D,aACzBmC,WAAY5D,KAAKlC,MAAM8F,WACvBrF,2BAA4ByB,KAAKzB,2BACjCyF,gBAAiBhE,KAAKlC,MAAMkG,gBAC5BD,sBAAuB/D,KAAKlC,MAAMiG,sBAClCU,mBAAoBzE,KAAKlC,MAAM2G,oBAE/B,2BACImC,SAAU,EACVzH,IAAKa,KAAK4F,cACViB,OAAQ7G,KAAKE,kBACb4G,QAAS9G,KAAKE,kBACdwG,KAAK,OACLK,SAAU/G,KAAKgF,cACf3I,UAAW,cACXkE,MAAOgF,S,GA3LPT,IAAM9D,WCFpBgG,G,8DAEJ,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IAsBRmJ,qBAAuB,SAAChC,GAItB,OAFI,EAAKnH,MAAMoJ,yBAAyBjC,EAAGkC,YAAYC,2BAE/CnC,EAAGxE,KACT,IAAK,SACH,OAAO,EAAK3C,MAAMuJ,WAAWpC,GAC/B,IAAK,QACH,OAAO,EAAKnH,MAAMwJ,kBAAkBrC,KA5BxC,EAAKsC,WAAa,KAElB,EAAKC,YAAc,SAAApJ,GACjB,EAAKmJ,WAAanJ,GAGpB,EAAKqJ,SAAW,WACd,EAAKF,WAAWnB,SAVD,E,+DAcArG,GAEbC,KAAKlC,MAAM4J,YAAc3H,EAAU2H,aAAe1H,KAAKlC,MAAM4J,YAE/D1H,KAAKyH,a,+BAoBC,IAAD,SAEkDzH,KAAKlC,MAAtD4J,EAFD,EAECA,WAAY7C,EAFb,EAEaA,SAAU8C,EAFvB,EAEuBA,MAAOC,EAF9B,EAE8BA,gBAErC,OACE,yBACEjD,KAAK,SACLD,kBAAgB,mBAChBmD,mBAAiB,cACjB1I,IAAKa,KAAKwH,YACVZ,SAAU,EACVvK,UAAS,kCAA8BqL,EAAc,YAAc,GAA1D,YAAiEE,EAAmB,GAAK,gBAClGE,UAAW,SAAC7C,GAAD,OAAQ,EAAKgC,qBAAqBhC,KAC7C,yBAAK5I,UAAU,gBACb,yBAAKA,UAAU,uBACb,wBAAImI,GAAG,mBAAmBnI,UAAU,cAAcsL,IAEnD9C,Q,GAzDS7D,cAyEpBgG,EAAM/F,aAAe,CACnB0G,MAAO,QACPD,YAAY,EACZE,iBAAiB,GAGJZ,Q,wICzETe,EAAkB,CACpB,CACIC,KAAM,YACNC,IAAKC,KAET,CACIF,KAAM,cACNC,IAAKE,KAET,CACIH,KAAM,gBACNC,IAAKG,KAET,CACIJ,KAAM,uBACNC,IAAKI,KAET,CACIL,KAAM,eACNC,IAAKK,KAET,CACIN,KAAM,eACNC,IAAKM,KAET,CACIP,KAAM,eACNC,IAAKO,KAET,CACIR,KAAM,WACNC,IAAKQ,M,sDC/BPC,EAAoB,SAAAjL,GACtB,OAASA,EAAM,IAAMA,EAAM,IAAM,GAC/BA,EAAM,IAAMA,EAAM,KAAO,GACzBA,EAAM,KAAOA,EAAM,KAAO,GA+HjBkL,E,kDA3HX,WAAY7K,GAAQ,IAAD,uBACf,cAAMA,IAYV8K,yBAA2B,SAAC3D,GAAD,OAAQ,EAAK5G,SAAS,CAAEwK,kBAAmB5D,EAAGhH,OAAOsC,SAb7D,EAenBuI,kBAAoB,SAAC7D,EAAI1E,GAChB0E,GAEL,EAAK5G,SAAS,CAAE0K,uBAAwBxI,KAlBzB,EAqBnByI,4BAA8B,WAE1B,EAAKC,QAAQC,YAAc,EAC3B,EAAKD,QAAQE,QAxBE,EA2BnB7B,kBAAoB,kBAAM,EAAKxJ,MAAMuJ,cA3BlB,EA6BnBA,WAAa,SAACpC,GAAD,OAAQ,EAAKnH,MAAMuJ,WAAWpC,GAAI,IA1B3C,IAAImE,EAAmD,IAA7B,EAAKtL,MAAMuL,cAAZ,UACrB,EAAKvL,MAAMuL,cADU,qBAErB,EAAKvL,MAAMuL,cAFU,YAHV,OAOf,EAAKxJ,MAAQ,CACTgJ,kBDjBiB,YCkBjBE,uBAAwBK,GATb,E,+DA+BArJ,IAEgB,IAA3BA,EAAU0B,eAAsD,IAA5BzB,KAAKlC,MAAM2D,cAC/CzB,KAAKgJ,gC,+BAIH,IAAD,SAEiDhJ,KAAKH,MAAnDkJ,EAFH,EAEGA,uBAAwBF,EAF3B,EAE2BA,kBAK1BS,EADgBvB,EAAgBwB,MAAK,SAACC,EAAMC,GAAP,OAFnBC,EAEkDF,EAAKxB,KAFhD2B,EAEsDF,EAAKzB,KAF/C0B,EAAQC,EAAS,EAAKD,EAAQC,GAAU,EAAI,EAAhE,IAACD,EAAOC,KAGF7K,KAAI,WAAWwB,GAAO,IAAf0H,EAAc,EAAdA,KAEhC,OAAO,kBAAC4B,EAAA,EAAD,CAAUnJ,IAAKH,EAAGC,MAAOyH,GAAzB,IAAiCA,EAAjC,QAGE6B,EAAqB9B,EAAgB5J,MAAK,qBAAG6J,OAAoBa,KAAtEZ,IACF6B,ERnEP,SAAoCC,EAAYC,GAuBnD,IArBA,IAAMC,EAAuB,GAEvBC,EAAW,SAACC,EAAQC,GAEtB,IAAMC,EACM,SAINC,EAAiB,SAAC7M,EAAKqC,GAAN,gBAAkBrC,EAAlB,YADP,SAACA,EAAKqC,GAAN,OAAwB,IAARrC,EAAaqC,EAAd,UAAwBA,EAAxB,KACiByK,CAAQ9M,EAAKqC,KAEvD0K,EAAeF,EAAeF,EAL1B,QAMJK,EAAiBH,EAAeH,EAAQE,GAE9C,OAAKD,EAEAD,EAEC,GAAN,OAAUK,EAAV,YAA0BC,GAFND,EAFFC,GAOZhN,EAAM,EAAGA,GAAOsM,EAAYtM,IAAO,CAIzC,IAF0BuM,EAAqBvM,GAE/C,CAEA,IAGMiN,EAAQR,EAFIzM,EAAM,GADRkN,SAASlN,EAAI,KAK7BwM,EAAqB9G,KAAK,CACtBuH,MAAOA,EACPnK,MAAO9C,KAIf,OAAOwM,EQ2BuBW,CA5DJ,IA4DsDlC,GAE5E,OACI,kBAAC,EAAD,CACIf,MAAO,WACPD,WAAY1H,KAAKlC,MAAM4J,WACvBL,WAAYrH,KAAKqH,WACjBC,kBAAmBtH,KAAKsH,kBACxBJ,wBAAyBlH,KAAKlC,MAAMoJ,yBAEpC,yBAAK7K,UAAU,kBACX,kBAACwO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYtG,GAAG,uBAAf,SACA,kBAACuG,EAAA,EAAD,CACIC,QAAQ,sBACRxG,GAAG,gBACHjE,MAAOP,KAAKH,MAAMgJ,kBAClB9B,SAAU/G,KAAK4I,0BAEdU,KAIb,4BAAQjN,UAAU,kBACd,sDACA,2BAAO8C,IAAK,SAAAG,GAAC,OAAI,EAAK2J,QAAU3J,GAAG2I,IAAK4B,EAAkBoB,UAAQ,GAAlE,oCAEI,uCAFJ,cAKJ,yBAAK5O,UAAS,yBAAqB2D,KAAKlC,MAAMoN,UAAa,OAAS,KAChE,kBAAC,IAAD,CACI1G,GAAG,YACH2G,QAASrB,EACTsB,kBAAmB,SAACC,EAAD,OAAW9K,EAAX,EAAWA,MAAX,OAAuB8K,EAAO9K,QAAUA,GAC3D+K,eAAgB,SAACD,GAAD,OAAYA,EAAOX,OACnC3D,SAAU/G,KAAKlC,MAAMyN,oBACrBvG,cAAe,SAACC,EAAI1E,GAAL,OAAe,EAAKuI,kBAAkB7D,EAAI1E,IACzDgF,WAAYwD,EACZyC,mBAAmB,EACnBC,uBAAuB,EACvBC,WAAW,EACXC,YAAa,SAACC,GAAD,OAAY,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBlB,MAAM,aAAaoB,QAAQ,kBAGnF,yBAAKzP,UAAU,2BACX,4BACIA,UAAS,qCAAiC2D,KAAKlC,MAAMoN,UAAa,OAAS,IAC3EpK,QAAS,SAACmE,GAAD,OAAQ,EAAKoC,WAAWpC,GAAI,KAFzC,UAKA,4BAAQ5I,UAAU,+BAA+ByE,QAASd,KAAKsH,mBAA/D,sB,GAvGMtG,aCd1B,SAAS+K,GAAT,GAII,IAJuF,IAArEC,EAAoE,EAApEA,WAAYC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,UAErEC,EAAU,GAFwE,WAI7E/L,GAEL,IAAIgM,EAAcJ,EAAY5L,GAAM4L,EAAY5L,GAAK,SAErD+L,EAAQlJ,KACJ,4BACI1C,IAAKH,EACLsG,SAAU,EACVjC,KAAK,MACL4H,gBAAgBH,IAAc9L,EAC9BkM,gBAAA,eAAuBlM,EAAI,GAC3BjE,UAAS,kBAAc2P,EAAWS,OAAUT,EAAWS,OAAS,GAAvD,YAA8DT,EAAWK,QAAQ/L,GAAK0L,EAAWK,QAAQ/L,GAAK,IACvHQ,QAAS,kBAAMmL,EAAY3L,KAE1BgM,KAdJhM,EAAI,EAAGA,EAAI6L,EAAiB7L,IAAM,EAAlCA,GAmBT,OACI,yBAAKqE,KAAK,UAAU+H,aAAW,iBAAiBrQ,UAAS,wBAAoB2P,EAAWW,UAAaX,EAAWW,UAAY,KACvHN,GAiBbN,GAAW9K,aAAe,CACtBkL,gBAAiB,EACjBH,WAAY,CACRW,UAAW,GACXF,OAAQ,GACRJ,QAAS,CAAC,MAIHN,U,oBCzBAa,OAzBf,YAAwE,IAAzC1B,EAAwC,EAAxCA,UAAW2B,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YAEpD,OACI,yBAAKzQ,UAAU,uBACX,0BAAMA,UAAS,kCAA8B6O,EAAa,SAAW,KAArE,cACgB2B,EADhB,IACiD,IAAjBA,EAAsB,SAAW,WAEjE,yBAAKxQ,UAAU,qBACX,4BAAQA,UAAU,kBAAkByE,QAASgM,GACzC,gCACI,yBAAK7E,IAAK8E,KAAa1Q,UAAU,eAAe2Q,IAAI,gBAAgBC,OAAO,KAAKC,MAAM,SAG9F,0BAAM7Q,UAAU,WAAhB,eCdhB,SAAS8Q,GAAT,GAAqE,IAAzCrM,EAAwC,EAAxCA,QAAwC,IAA/BkL,kBAA+B,MAAlB,GAAkB,EAAdM,EAAc,EAAdA,WAElD,OACI,yBAAKjQ,UAAS,iCAA4B2P,EAAWW,UAAvC,MACV,4BAAQ7L,QAASA,EAASzE,UAAS,UAAK2P,EAAWS,SAAWH,IAe1Ea,GAAiBlM,aAAe,CAC5BqL,WAAY,qBACZN,WAAY,CACRW,UAAW,GACXF,OAAQ,KAIDU,UCyKAC,G,kDA9LX,WAAYtP,GAAQ,IAAD,uBACf,cAAMA,IAqBVuP,gBAAkB,SAAAzG,GAAQ,OAAI,EAAKvI,SAAS,CAAE+N,UAAWxF,KAtBtC,EAwBnBkG,YAAc,SAAC7H,GAAwB,IAApBqI,IAAmB,2DAES,EAAKzN,MAAxC0N,EAF0B,EAE1BA,aAAcC,EAFY,EAEZA,mBAEhBF,GAAWC,GAAkBA,GAAqC,KAArBC,IAC/C,EAAKnP,SAAS,CAAEmP,iBAAkB,EAAK3N,MAAMgN,eAGjD,EAAKxO,SAAS,CACVkP,cAAeA,EACfE,gBAAiB,EAAK5N,MAAM4N,kBAlCjB,EAsCnBC,gBAAkB,WAEd,EAAKrP,SAAS,CAAEsP,cAAe,EAAK9N,MAAM8N,gBAxC3B,EA2CnB3J,gBAAkB,SAACnE,EAAOU,GAAR,OAAkB,EAAKlC,SAAL,eAAiBwB,EAAQU,KA3C1C,EA6CnBkB,aAAe,kBAAM,EAAKpD,SAAS,CAAEoD,cAAc,KA7ChC,EA+CnBmM,cAAgB,gBAAGnN,EAAH,EAAGA,IAAH,OAAa,EAAKpC,SAAS,CAAEuF,WAAYnD,KA/CtC,EAiDnBoN,kBAAoB,SAAC5I,EAAI6I,GAErB,IAAMvN,EAASuN,EAAqBA,EAAkBvN,MAAQ,GAE9D,EAAKlC,SAAS,CACVmP,iBAAkBjN,KAtDP,EA0DnBwN,kBAAoB,SAAC9I,GAEbA,EAAGhH,SAAW+P,QACd,EAAK3P,SAAS,CAAE4P,YAAY,KA1DhC,EAAKC,iBAAmBpJ,IAAM6B,YAHf,OAOf,EAAK9G,MAAQ,CACTuM,UAAW,EACX+B,gBAAiB,KACjB1M,cAAc,EACdwM,YAAY,EACZG,qBAAqB,EACrBC,yBAAyB,EACzBd,cAAc,EACdC,iBAV6B,EAW7BC,gBAAgB,EAChBZ,aAZ6B,EAa7Bc,cAAc,GAlBH,E,gEAmEfjL,SAAS4L,iBAAiB,UAAWtO,KAAK4N,iB,6CAI1ClL,SAAS6L,oBAAoB,UAAWvO,KAAK4N,iB,yCAG9B7N,EAAWyO,GAAY,IAAD,EAEMxO,KAAKH,MAAxC0N,EAF6B,EAE7BA,aAAcC,EAFe,EAEfA,iBAElBxN,KAAKH,MAAM+D,YAAY5D,KAAK3B,SAAS,CAAEuF,WAAY,OAEnD5D,KAAKH,MAAM4B,cAAczB,KAAK3B,SAAS,CAAEoD,cAAc,IAEvD+M,EAAUjB,eAAiBA,GAAcvN,KAAK3B,SAAS,CAAEwO,cAAeW,M,+BAGrE,IAAD,SAYFxN,KAAKH,MAVLuM,EAFE,EAEFA,UACAxI,EAHE,EAGFA,WACAnC,EAJE,EAIFA,aACAoL,EALE,EAKFA,aACAuB,EANE,EAMFA,oBACAC,EAPE,EAOFA,wBACAZ,EARE,EAQFA,eACAF,EATE,EASFA,aACAC,EAVE,EAUFA,iBACAG,EAXE,EAWFA,aAGEzC,GAAckB,EAIdqC,EAAsB,SAACC,GACzB,MAAO,CACH1K,gBAAiB,SAACnE,EAAOU,GAAR,OAAkB,EAAKyD,gBAAgBnE,EAAOU,IAC/D0D,UAAYyK,EAAW,sBAAwB,0BAC/CnO,MAAQmO,EAAWN,EAAsBC,IAI3CM,EAAoB,CACtBhC,UAXoBzB,GAAakD,IAA0BlD,GAAamD,EAW5C,eAAiB,GAC7ChC,QAAS,IAKb,OAFAsC,EAAkBtC,QAAQD,GAAa,cAGnC,yBAAK/P,UAAS,wBAAoBsR,EAAgB,gBAAkB,KAChE,yBAAK7M,QAASd,KAAK8M,YAAazQ,UAAS,uBAAmBoR,EAAkB,cAAgB,MAC9F,kBAAC,EAAD,CACIvG,yBAAyB,EACzBzF,aAAcA,EACd4F,WAAYrH,KAAK8M,YACjBpF,WAAY6F,EACZlE,cAAemE,EACfjC,oBAAqBvL,KAAK6N,kBAC1B3C,UAAWA,IAEf,yBAAK7O,UAAU,gBACX,kBAAC,GAAD,CACIyE,QAASd,KAAK0N,gBACdpB,WAAaqB,EAAgB,gBAAkB,iBAEnD,0BAAMtR,UAAU,mBACR,kBAAC,GAAD,CACI+P,UAAWA,EACXH,YAAajM,KAAKqN,gBAClBlB,gBAAiB,EACjBD,YAAa,CAAC,QAAS,aACvBF,WAAY2C,IAEhB,iCACI,yBAAKtS,UAAU,SACX,yBAAKA,UAAS,UAAM6O,EAAa,GAAK,SAClC,kBAAC,EAAD,CACItH,WAAasH,EAAatH,EAAa,KACvCnC,aAAczB,KAAKyB,aACnBvE,MAAO,EACPD,QAAS,GACTD,QAAS,EACT+G,sBAAuB0K,GAAoB,GAC3ChK,mBAAoB,aAG5B,yBAAKpI,UAAS,UAAM6O,EAAa,OAAS,KACtC,kBAAC,EAAD,CACItH,WAAasH,EAAa,KAAOtH,EACjCnC,aAAczB,KAAKyB,aACnBvE,MAAO,EACPD,QAAS,EACTD,QAAS,EACTiF,UAAW4K,EACX9I,sBAAuB0K,GAAoB,GAC3ChK,mBAAoB,eAKpC,kBAAC,GAAD,CACIyG,UAAWA,EACX2B,aAAcA,EACdC,YAAa9M,KAAK8M,gBAIlC,gCACI,mDAEI,uBAAG8B,KAAK,mCAAR,gBAFJ,cAII,uBAAGA,KAAK,uBAAR,kB,GAxLN9J,IAAM9D,WCFxB6N,IAASC,OACL,kBAAC,GAAD,MACFpM,SAASqM,eAAe,W","file":"static/js/main.00e78fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/long-bell.f3aa308a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bowl-struck.2e1feb19.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bell4.68b60366.mp3\";","module.exports = __webpack_public_path__ + \"static/media/buddhist-prayer-bell.fa1328fc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gong-burmese.368c1978.wav\";","module.exports = __webpack_public_path__ + \"static/media/gong-chinese.b8a8b3be.wav\";","module.exports = __webpack_public_path__ + \"static/media/tingsha.760cc3b2.wav\";","module.exports = __webpack_public_path__ + \"static/media/zen-bell.85f7bec3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cog-solid.9f07a3df.svg\";","import React from 'react';\nimport PropTyes from 'prop-types';\n\nfunction ClockLabels({ hoursDisplayed }) {\n    return (\n      <div className='titlesContainer'>\n        <div className={`titleSpan ${(hoursDisplayed) ? '' : 'hide'}`}>HOURS</div>\n        <div className='titleSpan'>MINUTES</div>\n        <div className='titleSpan'>SECONDS</div>\n      </div>\n    );\n  }\n\n  ClockLabels.propTypes = {\n      hoursDisplayed: PropTyes.bool,\n  };\n\n  export default ClockLabels;","export const noop = () => {};\n\nexport function getNumberWithTimeUnitLabel(maxMinutes, notIncludedNumbersCb) {\n    \n    const minutesAndHoursArray = [];\n\n    const getLabel = (minute, hour) => {\n\n        const units = {\n            minute: 'minute',\n            hour: 'hour',\n        };\n        const setUnit = (num, unit) => (num === 1) ? unit : `${unit}s`;\n        const getNumWithUnit = (num, unit) => `${num} ${setUnit(num, unit)}`;\n\n        const hourWithUnit = getNumWithUnit(hour, units.hour);;\n        const minuteWithUnit = getNumWithUnit(minute, units.minute);\n\n        if (!hour) return minuteWithUnit;\n\n        if (!minute) return hourWithUnit;\n\n        return `${hourWithUnit} ${minuteWithUnit}`;\n    }\n\n    for ( let num = 1; num <= maxMinutes; num++) {\n\n        const numberNotIncluded = notIncludedNumbersCb(num);\n\n        if (numberNotIncluded) continue;\n\n        const hourNum = parseInt(num/60);\n        const minuteNum = num % 60;\n\n        const label = getLabel(minuteNum, hourNum);\n\n        minutesAndHoursArray.push({\n            label: label,\n            value: num,\n        });\n    }\n\n    return minutesAndHoursArray;\n};\n\nexport function isNaturalNumber (num) {\n\n    if (num[num.length -1] === '.') return false;\n\n    const numberToTest = Number(num);\n\n    if (Number.isNaN(numberToTest)) return false;\n\n    if (!Number.isInteger(numberToTest)) return false;\n\n    return true;\n};","import { noop } from '../../generalFunctions.js'\n\nexport const getClockMethod = (clockStarted, clockPaused, clockMethods, isTimerInZero = false) => {\n\n    const { startClock, pauseClock } = clockMethods;\n\n    if (isTimerInZero) return noop;\n\n    if (clockStarted && !clockPaused) return pauseClock;\n\n    return startClock;\n};\n\nexport const checkIfTimerIsInZero = (isCountDown, seconds, minutes, hours) => (isCountDown && seconds === 0 && minutes === 0 && hours === 0);\n\nexport const getSettingsForButton = (clockStarted, clockPaused, onClickMethods, isTimerInZero) => {\n\n    const clockMethod = getClockMethod(clockStarted, clockPaused, onClickMethods, isTimerInZero);\n\n    const btnInfo = {\n        onClick: clockMethod,\n    };\n\n    if (!clockStarted) {\n\n        btnInfo.text = 'Start';\n        btnInfo.className = `${(isTimerInZero) ? 'notAllow' : 'startButton'}`;\n\n\n    } else if (!clockPaused) {\n\n        btnInfo.text = 'Pause';\n        btnInfo.className = 'warningButton animateToLeft';\n\n    } else {\n\n        btnInfo.text = 'Continue';\n        btnInfo.className = 'successButton animateToLeft';\n    }\n\n    return btnInfo;\n  \n};\n\nexport const setNextSecondAndNextMinute = (isCountDown, seconds, minutes, hours) => {\n\n    let nextSecond = seconds;\n    let nextMinute = minutes;\n    let nextHour = hours;\n\n    if (isCountDown) {\n\n      if (nextSecond === 0) {\n\n        nextSecond = 59;\n\n        if (nextMinute === 0) {\n\n          nextMinute = 59;\n          nextHour--;\n\n        } else {\n\n          nextMinute--;\n\n        }\n      } else {\n\n        nextSecond--;\n\n      }\n\n    } else {\n\n      if (nextSecond === 59) {\n\n        nextSecond = 0;\n\n        if (nextMinute === 59) {\n\n          nextMinute = 0;\n          nextHour++;\n\n        } else {\n\n        nextMinute++;\n\n        }\n      } else {\n\n        nextSecond++;\n\n      }\n    }\n\n    return {\n        nextSecond,\n        nextMinute,\n        nextHour,\n    }\n};\n\nexport const getMethodsForEnterPressing = ({\n  clockStatus,\n  clockByUnits, \n  clockMethods,\n  setNewTimer, \n  focusOnInputSettings, \n  isCountDown\n}) => {\n\n  const { clockStarted, clockPaused } = clockStatus;\n  const { seconds, minutes, hours } = clockByUnits;\n  const { isFocused, handleFocus } = focusOnInputSettings\n\n  let arrayOfMethods = [];\n\n  if (!clockStarted && !clockPaused) {\n    arrayOfMethods.push(() => setNewTimer(seconds, minutes, hours));\n  }\n\n  if (isCountDown && isFocused) arrayOfMethods.push(() => handleFocus(false));\n\n  const isTimerInZero = checkIfTimerIsInZero(isCountDown, seconds, minutes, hours);\n\n  const keyMethod = getClockMethod(clockStarted, clockPaused, clockMethods, isTimerInZero);\n  arrayOfMethods.push(keyMethod);\n\n  return arrayOfMethods;\n};\n\nexport function convertOrdinaryNumbersInTimeNumbers(numOfSeconds = 0, numOfMinutes = 0, numOfHours = 0, convertHours = true) {\n\n  let seconds = numOfSeconds,\n      minutes = numOfMinutes,\n      hours = numOfHours;\n\n  if (seconds <= 60 && minutes <= 60) return { seconds, minutes, hours };\n\n  if (seconds > 60) {\n      seconds -= 60;\n      minutes += 1;\n  }\n\n  if (convertHours && minutes > 60) {\n      minutes -= 60;\n      hours += 1;\n  }\n\n  if (hours > 99) {\n\n      hours = 99;\n      minutes = 59;\n      seconds = 59;\n      \n  }\n\n  return {\n      seconds,\n      minutes,\n      hours,\n  };\n};\n\nexport const addLeadingZero = num => {\n  const stringNum = num.toString();\n\n  return (num < 10) ? ['0', stringNum] : [stringNum[0], stringNum[1]];\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\nimport { addLeadingZero } from './clock-functions.js';\nimport { noop } from '../../generalFunctions.js';\n\nconst TIME_UNITS = {\n    seconds: 'seconds',\n    minutes: 'minutes',\n    hours: 'hours',\n}\n\nclass NumbersOfClock extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            activeSpan: null,\n        };\n\n        this.spanRefsSettings = [\n            {\n                positionInClockRightToLeft: 6,\n                ref: 'secondDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 5,\n                ref: 'firstDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 4,\n                ref: 'secondDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 3,\n                ref: 'firstDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 2,\n                ref: 'secondDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n            {\n                positionInClockRightToLeft: 1,\n                ref: 'firstDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n        ]\n    }\n\n    removeClassOfSpanExceptTargeted = (spanRefsArr, target) => {\n\n        let targetSpan = spanRefsArr.find(({ element }) => element === target);\n\n        if ( !targetSpan ) return this.setState({ activeSpan: null })\n\n        this.setState({ activeSpan: targetSpan.element});\n        this.props.setPositionOfCursorInInput(targetSpan.positionInClockRightToLeft - 1);\n\n        return;\n\n    };\n\n    selectBorderForSpan = () => {\n\n        const { spanToBorder, focusOnInput } = this.props;\n\n        const spanRefs = this.spanRefsSettings.map((spanSettings) => {\n            const cloneObj = Object.assign({}, spanSettings);\n            const { positionInClockRightToLeft, ref} = cloneObj;\n\n            cloneObj.element = this[ref];\n            cloneObj.defaultSelectedSpan = (positionInClockRightToLeft === 1)\n            \n            return cloneObj;\n        });\n\n        if (!focusOnInput) {\n            this.removeClassOfSpanExceptTargeted(spanRefs, null);\n\n            return;\n        }\n\n        const spanElements = spanRefs.map(e => e.element)\n        const activeSpan = spanElements.find( elem => (elem.classList.contains('activeSpan')) ? elem : undefined);\n        const isSpanAvailableToBorder = (spanToBorder) ? spanToBorder.classList.contains('defaultSpanColor') : false;\n\n        if ( (activeSpan && !isSpanAvailableToBorder) ||\n        (activeSpan && !spanToBorder) ||\n        (spanToBorder && !spanElements.includes(spanToBorder))) return;\n\n        if ( (!activeSpan && !spanToBorder) || (!activeSpan && !isSpanAvailableToBorder) ) {\n\n            const { element: targetSpan } = spanRefs.find(({ defaultSelectedSpan }) => (defaultSelectedSpan === true));\n\n            this.removeClassOfSpanExceptTargeted(spanRefs, targetSpan);\n\n            return;\n        }\n\n        this.removeClassOfSpanExceptTargeted(spanRefs, spanToBorder);\n    };\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.spanToBorder !== this.props.spanToBorder ||\n            prevProps.focusOnInput !== this.props.focusOnInput) {\n            \n            this.selectBorderForSpan();\n        }\n    }\n\n    render () {\n        \n        const { hours, focusOnInput, inputValueLength, handleClockEvents, isCountDown } = this.props;\n        const { activeSpan } = this.state;\n\n        const numbersByUnit = {\n            [TIME_UNITS.seconds]: addLeadingZero(this.props.seconds),\n            [TIME_UNITS.minutes]: addLeadingZero(this.props.minutes),\n            [TIME_UNITS.hours]: addLeadingZero(this.props.hours),\n        };\n\n        const spanRefsSettings = this.spanRefsSettings.map((obj, i) => {\n            const cloneObj = Object.assign({}, obj);\n\n            const unitArray = numbersByUnit[obj.unit];\n            const value = unitArray[i % 2];\n\n            cloneObj.value = value\n\n            return cloneObj;\n        });\n\n        const clockSpans = spanRefsSettings.map(({ \n            positionInClockRightToLeft: inputLength,\n            ref,\n            value,\n        }) => {\n        return <span\n            key={ref}\n            ref={e => this[ref] = e}\n            className={\n                `${(activeSpan === this[ref]) ? 'activeSpan' : ''} ${(focusOnInput && inputValueLength < inputLength) ?\n                'withoutInputValue' : (isCountDown) ? 'defaultSpanColor' : ''}`\n            } \n        >\n            {value}\n        </span>\n    });\n\n        const hoursToDisplay = clockSpans.slice(0,2)\n        const minutesToDisplay = clockSpans.slice(2, 4);\n        const secondsToDisplay = clockSpans.slice(4, 6);\n\n        return (\n            <div \n                className={`numbersContainer ${(!focusOnInput && isCountDown) ? 'clockDefined' : ''}`}\n                onClick={handleClockEvents}\n                onMouseDown={handleClockEvents}\n            >   \n                <div className={`hoursContainer ${(hours === 0 && !focusOnInput) ? 'hide' : ''}`}>\n                    <div className='numbers'>{hoursToDisplay}</div>\n                    <div className='numbers'>:</div>\n                </div>\n                <div className='numbers'>{minutesToDisplay}</div>\n                <div className='numbers'>:</div>\n                <div className='numbers'>{secondsToDisplay}</div>\n            </div>\n        );\n    }\n}\n\nNumbersOfClock.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    isCountDown: PropTypes.bool,\n    spanToBorder: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    setPositionOfCursorInInput: PropTypes.func,\n};\n\nNumbersOfClock.defaultProps = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    focusOnInput: false,\n    inputValueLength: 0,\n    handleClockEvents: noop,\n};\n\n\nexport default NumbersOfClock;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ClockButtons({firstButton, secondButton}){\n    return (\n        <div className='clockButtonsContainer'>\n            <button \n                className={`clockButtons ${firstButton.className}`} \n                onClick={firstButton.onClick}\n                ref={firstButton.ref}\n            >\n                {firstButton.text}\n            </button>\n            <button \n                className={`clockButtons ${secondButton.className}`} \n                onClick={secondButton.onClick}\n                ref={secondButton.ref}\n            >\n                {secondButton.text}\n            </button>\n        </div>\n    );\n}\n\nClockButtons.propTypes = {\n    firstButton: PropTypes.shape({\n        onClick: PropTypes.func,\n        text: PropTypes.string,\n        className: PropTypes.string,\n        ref: PropTypes.func,\n    }),\n    secondButton: PropTypes.shape({\n        onClick: PropTypes.func,\n        text: PropTypes.string,\n        className: PropTypes.string,\n        ref: PropTypes.func,\n    })\n};\n\nexport default ClockButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\nimport { NumbersOfClock, ClockLabels, ClockButtons } from './index.js';\nimport { noop } from '../../generalFunctions.js';\nimport { \n  convertOrdinaryNumbersInTimeNumbers,\n  checkIfTimerIsInZero,\n  getSettingsForButton, \n  setNextSecondAndNextMinute,\n  getMethodsForEnterPressing,\n} from './clock-functions.js';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props) \n\n    const { seconds: initialSeconds, minutes: initialMinutes, hours: initialHours } = this.props;\n\n    this.state = {\n      clockStarted: false,\n      clockPaused: false,\n      seconds: initialSeconds,\n      minutes: initialMinutes,\n      hours: initialHours,\n    }\n\n    this.clockMethods = {\n      startClock: this.startClock, \n      pauseClock: this.pauseClock,\n      stopClock: this.stopClock,\n    };\n\n  }\n  \n  tick = () => {\n    const { seconds, minutes, hours } = this.state;\n\n    if (this.props.isCountDown && seconds === 0 && minutes === 0 && hours === 0) {\n        \n      this.stopClock();\n      this.props.bellStarting();\n      return;\n\n    }\n\n    if (!this.props.isCountDown && seconds === 59 && minutes === 59 && hours === 99) {\n\n      this.stopClock();\n      return;\n\n    }\n\n    const { nextSecond, nextMinute, nextHour } = setNextSecondAndNextMinute(this.props.isCountDown, seconds, minutes, hours)\n\n    const isTimeToRing = (Number.isInteger(nextMinute / this.props.ringEvery) && nextSecond === 0);\n\n    if (!this.props.isCountDown && isTimeToRing) this.props.bellStarting();\n    \n    this.setState({\n      seconds: nextSecond,\n      minutes: nextMinute,\n      hours: nextHour,\n    })\n  };\n\n  startClock = () => {\n    this.clockId = setInterval(this.tick, 1000);\n\n    this.setState({ \n      clockStarted: true,\n      clockPaused: false,\n     });\n  };\n\n  pauseClock = () => {\n    clearInterval(this.clockId);\n\n    this.setState({ clockPaused: true });\n  };\n\n\n  stopClock = () => {\n    const { seconds, minutes, hours } = this.props;\n\n    clearInterval(this.clockId);\n\n    this.setState({ \n      clockStarted: false,\n      clockPaused: false,\n      seconds: seconds,\n      minutes: minutes,\n      hours: hours,\n     });\n  };\n\n  setNewTimer = (seconds, minutes, hours) => {\n    const { \n      minutes: newMinutes,\n      seconds: newSeconds,\n      hours: newHours,\n    } = convertOrdinaryNumbersInTimeNumbers(seconds, minutes, hours);\n\n    this.setState({\n      seconds: newSeconds,\n      minutes: newMinutes,\n      hours: newHours,\n    });\n  }\n\n  keyPressingOnClock = (key) => {\n\n    const { clockStarted, clockPaused } = this.state;\n    const { isCountDown, focusOnInput, hours, minutes, seconds } = this.props;\n\n    if (document.activeElement === this.startAndPauseButton) return;\n\n    const arrayOfMethods = getMethodsForEnterPressing({\n      clockStatus: { clockStarted, clockPaused },\n      clockByUnits: { seconds, minutes, hours },\n      clockMethods: this.clockMethods,\n      focusOnInputSettings: {\n        isFocused: focusOnInput,\n        handleFocus: () => this.props.handleOnInputFocus(false),\n      },\n      setNewTimer: this.setNewTimer,\n      isCountDown,\n    });\n\n    switch (key) {\n      case 'Enter':\n        arrayOfMethods.forEach(fn => fn());\n        break;\n\n      default:\n        noop();\n    };\n  };\n\n  componentDidUpdate(prevProps){\n\n    const { clockStarted, clockPaused } = this.state;\n    const { focusOnInput, inputValueLength, keyPressed } = this.props;\n\n    const areHoursDisplayedInClock = (this.state.hours !== 0 || this.props.focusOnInput);\n\n    const areConditionsForSettingANewTimer = (!this.props.inputValueLength && !clockStarted && !clockPaused &&\n      (this.state.hours !== prevProps.hours ||\n      this.state.minutes !== prevProps.minutes ||\n      this.state.seconds !== prevProps.seconds));\n\n    if (prevProps.keyPressed !== keyPressed) this.keyPressingOnClock(this.props.keyPressed);\n\n    if (inputValueLength && clockPaused) this.stopClock();\n\n    if (focusOnInput && !prevProps.focusOnInput && clockStarted) this.pauseClock();\n\n    if (areConditionsForSettingANewTimer) {\n      this.setNewTimer(prevProps.seconds, prevProps.minutes, prevProps.hours);\n    }\n\n    if (areHoursDisplayedInClock !== this.props.hoursDisplayedInClock.value) {\n      \n      const { setHoursInClock, stateName } = this.props.hoursDisplayedInClock;\n\n      setHoursInClock(stateName, areHoursDisplayedInClock);\n    }\n  }\n  \n  render () {\n\n    const { \n      clockStarted, \n      clockPaused,\n    } = this.state;\n\n    const seconds = (this.props.inputValueLength) ? this.props.seconds : this.state.seconds;\n    const minutes = (this.props.inputValueLength) ? this.props.minutes : this.state.minutes;\n    const hours = (this.props.inputValueLength) ? this.props.hours : this.state.hours;\n\n    const isTimerInZero = checkIfTimerIsInZero(this.props.isCountDown, seconds, minutes, hours)\n\n    let firstButtonProps = getSettingsForButton(clockStarted, clockPaused, this.clockMethods, isTimerInZero);\n    const firstButtonRef = { ref: el => this.startAndPauseButton = el};\n    firstButtonProps = Object.assign(firstButtonProps, firstButtonRef);\n    \n    return (\n      <div id={this.props.ariaIdForContainer} aria-labelledby={this.props.ariaIdForContainer} role='tabpanel'>\n        <div role='timer' className='clockContainer'>\n          <NumbersOfClock \n            seconds={seconds}\n            minutes={minutes}\n            hours={hours}\n            isCountDown={this.props.isCountDown}\n            spanToBorder={this.props.numberClicked}\n            focusOnInput={this.props.focusOnInput}\n            inputValueLength={this.props.inputValueLength}\n            handleClockEvents={this.props.handleClockEvents}\n            setPositionOfCursorInInput={this.props.setPositionOfCursorInInput}\n          />\n          {this.props.children}\n          <ClockLabels hoursDisplayed={this.props.hoursDisplayedInClock.value}/>\n        </div>\n        <ClockButtons\n          firstButton={firstButtonProps}\n          secondButton={{\n            onClick: this.stopClock,\n            text: 'Reset',\n            className: `dangerButton ${(clockStarted) ? 'animateToRight' : 'hideBtn'}`\n          }}\n        />\n      </div>\n    );  \n  }\n}\n \nClock.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    minutes: PropTypes.number.isRequired,\n    hours: PropTypes.number.isRequired,\n    isCountDown: PropTypes.bool.isRequired,\n    children: PropTypes.element,\n    handleOnInputFocus: PropTypes.func,\n    numberClicked: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    ringEvery: PropTypes.number,\n    setPositionOfCursorInInput: PropTypes.func,\n    hoursDisplayedInClock: PropTypes.object,\n    ariaIdForContainer: PropTypes.string,\n};\n\nClock.defaultProps = {\n    seconds: 0,\n    minutes: 5,\n    hours: 0,\n    isCountDown: false,\n    focusOnInput: false,\n};\n\nexport default Clock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Clock from './Clock.js'\nimport './clock.scss';\nimport { isNaturalNumber } from '../../generalFunctions.js';\nimport { convertOrdinaryNumbersInTimeNumbers } from './clock-functions.js';\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.inputClockRef = React.createRef();\n\n        const { \n            seconds: initialSeconds,\n            minutes: initialMinutes,\n            hours: initialHours, \n            } = this.props;\n\n        this.state = {\n            inputValue: '',\n            focusOnInput: false,\n            inputSeconds: initialSeconds,\n            inputMinutes: initialMinutes,\n            inputHours: initialHours,\n            clickedInClockContainer: false,\n            numberClicked: null,\n        };\n    }\n\n    onInputChange = (ev) => {\n\n        const isValidNumber = isNaturalNumber(ev.target.value);\n        if (!isValidNumber) return;\n        \n        const value = ev.target.value.toString();      \n\n        if (value) {\n\n            const timeToSet = {\n                seconds: (value[value.length - 2] || 0) + (value[value.length - 1] || 0),\n                minutes: (value[value.length - 4] || 0) + (value[value.length - 3] || 0),\n                hours: (value[value.length -6] || 0) + (value[value.length -5] || 0),\n            };\n\n            const inputValue = (value.length >= 7) ? value.slice(value.length - 6, value.length) : value;\n        \n            this.setState({ \n                inputValue: inputValue,\n                inputSeconds: +timeToSet.seconds,\n                inputMinutes: +timeToSet.minutes,\n                inputHours: +timeToSet.hours,\n            });\n        } else {\n            this.setState({\n                inputValue: '',\n                inputSeconds: 0,\n                inputMinutes: 0,\n                inputHours: 0,\n            })\n        }\n    };\n\n    changeTimerNumbers = () => {\n        const { inputSeconds, inputMinutes, inputHours} = this.state;\n        const { seconds, minutes, hours} = convertOrdinaryNumbersInTimeNumbers(inputSeconds, inputMinutes, inputHours);\n\n        this.setState({ \n            inputSeconds: seconds,\n            inputMinutes: minutes,\n            inputHours: hours,\n        });\n    }\n\n    handleOnInputFocus = (focusOnInput = !this.state.focusOnInput) => {\n\n        if (!focusOnInput) {\n            this.changeTimerNumbers();\n        }\n\n        if (!focusOnInput && document.activeElement === this.inputClockRef.current) {\n            this.inputClockRef.current.blur();\n        }\n\n        this.setState({ \n            focusOnInput: focusOnInput,\n            inputValue: '',\n        });\n    };\n\n    setPositionOfCursorInInput = position => {\n        if (!this.state.inputValue.length) return;\n\n        const value = this.state.inputValue.length - position;\n        this.inputClockRef.current.setSelectionRange(value, value);\n    }\n\n    handleOnBlur = () => {\n\n        if (document.activeElement === this.inputClockRef.current) return; \n        //Avoid losing focus when changing tab or going out of browser\n\n        if (this.state.clickedInClockContainer) {\n\n            this.setState({ clickedInClockContainer: false });\n            return;\n        }\n\n        this.handleOnInputFocus(false);\n        this.setState({ numberClicked: null })\n\n        return;\n    }\n\n    handleOnFocus = () => {\n        \n        if (!this.state.focusOnInput) {\n\n            this.handleOnInputFocus(true);\n            this.inputClockRef.current.focus();\n\n            return;\n        }\n    }\n\n    handleOnMouseDown = () => {\n        if (!this.state.clickedInClockContainer) this.setState({ clickedInClockContainer: true });\n    }\n\n    handleOnClick = (ev) => {\n\n        if (ev.target.nodeName === 'SPAN') this.setState({ numberClicked: ev.target });\n        \n        if (!this.state.focusOnInput) this.handleOnInputFocus(true);\n\n        this.inputClockRef.current.focus();\n        this.setState({ clickedInClockContainer: false });\n\n    }\n\n    handleClockEvents = (ev) => {\n\n        const eventsHandlers = {\n            'blur': this.handleOnBlur,\n            'click': this.handleOnClick,\n            'focus': this.handleOnFocus,\n            'mousedown': this.handleOnMouseDown,\n        }\n\n        const getEventHandler = (event) => eventsHandlers[event];\n        const handler = getEventHandler(ev.type);\n\n        return handler(ev);\n\n    };\n   \n    render () {\n        \n        const { \n            focusOnInput, \n            inputValue,\n            inputHours,\n            inputMinutes,\n            inputSeconds,\n            numberClicked,\n        } = this.state;\n\n        return (\n            <Clock\n                hours={inputHours} \n                minutes={inputMinutes} \n                seconds={inputSeconds} \n                isCountDown={true}\n                numberClicked={numberClicked}\n                focusOnInput={focusOnInput}\n                inputValueLength={inputValue.length}\n                handleClockEvents={this.handleClockEvents}\n                handleOnInputFocus={this.handleOnInputFocus}\n                bellStarting={this.props.bellStarting}\n                keyPressed={this.props.keyPressed}\n                setPositionOfCursorInInput={this.setPositionOfCursorInInput}\n                setHoursInClock={this.props.setHoursInClock}\n                hoursDisplayedInClock={this.props.hoursDisplayedInClock}\n                ariaIdForContainer={this.props.ariaIdForContainer}\n            >\n                <input\n                    tabIndex={1}\n                    ref={this.inputClockRef}\n                    onBlur={this.handleClockEvents}\n                    onFocus={this.handleClockEvents}\n                    type='text'\n                    onChange={this.onInputChange}\n                    className={'hiddenInput'}\n                    value={inputValue}\n                />\n            </Clock>\n        );  \n    }       \n}\n\n\nTimer.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    hoursDisplayedInClock: PropTypes.object,\n    ariaIdForContainer: PropTypes.string,\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modals.scss';\nimport { noop } from '../../generalFunctions.js'\n\nclass Modal extends Component {\n  \n  constructor(props) {\n    super(props); \n\n    this.divToFocus = null;\n\n    this.setDivFocus = element => {\n      this.divToFocus = element;\n    };\n\n    this.focusDiv = () => {\n      this.divToFocus.focus();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (this.props.modalState && prevProps.modalState !== this.props.modalState) {\n\n      this.focusDiv();\n\n    }\n  }\n\n  closeModalOnKeyPress = (ev) => {\n\n    if (this.props.stopKeyEventPropagation) ev.nativeEvent.stopImmediatePropagation();\n\n    switch (ev.key) {\n      case 'Escape':\n        return this.props.closeModal(ev);\n      case 'Enter':\n        return this.props.closeSuccessModal(ev);\n      default:\n        noop();\n    };\n\n  };\n\n  render() {\n\n    const { modalState, children, title, modalValidation } = this.props;\n\n    return (\n      <div \n        role='dialog'\n        aria-labelledby='modalDialogTitle'\n        aria-describedby=\"bellsDialog\"\n        ref={this.setDivFocus}\n        tabIndex={1} \n        className={`globalAlert modalEffect ${(modalState) ? 'showModal' : ''} ${(modalValidation) ? '' : 'invalidModal'}`}\n        onKeyDown={(ev) => this.closeModalOnKeyPress(ev)}>\n        <div className='modalContent'>\n          <div className='modalTitleContainer'>\n            <h2 id='modalDialogTitle' className='modalTitle'>{title}</h2>\n          </div>\n          {children}\n        </div>\n      </div>\n      );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  modalState: PropTypes.bool.isRequired,\n  modalValidation: PropTypes.bool,\n  closeSuccessModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  stopKeyEventPropagation: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  title: 'Modal',\n  modalState: false,\n  modalValidation: true,\n};\n\nexport default Modal;","import longBell from  '../.././static/Audio/long-bell.mp3';\nimport bowlStruck from '../.././static/Audio/bowl-struck.mp3';\nimport japaneseGong from '../.././static/Audio/bell4.mp3';\nimport buddhistPrayerBell from '../.././static/Audio/buddhist-prayer-bell.mp3';\nimport burmeseGong from '../.././static/Audio/gong-burmese.wav';\nimport chineseGong from '../.././static/Audio/gong-chinese.wav';\nimport tingshaBell from '../.././static/Audio/tingsha.wav';\nimport zenBell from '../.././static/Audio/zen-bell.mp3';\n\nconst defaultAudioSelected = 'Long Bell';\n\nconst audiosInfoArray = [\n    {\n        name: 'Long Bell',\n        src: longBell,\n    },\n    {\n        name: 'Bowl Struck',\n        src: bowlStruck,\n    },\n    {\n        name: 'Japanese Gong',\n        src: japaneseGong,\n    },\n    {\n        name: 'Buddhist Prayer Bell',\n        src: buddhistPrayerBell,\n    },\n    {\n        name: 'Burmese Gong',\n        src: burmeseGong,\n    },\n    {\n        name: 'Chinese Gong',\n        src: chineseGong,\n    },\n    {\n        name: 'Tingsha Bell',\n        src: tingshaBell,\n    },\n    {\n        name: 'Zen Bell',\n        src: zenBell,\n    },\n];\n\nexport { audiosInfoArray, defaultAudioSelected };","import React, { Component } from 'react';\nimport Modal from './Modal.js'\nimport PropTypes from 'prop-types';\nimport './Modals.scss'\nimport { audiosInfoArray, defaultAudioSelected } from '../Bells';\nimport { TextField, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport AutoComplete from '@material-ui/lab/Autocomplete';\nimport { getNumberWithTimeUnitLabel } from '../../generalFunctions.js';\n\nconst maxOfMinutesSelection = 360;\n\nconst notIncludedNumber = num => {\n    return ((num > 60 && num % 5 !== 0) ||  \n     (num > 90 && num % 10 !== 0) ||\n     (num > 120 && num % 30 !== 0))\n}\n\nclass AudiosModal extends Component {\n    constructor(props) {\n        super(props);\n\n        let initialSelectValue = (this.props.ringBellEvery === 1) ?\n         `${this.props.ringBellEvery} minute` :\n         `${this.props.ringBellEvery} minutes`;\n\n        this.state = {\n            selectAudiosValue: defaultAudioSelected,\n            autoCompleteInputValue: initialSelectValue,\n        };\n    }\n\n    handleSelectAudiosChange = (ev) => this.setState({ selectAudiosValue: ev.target.value });\n\n    handleInputChange = (ev, value) => {\n        if (!ev) return;\n\n        this.setState({ autoCompleteInputValue: value});\n    }\n\n    startAudioBellFromBeginning = () => {\n\n        this.bellRef.currentTime = 0;\n        this.bellRef.play();\n    };\n\n    closeSuccessModal = () => this.props.closeModal();\n    \n    closeModal = (ev) => this.props.closeModal(ev, false);\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.bellStarting === false && this.props.bellStarting === true) {\n            this.startAudioBellFromBeginning();\n        }\n    }\n\n    render() {\n\n        const { autoCompleteInputValue, selectAudiosValue } = this.state;\n\n        const sortComparison = (nameA, nameB) =>  (nameA > nameB) ? 1 : (nameA < nameB) ? -1 : 0;\n\n        const orderedAudios = audiosInfoArray.sort((objA, objB) => sortComparison(objA.name, objB.name));\n        const audios = orderedAudios.map(({ name }, i) => {\n\n            return <MenuItem key={i} value={name}> {name} </MenuItem>\n        });\n\n        const { src: selectedAudioSrc } = audiosInfoArray.find(({ name }) => name === selectAudiosValue);\n        const minutesOptionsArr = getNumberWithTimeUnitLabel(maxOfMinutesSelection, notIncludedNumber);\n        \n        return (\n            <Modal \n                title={'Settings'}\n                modalState={this.props.modalState}\n                closeModal={this.closeModal}\n                closeSuccessModal={this.closeSuccessModal}\n                stopKeyEventPropagation={this.props.stopKeyEventPropagation}\n            >\n                <div className='audioSelection'>\n                    <FormControl>\n                        <InputLabel id=\"simple-select-label\">Bells</InputLabel>\n                        <Select\n                            labelId=\"simple-select-label\"\n                            id=\"simple-select\"\n                            value={this.state.selectAudiosValue}\n                            onChange={this.handleSelectAudiosChange}\n                        >\n                            {audios}\n                        </Select>\n                    </FormControl>\n                </div>\n                <figure className='reproduceAudio'>\n                    <figcaption>Reproduce Bell</figcaption>\n                    <audio ref={e => this.bellRef = e} src={selectedAudioSrc} controls>\n                        Your browser does not support the\n                        <code>audio</code> element.\n                    </audio>\n                </figure>\n                <div className={`inputContainer ${(this.props.showTimer) ? 'hide' : ''}`}>\n                    <AutoComplete\n                        id=\"combo-box\"\n                        options={minutesOptionsArr}\n                        getOptionSelected={(option, { value }) => option.value === value}\n                        getOptionLabel={(option) => option.label}\n                        onChange={this.props.handleMinutesSelect}\n                        onInputChange={(ev, value) => this.handleInputChange(ev, value)}\n                        inputValue={autoCompleteInputValue}\n                        handleHomeEndKeys={true}\n                        filterSelectedOptions={true}\n                        fullWidth={true}\n                        renderInput={(params) => <TextField {...params} label=\"Ring every\" variant=\"outlined\" />}\n                    />\n                </div>\n                <div className='buttonsInModalContainer'>\n                    <button \n                        className={`alertButton buttonsInModal ${(this.props.showTimer) ? 'hide' : ''}`}\n                        onClick={(ev) => this.closeModal(ev, false)}>\n                        Cancel\n                    </button>\n                    <button className='successButton buttonsInModal' onClick={this.closeSuccessModal}>Save changes</button>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nAudiosModal.propTypes = {\n    modalState: PropTypes.bool,\n    ringBellEvery: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    closeModal: PropTypes.func,\n    closeSuccessModal: PropTypes.func,\n    stopKeyEventPropagation: PropTypes.bool,\n    bellStarting: PropTypes.bool,\n    handleMinutesSelect: PropTypes.func,\n    showTimer: PropTypes.bool,\n}\n\nexport default AudiosModal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TabButtons({ classNames, handleClick, buttonsText, amountOfButtons, activeTab }) {\n\n    let buttons = [];\n\n    for (let i = 0; i < amountOfButtons; i++) {\n\n        let buttonText = (buttonsText[i]) ? buttonsText[i] : 'Button';\n\n        buttons.push(\n            <button\n                key={i}\n                tabIndex={0}\n                role='tab'\n                aria-selected={(activeTab === i)}\n                aria-controls={`clock${i + 1}`}\n                className={`buttons ${(classNames.button) ? classNames.button : ''} ${(classNames.buttons[i] ? classNames.buttons[i] : '')}`}\n                onClick={() => handleClick(i)}\n            >\n                {buttonText}\n            </button>\n        )\n    }\n\n    return (\n        <div role='tablist' aria-label='Clocks tablist' className={`btnsContainer ${(classNames.container) ? classNames.container : ''}`}>\n            {buttons}\n        </div>\n    );\n}\n\nTabButtons.propTypes = {\n    activeTab: PropTypes.number,\n    handleClick: PropTypes.func,\n    amountOfButtons: PropTypes.number,\n    buttonsText: PropTypes.arrayOf(PropTypes.string),\n    classNames: PropTypes.shape({\n        container: PropTypes.string,\n        button: PropTypes.string,\n        buttons: PropTypes.arrayOf(PropTypes.string),\n    }),\n};\n\nTabButtons.defaultProps = {\n    amountOfButtons: 2,\n    classNames: {\n        container: '',\n        button: '',\n        buttons: [''],\n    },\n}\n\nexport default TabButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsSVG from '../../static/Logos/cog-solid.svg';\n\nfunction BelowClockContainer({ showTimer, numberToRing, handleModal }) {\n\n    return(\n        <div className='belowClockContainer'>\n            <span className={`belowClockContainerInfo ${(showTimer) ? 'hidden' : '' }`} >    \n                Ring every {numberToRing} {(numberToRing === 1) ? 'minute' : 'minutes'}\n            </span>\n            <div className='settingsContainer'>\n                <button className='settingsLogoBtn' onClick={handleModal}>\n                    <figure>\n                        <img src={SettingsSVG} className='settingsLogo' alt='Settings Logo' height='20' width='20'/>\n                    </figure>\n                </button>\n                <span className='tooltip'>Settings</span>\n            </div>\n        </div>\n    );\n}\n\nBelowClockContainer.propTypes = {\n    showTimer: PropTypes.bool,\n    numberToRing: PropTypes.number,\n    handleModal: PropTypes.func,\n}\n\nexport default BelowClockContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChangeSizeButton({ onClick, classNames = {}, buttonText }) {\n\n    return (\n        <div className={`sizeAppButtonContainer ${classNames.container}}`}>\n            <button onClick={onClick} className={`${classNames.button}`}>{buttonText}</button>\n        </div>\n    );\n    \n}\n\nChangeSizeButton.propTypes = {\n    onClick: PropTypes.func,\n    buttonText: PropTypes.string,\n    classNames: PropTypes.shape({\n        container: PropTypes.string,\n        button: PropTypes.string,\n    }),\n}\n\nChangeSizeButton.defaultProps = {\n    buttonText: 'Change Size Button',\n    classNames: {\n        container: '',\n        button: '',\n    },\n}\n\nexport default ChangeSizeButton;","import React from 'react';\nimport Timer from './Components/Clock/Timer.js';\nimport { default as Stopwatch } from './Components/Clock/Clock.js';\nimport './app.scss';\nimport AudiosModal from './Components/Modals/AudiosModal.js';\nimport { BelowClockContainer, TabButtons, ChangeSizeButton } from './Components/App';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.mainContainerRef = React.createRef();\n\n        const initialStopwatchRingTime = 2;\n\n        this.state = {\n            activeTab: 0,\n            keyPressedEvent: null,\n            bellStarting: false,\n            windowBlur: false,\n            isTimerShowingHours: false,\n            isStopwatchShowingHours: false,\n            modalClicked: false,\n            modalSelectValue: initialStopwatchRingTime,\n            showingOverlay: false,  \n            numberToRing: initialStopwatchRingTime,\n            showAppInBig: false,\n        };\n    }\n\n    handleClockBtns = tabIndex => this.setState({ activeTab: tabIndex });\n\n    handleModal = (ev, succeed = true) => {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if ((!succeed && modalClicked) || (modalClicked && modalSelectValue === '')) {\n            this.setState({ modalSelectValue: this.state.numberToRing });\n        } \n\n        this.setState({ \n            modalClicked: !modalClicked,\n            showingOverlay: !this.state.showingOverlay,\n        });\n    };\n\n    setAppInBigSize = () => {\n\n        this.setState({ showAppInBig: !this.state.showAppInBig });\n    }\n\n    setHoursInClock = (state, value) => this.setState({ [state]: value });\n\n    bellStarting = () => this.setState({ bellStarting: true });\n\n    onBodyKeydown = ({ key }) => this.setState({ keyPressed: key});\n\n    handleModalSelect = (ev, optionSelectedObj) => {\n\n        const value = (optionSelectedObj) ? optionSelectedObj.value : '';\n\n        this.setState({ \n            modalSelectValue: value,\n        });\n    }\n\n    handleWindowFocus = (ev) =>  {\n\n        if (ev.target === window) {  \n            this.setState({ windowBlur: true });\n        }\n\n    }\n    \n    componentDidMount() {\n        document.addEventListener('keydown', this.onBodyKeydown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onBodyKeydown);\n    }\n \n    componentDidUpdate(prevProps, prevState) {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if (this.state.keyPressed) this.setState({ keyPressed: null });\n\n        if (this.state.bellStarting) this.setState({ bellStarting: false });\n\n        if (prevState.modalClicked && !modalClicked) this.setState({ numberToRing: +modalSelectValue });\n    }\n\n    render () {\n        const { \n            activeTab, \n            keyPressed, \n            bellStarting, \n            numberToRing, \n            isTimerShowingHours,\n            isStopwatchShowingHours,\n            showingOverlay,\n            modalClicked,\n            modalSelectValue,\n            showAppInBig,\n        } = this.state;\n\n        const showTimer = (!activeTab);\n\n        const hoursInClock = (( showTimer && isTimerShowingHours) || (!showTimer && isStopwatchShowingHours));\n        \n        const hoursBeingDisplayed = (isTimer) => {\n            return {\n                setHoursInClock: (state, value) => this.setHoursInClock(state, value),\n                stateName: (isTimer) ? 'isTimerShowingHours' : 'isStopwatchShowingHours',\n                value: (isTimer) ? isTimerShowingHours : isStopwatchShowingHours,\n            }\n        }\n\n        const buttonsClassnames = {\n            container: (hoursInClock) ? 'hoursInClock' : '',\n            buttons: [],\n        };\n\n        buttonsClassnames.buttons[activeTab] = 'btnSelected';\n\n        return (\n            <div className={`mainContainer ${(showAppInBig) ? 'bigScreenMode' : ''}`}>\n                <div onClick={this.handleModal} className={`modalOverlay ${(showingOverlay) ? 'showOverlay' : ''}`}></div>\n                <AudiosModal \n                    stopKeyEventPropagation={true}\n                    bellStarting={bellStarting}\n                    closeModal={this.handleModal} \n                    modalState={modalClicked}\n                    ringBellEvery={modalSelectValue}\n                    handleMinutesSelect={this.handleModalSelect}\n                    showTimer={showTimer}\n                />\n                <div className='appContainer'>\n                    <ChangeSizeButton\n                        onClick={this.setAppInBigSize}\n                        buttonText={(showAppInBig) ? 'Make it Small' : 'Make it Big!'} \n                    />\n                    <main className='appSubContainer'>\n                            <TabButtons\n                                activeTab={activeTab}\n                                handleClick={this.handleClockBtns}\n                                amountOfButtons={2}\n                                buttonsText={['Timer', 'Stopwatch']}\n                                classNames={buttonsClassnames}\n                            />\n                            <section>\n                                <div className='clock'>\n                                    <div className={`${(showTimer) ? '' : 'hide' }`}>\n                                        <Timer \n                                            keyPressed={(showTimer) ? keyPressed : null} \n                                            bellStarting={this.bellStarting} \n                                            hours={0}\n                                            minutes={10} \n                                            seconds={0}\n                                            hoursDisplayedInClock={hoursBeingDisplayed(true)}\n                                            ariaIdForContainer={'Clock 1'}\n                                        />\n                                    </div>\n                                    <div className={`${(showTimer) ? 'hide' : '' }`}>\n                                        <Stopwatch \n                                            keyPressed={(showTimer) ? null : keyPressed}\n                                            bellStarting={this.bellStarting}\n                                            hours={0} \n                                            minutes={0} \n                                            seconds={0}\n                                            ringEvery={numberToRing}\n                                            hoursDisplayedInClock={hoursBeingDisplayed(false)}\n                                            ariaIdForContainer={'Clock 2'}\n                                        />\n                                    </div>\n                                </div>\n                            </section>\n                            <BelowClockContainer \n                                showTimer={showTimer} \n                                numberToRing={numberToRing} \n                                handleModal={this.handleModal}\n                            />\n                    </main>\n                </div>\n                <footer>\n                    <span>\n                        Logos taken by&nbsp;\n                        <a href='https://fontawesome.com/license'>Font Awesome</a>\n                        &nbsp;and&nbsp;\n                        <a href='https://icons8.com/'>Icons 8</a>\n                    </span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}