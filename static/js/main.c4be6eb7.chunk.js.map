{"version":3,"sources":["Components/Clock/css/NumbersOfClock.module.scss","Components/Clock/css/ClockButtons.module.scss","Components/Modals/css/AudiosModal.module.scss","css/App.module.scss","Components/App/css/BelowClockContainer.module.scss","Components/Modals/css/Modal.module.scss","Components/Clock/css/ClockLabels.module.scss","Components/App/css/TabButtons.module.scss","Components/App/css/SizeToggler.module.scss","Components/App/css/ThemeToggler.module.scss","Components/Clock/css/Clock.module.scss","Components/Clock/css/Timer.module.scss","static/Audio/long-bell.mp3","static/Audio/bowl-struck.mp3","static/Audio/bell4.mp3","static/Audio/buddhist-prayer-bell.mp3","static/Audio/gong-burmese.wav","static/Audio/gong-chinese.wav","static/Audio/tingsha.wav","static/Audio/zen-bell.mp3","static/Audio/deep-bell.mp3","static/Audio/ocean-waves.mp3","static/Audio/rainforest-waterways.mp3","static/Audio/soothing-winds.mp3","static/Audio/tibetan-bell.mp3","static/Logos/cog-solid.svg","Components/App/css/NavBar.module.scss","Context/ToggleContext.js","Context/ToggleContexts.js","Components/Clock/ClockLabels.js","generalFunctions.js","Components/Clock/clock-functions.js","Components/Clock/NumbersOfClock.js","Components/Clock/ClockButtons.js","Components/Clock/Clock.js","Components/Clock/Timer.js","Components/Modals/Modal.js","Components/Bells/index.js","Components/Modals/AudiosModal.js","Components/App/TabButtons.js","Components/App/BelowClockContainer.js","Components/App/SizeToggler.js","Components/App/ThemeToggler.js","Components/App/NavBar.js","Components/App/Footer.js","App.js","index.js"],"names":["module","exports","ToggleContext","name","defaultValue","secondValue","React","createContext","Consumer","Provider","props","toggle","setState","prevState","state","value","this","children","Component","ThemeContextProvider","ThemeContextConsumer","SizeContextProvider","SizeContextConsumer","ClockLabels","hoursDisplayed","theme","size","className","styles","container","bigContainer","hide","noop","getClockMethod","clockStarted","clockPaused","clockMethods","isTimerInZero","startClock","pauseClock","checkIfTimerIsInZero","isCountDown","seconds","minutes","hours","getClosestSecond","ms","toFixed","makeTimeNumberOperations","firstNumInSeconds","secondNumInSeconds","result","operation","getTimeOutOfSeconds","numOfAnyDigitsInSeconds","num","time","Number","parseInt","secondsWithDecimals","solveExcessInTimeUnitsOfTwoDigits","numOfSeconds","numOfMinutes","numOfHours","convertHours","addLeadingZero","stringNum","toString","TIME_UNITS","NumbersOfClock","removeClassOfSpanExceptTargeted","spanRefsArr","target","targetSpan","find","element","activeSpan","setPositionOfCursorInInput","positionInClockRightToLeft","selectBorderForSpan","spanToBorder","focusOnInput","spanRefs","spanRefsSettings","map","spanSettings","cloneObj","Object","assign","ref","defaultSelectedSpan","spanElements","e","elem","classList","contains","undefined","isSpanAvailableToBorder","defaultSpanColor","includes","unit","prevProps","inputValueLength","handleClockEvents","numbersByUnit","clockSpans","obj","i","inputLength","key","withoutInputValue","hoursToDisplay","slice","minutesToDisplay","secondsToDisplay","clockDefined","onClick","onMouseDown","Fragment","hoursContainer","defaultProps","ClockButtons","methods","states","firstButtonRef","firstButton","getSettingsForButton","started","paused","addRef","secondButton","stopClock","text","dangerButton","animateToRight","hideBtn","button","onClickMethods","btnInfo","successButton","animateToLeft","warningButton","notAllow","startButton","Clock","tick","bellStarting","nextSecond","nextMinute","nextHour","setNextSecondAndNextMinute","isTimeToRing","isInteger","ringEvery","clockId","setInterval","clearInterval","setNewTimer","newMinutes","newSeconds","newHours","keyPressingOnClock","document","activeElement","startAndPauseButton","arrayOfMethods","clockStatus","clockByUnits","focusOnInputSettings","isFocused","handleFocus","push","keyMethod","getMethodsForEnterPressing","handleOnInputFocus","forEach","fn","setClockInactivity","timeWhenInactivityStarted","isInactive","handleClockInactivity","inactivityInSeconds","timeInactivity","stateSeconds","addSecondsOfInactivityToClock","initialSeconds","initialMinutes","initialHours","isClockInactive","keyPressed","areHoursDisplayedInClock","areConditionsForSettingANewTimer","hoursDisplayedInClock","setHoursInClock","stateName","isWindowTabActive","id","ariaIdForContainer","aria-labelledby","role","numberClicked","el","Timer","onInputChange","ev","length","numberToTest","isNaN","isNaturalNumber","timeToSet","inputValue","inputSeconds","inputMinutes","inputHours","changeTimerNumbers","inputClockRef","current","blur","position","setSelectionRange","handleOnBlur","clickedInClockContainer","handleOnFocus","focus","handleOnMouseDown","handleOnClick","nodeName","event","eventsHandlers","type","createRef","tabIndex","onBlur","onFocus","inputMode","onChange","hiddenInput","aria-hidden","Modal","closeModalOnKeyPress","stopKeyEventPropagation","nativeEvent","stopImmediatePropagation","closeModal","closeSuccessModal","divToFocus","setDivFocus","focusDiv","modalState","title","modalValidation","aria-describedby","globalAlert","modalEffect","showModal","invalidModal","onKeyDown","modalContent","modalTitleContainer","modalTitle","audiosInfoArray","src","longBell","bowlStruck","japaneseGong","buddhistPrayerBell","burmeseGong","chineseGong","tingshaBell","zenBell","deepBell","oceanWaves","rainforestWaterways","soothingWinds","tibetanBell","notIncludedNumber","AudiosModal","handleSelectAudiosChange","selectAudiosValue","handleInputChange","autoCompleteInputValue","startAudioBellFromBeginning","bellRef","currentTime","play","initialSelectValue","ringBellEvery","audios","sort","objA","objB","nameA","nameB","MenuItem","selectedAudioSrc","minutesOptionsArr","maxMinutes","notIncludedNumbersCb","minutesAndHoursArray","getLabel","minute","hour","units","getNumWithUnit","setUnit","hourWithUnit","minuteWithUnit","label","getNumberWithTimeUnitLabel","audioSelection","FormControl","InputLabel","Select","labelId","reproduceAudio","controls","inputContainer","showTimer","options","getOptionSelected","option","getOptionLabel","handleMinutesSelect","handleHomeEndKeys","filterSelectedOptions","fullWidth","renderInput","params","TextField","variant","buttonsContainer","alertButton","TabButtons","classNames","handleClick","buttonsText","amountOfButtons","activeTab","buttons","buttonText","aria-selected","aria-controls","btnSelected","aria-label","BelowClockContainer","numberToRing","handleModal","modalClicked","hidden","settingsContainer","settingsLogoBtn","aria-pressed","SettingsSVG","style","filter","settingsLogo","alt","height","width","tooltip","SizeToggler","ThemeToggler","NavBar","Footer","href","App","handleClockBtns","succeed","modalSelectValue","showingOverlay","onBodyKeydown","handleModalSelect","optionSelectedObj","handleVisibilityChange","timeStamp","inactivityStart","timeOfTabInactivity","start","visibilityState","timeOfInactivityInSeconds","mainContainerRef","keyPressedEvent","isTimerShowingHours","isStopwatchShowingHours","addEventListener","removeEventListener","hoursBeingDisplayed","isTimer","buttonsClassnames","hoursInClock","modalOverlay","showOverlay","appContainer","appSubContainer","clock","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c4be6eb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"NumbersOfClock_hide__3iDP7\",\"container\":\"NumbersOfClock_container__2QpcP\",\"numbers\":\"NumbersOfClock_numbers__1h7RC\",\"lightNumbers\":\"NumbersOfClock_lightNumbers__3mugH\",\"darkNumbers\":\"NumbersOfClock_darkNumbers__28RkE\",\"withoutInputValue\":\"NumbersOfClock_withoutInputValue__3o_5l\",\"defaultSpanColor\":\"NumbersOfClock_defaultSpanColor__1Hd24\",\"activeSpan\":\"NumbersOfClock_activeSpan__27LzY\",\"hoursContainer\":\"NumbersOfClock_hoursContainer__3J1wh\",\"clockDefined\":\"NumbersOfClock_clockDefined__bDoHv\",\"bigContainer\":\"NumbersOfClock_bigContainer__3cac0\",\"bigNumbers\":\"NumbersOfClock_bigNumbers__3Kt4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hideBtn\":\"ClockButtons_hideBtn__Nk0SH\",\"container\":\"ClockButtons_container__8NywK\",\"button\":\"ClockButtons_button__3Qgkf\",\"startButton\":\"ClockButtons_startButton__3gPl3\",\"successButton\":\"ClockButtons_successButton__XWecn\",\"warningButton\":\"ClockButtons_warningButton__1FQ0J\",\"dangerButton\":\"ClockButtons_dangerButton__F7Z6B\",\"animateToRight\":\"ClockButtons_animateToRight__32ekn\",\"animateToLeft\":\"ClockButtons_animateToLeft__2m48C\",\"notAllow\":\"ClockButtons_notAllow__2e_LJ\",\"bigContainer\":\"ClockButtons_bigContainer__2AVW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"AudiosModal_hide__3h_JT\",\"audioSelection\":\"AudiosModal_audioSelection__XEe-2\",\"reproduceAudio\":\"AudiosModal_reproduceAudio__gE6dj\",\"inputContainer\":\"AudiosModal_inputContainer__EVUKq\",\"buttonsContainer\":\"AudiosModal_buttonsContainer__1D9Lb\",\"button\":\"AudiosModal_button__Gamc-\",\"alertButton\":\"AudiosModal_alertButton__QVgvt\",\"successButton\":\"AudiosModal_successButton__3lXco\",\"bigContainer\":\"AudiosModal_bigContainer__2xzCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"App_hide__prDhc\",\"hidden\":\"App_hidden__1ylBx\",\"hoursInClock\":\"App_hoursInClock__32Jdm\",\"mainContainer\":\"App_mainContainer__T6KNg\",\"modalOverlay\":\"App_modalOverlay__1ndUu\",\"lightMainContainer\":\"App_lightMainContainer__84GMW\",\"darkMainContainer\":\"App_darkMainContainer__Y8W5K\",\"showOverlay\":\"App_showOverlay__3h41C\",\"appContainer\":\"App_appContainer__3YSAX\",\"btnsContainer\":\"App_btnsContainer__1iOh2\",\"buttons\":\"App_buttons__3QoJi\",\"btnSelected\":\"App_btnSelected__19wxC\",\"clock\":\"App_clock__2i7Ff\",\"appSubContainer\":\"App_appSubContainer__3R0-H\",\"sizeAppButtonContainer\":\"App_sizeAppButtonContainer__24KDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"BelowClockContainer_hidden__y3wiX\",\"container\":\"BelowClockContainer_container__1VfNH\",\"containerInfo\":\"BelowClockContainer_containerInfo__2OczG\",\"lightContainerInfo\":\"BelowClockContainer_lightContainerInfo__24Qlg\",\"darkContainerInfo\":\"BelowClockContainer_darkContainerInfo__2h2BW\",\"settingsContainer\":\"BelowClockContainer_settingsContainer__2heWP\",\"settingsLogoBtn\":\"BelowClockContainer_settingsLogoBtn__23Nt5\",\"settingsLogo\":\"BelowClockContainer_settingsLogo__3FRmk\",\"tooltip\":\"BelowClockContainer_tooltip__1dGUd\",\"bigContainer\":\"BelowClockContainer_bigContainer__3L2TZ\",\"containerInfoBig\":\"BelowClockContainer_containerInfoBig__28ZFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"Modal_hide__3nk9q\",\"globalAlert\":\"Modal_globalAlert__1KxKX\",\"modalContent\":\"Modal_modalContent__3aKuL\",\"modalTitleContainer\":\"Modal_modalTitleContainer__3oKq3\",\"modalTitle\":\"Modal_modalTitle__faC1V\",\"showModal\":\"Modal_showModal__3XXEp\",\"modalEffect\":\"Modal_modalEffect__3lsk2\",\"invalidModal\":\"Modal_invalidModal__3ouek\",\"bigScreenMode\":\"Modal_bigScreenMode__38ixC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"ClockLabels_hide__3BGBv\",\"container\":\"ClockLabels_container__2mGSi\",\"title\":\"ClockLabels_title__WsDik\",\"lightTitle\":\"ClockLabels_lightTitle__2Enj5\",\"darkTitle\":\"ClockLabels_darkTitle__2lMDz\",\"bigContainer\":\"ClockLabels_bigContainer__30naf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TabButtons_container__2wb8f\",\"buttons\":\"TabButtons_buttons__1Y7XQ\",\"btnSelected\":\"TabButtons_btnSelected__3to3G\",\"bigContainer\":\"TabButtons_bigContainer__CIOsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SizeToggler_container__tUguC\",\"button\":\"SizeToggler_button__3YFMZ\",\"lightButton\":\"SizeToggler_lightButton__lN9P-\",\"darkButton\":\"SizeToggler_darkButton__3hCaE\",\"bigContainer\":\"SizeToggler_bigContainer__1oNsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeToggler_container__3VxLN\",\"button\":\"ThemeToggler_button__2FWTH\",\"lightButton\":\"ThemeToggler_lightButton__1nw9R\",\"darkButton\":\"ThemeToggler_darkButton__3KW3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Clock_container__cyF8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiddenInput\":\"Timer_hiddenInput__2qWeO\"};","module.exports = __webpack_public_path__ + \"static/media/long-bell.7cd5fe25.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bowl-struck.2e1feb19.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bell4.68b60366.mp3\";","module.exports = __webpack_public_path__ + \"static/media/buddhist-prayer-bell.fa1328fc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gong-burmese.368c1978.wav\";","module.exports = __webpack_public_path__ + \"static/media/gong-chinese.b8a8b3be.wav\";","module.exports = __webpack_public_path__ + \"static/media/tingsha.760cc3b2.wav\";","module.exports = __webpack_public_path__ + \"static/media/zen-bell.85f7bec3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/deep-bell.d7c7a634.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ocean-waves.cf5e5b17.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rainforest-waterways.248de7eb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/soothing-winds.817175e6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tibetan-bell.48e1cfbe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cog-solid.eb62fb65.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__1g2Id\",\"lightNavBar\":\"NavBar_lightNavBar__1NlnS\",\"darkNavBar\":\"NavBar_darkNavBar__3aBFi\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default function ToggleContext(name, defaultValue, secondValue) {\n\n    const { Consumer, Provider } = React.createContext(defaultValue);\n\n    function createClass() {\n\n        return class extends React.Component {\n            constructor(props) {\n                super(props);\n        \n                this.state = {\n                   [name]: defaultValue,\n                }\n            }\n        \n            toggle = () => {\n                this.setState(prevState => {\n        \n                    return {\n                        [name]: prevState[name] === defaultValue ? secondValue : defaultValue,\n                    };\n                });\n            };\n        \n            render() {\n                \n                return (\n                    <Provider\n                        value={{ [name]: this.state[name], toggle: this.toggle }}\n                    >\n                        {this.props.children}\n                    </Provider>\n                );\n            }\n        }\n    };\n\n    const ContextProvider = createClass();\n\n    return {\n        Provider: ContextProvider,\n        Consumer,\n    }\n}\n\nToggleContext.propTypes = {\n    name: PropTypes.string,\n    defaultValue: PropTypes.any,\n    secondValue: PropTypes.any,\n}","import ToggleContext from './ToggleContext.js';\n\nconst { Provider: ThemeContextProvider, Consumer: ThemeContextConsumer } = ToggleContext('theme', 'light', 'dark');\nconst { Provider: SizeContextProvider, Consumer: SizeContextConsumer } = ToggleContext('size', 'small', 'big');\n\nexport { \n    ThemeContextProvider,\n    ThemeContextConsumer, \n    SizeContextProvider, \n    SizeContextConsumer \n};","import React from 'react';\nimport PropTyes from 'prop-types';\nimport { ThemeContextConsumer, SizeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/ClockLabels.module.scss';\n\nfunction ClockLabels({ hoursDisplayed }) {\n    return (\n      <ThemeContextConsumer>\n        {({ theme }) => (\n          <SizeContextConsumer>\n            {({ size }) => (\n              <div className={`${styles.container} ${(size === 'big') ? styles.bigContainer : ''}`}>\n                <div className={`${styles[`${theme}Title`]} ${(hoursDisplayed) ? '' : styles.hide}`}>HOURS</div>\n                <div className={styles[`${theme}Title`]}>MINUTES</div>\n                <div className={styles[`${theme}Title`]}>SECONDS</div>\n              </div>\n            )}\n          </SizeContextConsumer>\n          )}\n      </ThemeContextConsumer>\n\n    );\n  }\n\n  ClockLabels.propTypes = {\n      hoursDisplayed: PropTyes.bool,\n  };\n\n  export default ClockLabels;","export const noop = () => {};\n\nexport function getNumberWithTimeUnitLabel(maxMinutes, notIncludedNumbersCb) {\n    \n    const minutesAndHoursArray = [];\n\n    const getLabel = (minute, hour) => {\n\n        const units = {\n            minute: 'minute',\n            hour: 'hour',\n        };\n        const setUnit = (num, unit) => (num === 1) ? unit : `${unit}s`;\n        const getNumWithUnit = (num, unit) => `${num} ${setUnit(num, unit)}`;\n\n        const hourWithUnit = getNumWithUnit(hour, units.hour);;\n        const minuteWithUnit = getNumWithUnit(minute, units.minute);\n\n        if (!hour) return minuteWithUnit;\n\n        if (!minute) return hourWithUnit;\n\n        return `${hourWithUnit} ${minuteWithUnit}`;\n    }\n\n    for ( let num = 1; num <= maxMinutes; num++) {\n\n        const numberNotIncluded = notIncludedNumbersCb(num);\n\n        if (numberNotIncluded) continue;\n\n        const hourNum = parseInt(num/60);\n        const minuteNum = num % 60;\n\n        const label = getLabel(minuteNum, hourNum);\n\n        minutesAndHoursArray.push({\n            label: label,\n            value: num,\n        });\n    }\n\n    return minutesAndHoursArray;\n};\n\nexport function isNaturalNumber (num) {\n\n    if (num[num.length -1] === '.') return false;\n\n    const numberToTest = Number(num);\n\n    if (Number.isNaN(numberToTest)) return false;\n\n    if (!Number.isInteger(numberToTest)) return false;\n\n    return true;\n};","import { noop } from '../../generalFunctions.js'\n\nexport const getClockMethod = (clockStarted, clockPaused, clockMethods, isTimerInZero = false) => {\n\n    const { startClock, pauseClock } = clockMethods;\n\n    if (isTimerInZero) return noop;\n\n    if (clockStarted && !clockPaused) return pauseClock;\n\n    return startClock;\n};\n\nexport const checkIfTimerIsInZero = (isCountDown, seconds, minutes, hours) => (isCountDown && seconds === 0 && minutes === 0 && hours === 0);\n\nexport const setNextSecondAndNextMinute = (isCountDown, seconds, minutes, hours) => {\n\n    let nextSecond = seconds;\n    let nextMinute = minutes;\n    let nextHour = hours;\n\n    if (isCountDown) {\n\n      if (nextSecond === 0) {\n\n        nextSecond = 59;\n\n        if (nextMinute === 0) {\n\n          nextMinute = 59;\n          nextHour--;\n\n        } else {\n\n          nextMinute--;\n\n        }\n      } else {\n\n        nextSecond--;\n\n      }\n\n    } else {\n\n      if (nextSecond === 59) {\n\n        nextSecond = 0;\n\n        if (nextMinute === 59) {\n\n          nextMinute = 0;\n          nextHour++;\n\n        } else {\n\n        nextMinute++;\n\n        }\n      } else {\n\n        nextSecond++;\n\n      }\n    }\n\n    return {\n        nextSecond,\n        nextMinute,\n        nextHour,\n    }\n};\n\nexport const getClosestSecond = (ms) => +ms.toFixed();\n\nexport const getMethodsForEnterPressing = ({\n  clockStatus,\n  clockByUnits, \n  clockMethods,\n  setNewTimer, \n  focusOnInputSettings, \n  isCountDown\n}) => {\n\n  const { clockStarted, clockPaused } = clockStatus;\n  const { seconds, minutes, hours } = clockByUnits;\n  const { isFocused, handleFocus } = focusOnInputSettings\n\n  let arrayOfMethods = [];\n\n  if (!clockStarted && !clockPaused) {\n    arrayOfMethods.push(() => setNewTimer(seconds, minutes, hours));\n  }\n\n  if (isCountDown && isFocused) arrayOfMethods.push(() => handleFocus(false));\n\n  const isTimerInZero = checkIfTimerIsInZero(isCountDown, seconds, minutes, hours);\n\n  const keyMethod = getClockMethod(clockStarted, clockPaused, clockMethods, isTimerInZero);\n  arrayOfMethods.push(keyMethod);\n\n  return arrayOfMethods;\n};\n\nexport function makeTimeNumberOperations(firstNumInSeconds, secondNumInSeconds, operation = 'sum') {\n\n  let result;\n\n  switch(operation) {\n    case 'sum':\n      result = firstNumInSeconds + secondNumInSeconds; \n      return getTimeOutOfSeconds(result);\n    case 'rest':\n      result = firstNumInSeconds - secondNumInSeconds;\n      return (result >= 0) ? getTimeOutOfSeconds(result) : getTimeOutOfSeconds(0);\n    default: \n      result = firstNumInSeconds + secondNumInSeconds;\n      return getTimeOutOfSeconds(result)\n  }\n}\n\nexport function getSecondsOutOfTime({ seconds, minutes, hours }) {\n  return seconds + minutes * 60 + hours * 3600;\n}\n\nexport function getTimeOutOfSeconds(numOfAnyDigitsInSeconds) {\n\n  let num = numOfAnyDigitsInSeconds;\n  const time = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n  }\n\n  if (num < 60) {\n\n    time.seconds = getClosestSecond(num);\n\n    return time;\n  }\n\n  num = num / 60;\n  if (num < 60) {\n\n    time.minutes = Number.parseInt(num);\n    const secondsWithDecimals = numOfAnyDigitsInSeconds - time.minutes * 60;\n\n    time.seconds = getClosestSecond(secondsWithDecimals);\n\n    return time;\n  \n  }\n\n  num = num / 60;\n  if (num <= 99) {\n\n    time.hours = Number.parseInt(num);\n    time.minutes = Number.parseInt(numOfAnyDigitsInSeconds / 60 - time.hours * 60);\n\n    const secondsWithDecimals = numOfAnyDigitsInSeconds - time.minutes * 60 - time.hours * 3600;\n\n    time.seconds = getClosestSecond(secondsWithDecimals);\n\n    return time;\n\n  }\n\n  time.seconds = 59;\n  time.minutes = 59;\n  time.hours = 99;\n\n}\n\n// It recieves only Natural Numbers\nexport function solveExcessInTimeUnitsOfTwoDigits(numOfSeconds = 0, numOfMinutes = 0, numOfHours = 0, convertHours = true) {\n\n  let seconds = numOfSeconds,\n      minutes = numOfMinutes,\n      hours = numOfHours;\n\n  if (seconds <= 60 && minutes <= 60 && hours <= 99) return { seconds, minutes, hours };\n\n  if (seconds > 60) {\n      seconds -= 60;\n      minutes += 1;\n  }\n\n  if (convertHours && minutes > 60) {\n      minutes -= 60;\n      hours += 1;\n  }\n\n  if (hours > 99) {\n\n      hours = 99;\n      minutes = 59;\n      seconds = 59;\n      \n  }\n\n  return {\n      seconds,\n      minutes,\n      hours,\n  };\n};\n\nexport const addLeadingZero = num => {\n  const stringNum = num.toString();\n\n  return (num < 10) ? ['0', stringNum] : [stringNum[0], stringNum[1]];\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addLeadingZero } from './clock-functions.js';\nimport { noop } from '../../generalFunctions.js';\nimport { ThemeContextConsumer, SizeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/NumbersOfClock.module.scss';\n\nconst TIME_UNITS = {\n    seconds: 'seconds',\n    minutes: 'minutes',\n    hours: 'hours',\n}\n\nclass NumbersOfClock extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            activeSpan: null,\n        };\n\n        this.spanRefsSettings = [\n            {\n                positionInClockRightToLeft: 6,\n                ref: 'secondDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 5,\n                ref: 'firstDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 4,\n                ref: 'secondDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 3,\n                ref: 'firstDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 2,\n                ref: 'secondDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n            {\n                positionInClockRightToLeft: 1,\n                ref: 'firstDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n        ]\n    }\n\n    removeClassOfSpanExceptTargeted = (spanRefsArr, target) => {\n\n        let targetSpan = spanRefsArr.find(({ element }) => element === target);\n\n        if ( !targetSpan ) return this.setState({ activeSpan: null })\n\n        this.setState({ activeSpan: targetSpan.element});\n        this.props.setPositionOfCursorInInput(targetSpan.positionInClockRightToLeft - 1);\n\n        return;\n\n    };\n\n    selectBorderForSpan = () => {\n\n        const { spanToBorder, focusOnInput } = this.props;\n\n        const spanRefs = this.spanRefsSettings.map((spanSettings) => {\n            const cloneObj = Object.assign({}, spanSettings);\n            const { positionInClockRightToLeft, ref} = cloneObj;\n\n            cloneObj.element = this[ref];\n            cloneObj.defaultSelectedSpan = (positionInClockRightToLeft === 1)\n            \n            return cloneObj;\n        });\n\n        if (!focusOnInput) {\n            this.removeClassOfSpanExceptTargeted(spanRefs, null);\n\n            return;\n        }\n\n        const spanElements = spanRefs.map(e => e.element)\n        const activeSpan = spanElements.find( elem => (elem.classList.contains(styles.activeSpan)) ? elem : undefined);\n        const isSpanAvailableToBorder = (spanToBorder) ? spanToBorder.classList.contains(styles.defaultSpanColor) : false;\n\n        if ( (activeSpan && !isSpanAvailableToBorder) ||\n        (activeSpan && !spanToBorder) ||\n        (spanToBorder && !spanElements.includes(spanToBorder))) return;\n\n        if ( (!activeSpan && !spanToBorder) || (!activeSpan && !isSpanAvailableToBorder) ) {\n\n            const { element: targetSpan } = spanRefs.find(({ defaultSelectedSpan }) => (defaultSelectedSpan === true));\n\n            this.removeClassOfSpanExceptTargeted(spanRefs, targetSpan);\n\n            return;\n        }\n\n        this.removeClassOfSpanExceptTargeted(spanRefs, spanToBorder);\n    };\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.spanToBorder !== this.props.spanToBorder ||\n            prevProps.focusOnInput !== this.props.focusOnInput) {\n            \n            this.selectBorderForSpan();\n        }\n    }\n\n    render () {\n        \n        const { hours, focusOnInput, inputValueLength, handleClockEvents, isCountDown } = this.props;\n        const { activeSpan } = this.state;\n\n        const numbersByUnit = {\n            [TIME_UNITS.seconds]: addLeadingZero(this.props.seconds),\n            [TIME_UNITS.minutes]: addLeadingZero(this.props.minutes),\n            [TIME_UNITS.hours]: addLeadingZero(this.props.hours),\n        };\n\n        const spanRefsSettings = this.spanRefsSettings.map((obj, i) => {\n            const cloneObj = Object.assign({}, obj);\n\n            const unitArray = numbersByUnit[obj.unit];\n            const value = unitArray[i % 2];\n\n            cloneObj.value = value\n\n            return cloneObj;\n        });\n\n        const clockSpans = spanRefsSettings.map(({ \n            positionInClockRightToLeft: inputLength,\n            ref,\n            value,\n        }) => {\n        return <span\n            key={ref}\n            ref={e => this[ref] = e}\n            className={\n                `${(activeSpan === this[ref]) ? styles.activeSpan : ''} ${(focusOnInput && inputValueLength < inputLength) ?\n                styles.withoutInputValue : (isCountDown) ? styles.defaultSpanColor : ''}`\n            } \n        >\n            {value}\n        </span>\n    });\n\n        const hoursToDisplay = clockSpans.slice(0,2)\n        const minutesToDisplay = clockSpans.slice(2, 4);\n        const secondsToDisplay = clockSpans.slice(4, 6);\n\n        return (\n            <SizeContextConsumer>\n                {({ size }) => (\n                    <div \n                        className={\n                            `${styles.container} \n                            ${(size === 'big') ? styles.bigContainer : ''}\n                            ${(!focusOnInput && isCountDown) ? styles.clockDefined : ''}`\n                        }\n                        onClick={handleClockEvents}\n                        onMouseDown={handleClockEvents}\n                    >\n                        <ThemeContextConsumer>\n                            {({ theme }) => (\n                                    <React.Fragment>\n                                        <div className={`${styles.hoursContainer} ${(hours === 0 && !focusOnInput) ? styles.hide : ''}`}>\n                                            <div className={styles[`${theme}Numbers`]}>{hoursToDisplay}</div>\n                                            <div className={styles[`${theme}Numbers`]}>:</div>\n                                        </div>\n                                        <div className={styles[`${theme}Numbers`]}>{minutesToDisplay}</div>\n                                        <div className={styles[`${theme}Numbers`]}>:</div>\n                                        <div className={styles[`${theme}Numbers`]}>{secondsToDisplay}</div>\n                                    </React.Fragment>\n                                )}\n                        </ThemeContextConsumer>\n                    </div>\n                )}\n            </SizeContextConsumer>\n        );\n    }\n}\n\nNumbersOfClock.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    isCountDown: PropTypes.bool,\n    spanToBorder: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    setPositionOfCursorInInput: PropTypes.func,\n};\n\nNumbersOfClock.defaultProps = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    focusOnInput: false,\n    inputValueLength: 0,\n    handleClockEvents: noop,\n};\n\n\nexport default NumbersOfClock;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/ClockButtons.module.scss';\nimport { getClockMethod } from './clock-functions.js';\nimport { SizeContextConsumer } from '../../Context/ToggleContexts'\n\nexport default function ClockButtons({ methods, states, isTimerInZero, firstButtonRef }){\n\n    let firstButton = getSettingsForButton(states.started, states.paused, methods, isTimerInZero);\n    const addRef = { ref: firstButtonRef};\n    firstButton = Object.assign(firstButton, addRef);\n\n    const secondButton = {\n        onClick: methods.stopClock,\n        text: 'Reset',\n        className: `${styles.dangerButton} ${(states.started) ? styles.animateToRight : styles.hideBtn}`\n    }\n\n    return (\n        <SizeContextConsumer>\n            {({ size }) => (\n                <div className={`${styles.container} ${(size === 'big') ? styles.bigContainer : ''}`}>\n                    <button \n                        className={`${styles.button} ${firstButton.className}`} \n                        onClick={firstButton.onClick}\n                        ref={firstButton.ref}\n                    >\n                        {firstButton.text}\n                    </button>\n                    <button \n                        className={`${styles.button} ${secondButton.className}`} \n                        onClick={secondButton.onClick}\n                        ref={secondButton.ref}\n                    >\n                        {secondButton.text}\n                    </button>\n                </div>\n            )}\n        </SizeContextConsumer>\n    );\n}\n\nconst getSettingsForButton = (clockStarted, clockPaused, onClickMethods, isTimerInZero) => {\n\n    const clockMethod = getClockMethod(clockStarted, clockPaused, onClickMethods, isTimerInZero);\n\n    const btnInfo = {\n        onClick: clockMethod,\n    };\n\n    if (!clockStarted) {\n\n        btnInfo.text = 'Start';\n        btnInfo.className = `${(isTimerInZero) ? styles.notAllow : styles.startButton}`;\n\n\n    } else if (!clockPaused) {\n\n        btnInfo.text = 'Pause';\n        btnInfo.className = `${styles.warningButton} ${styles.animateToLeft}`;\n\n    } else {\n\n        btnInfo.text = 'Continue';\n        btnInfo.className = `${styles.successButton} ${styles.animateToLeft}`;\n    }\n\n    return btnInfo;\n  \n};\n\nClockButtons.propTypes = {\n    methods: PropTypes.shape({\n        stopClock: PropTypes.func,\n        pauseClock: PropTypes.func,\n        startClock: PropTypes.func,\n    }),\n    states: PropTypes.shape({\n        started: PropTypes.bool,\n        paused: PropTypes.bool,\n    }),\n    isTimerInZero: PropTypes.bool,\n    firstButtonRef: PropTypes.func,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/Clock.module.scss';\nimport { NumbersOfClock, ClockLabels, ClockButtons } from './index.js';\nimport { noop } from '../../generalFunctions.js';\nimport { \n  solveExcessInTimeUnitsOfTwoDigits,\n  checkIfTimerIsInZero,\n  setNextSecondAndNextMinute,\n  getMethodsForEnterPressing,\n  makeTimeNumberOperations,\n  getSecondsOutOfTime,\n} from './clock-functions.js';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props) \n\n    const { seconds: initialSeconds, minutes: initialMinutes, hours: initialHours } = this.props;\n\n    this.state = {\n      clockStarted: false,\n      clockPaused: false,\n      seconds: initialSeconds,\n      minutes: initialMinutes,\n      hours: initialHours,\n      timeWhenInactivityStarted : {\n        seconds: null,\n        minutes: null,\n        hours: null,\n        isInactive: false,\n      },\n    }\n\n    this.clockMethods = {\n      startClock: this.startClock, \n      pauseClock: this.pauseClock,\n      stopClock: this.stopClock,\n    };\n\n  }\n  \n  tick = () => {\n    const { seconds, minutes, hours } = this.state;\n\n    if (this.props.isCountDown && seconds === 0 && minutes === 0 && hours === 0) {\n        \n      this.stopClock();\n      this.props.bellStarting();\n      return;\n\n    }\n\n    if (!this.props.isCountDown && seconds === 59 && minutes === 59 && hours === 99) {\n\n      this.stopClock();\n      return;\n\n    }\n\n    const { nextSecond, nextMinute, nextHour } = setNextSecondAndNextMinute(this.props.isCountDown, seconds, minutes, hours)\n\n    const isTimeToRing = (Number.isInteger(nextMinute / this.props.ringEvery) && nextSecond === 0);\n\n    if (!this.props.isCountDown && isTimeToRing) this.props.bellStarting();\n    \n    this.setState({\n      seconds: nextSecond,\n      minutes: nextMinute,\n      hours: nextHour,\n    })\n  };\n\n  startClock = () => {\n    this.clockId = setInterval(this.tick, 1000);\n\n    this.setState({ \n      clockStarted: true,\n      clockPaused: false,\n     });\n  };\n\n  pauseClock = () => {\n    clearInterval(this.clockId);\n\n    this.setState({ clockPaused: true });\n  };\n\n\n  stopClock = () => {\n    const { seconds, minutes, hours } = this.props;\n\n    clearInterval(this.clockId);\n\n    this.setState({ \n      clockStarted: false,\n      clockPaused: false,\n      seconds: seconds,\n      minutes: minutes,\n      hours: hours,\n     });\n  };\n\n  setNewTimer = (seconds, minutes, hours) => {\n\n    const { \n      minutes: newMinutes,\n      seconds: newSeconds,\n      hours: newHours,\n    } = solveExcessInTimeUnitsOfTwoDigits(seconds, minutes, hours);\n\n    this.setState({\n      seconds: newSeconds,\n      minutes: newMinutes,\n      hours: newHours,\n    });\n  }\n\n  keyPressingOnClock = (key) => {\n\n    const { clockStarted, clockPaused } = this.state;\n    const { isCountDown, focusOnInput, hours, minutes, seconds } = this.props;\n\n    if (document.activeElement === this.startAndPauseButton) return;\n\n    const arrayOfMethods = getMethodsForEnterPressing({\n      clockStatus: { clockStarted, clockPaused },\n      clockByUnits: { seconds, minutes, hours },\n      clockMethods: this.clockMethods,\n      focusOnInputSettings: {\n        isFocused: focusOnInput,\n        handleFocus: () => this.props.handleOnInputFocus(false),\n      },\n      setNewTimer: this.setNewTimer,\n      isCountDown,\n    });\n\n    switch (key) {\n      case 'Enter':\n        arrayOfMethods.forEach(fn => fn());\n        break;\n\n      default:\n        noop();\n    };\n  };\n\n  setClockInactivity = () => {\n\n    this.setState({\n      timeWhenInactivityStarted: {\n        seconds: this.state.seconds,\n        minutes: this.state.minutes,\n        hours: this.state.hours,\n        isInactive: true,\n      },\n    });\n  }\n\n  handleClockInactivity = () => {\n    const { seconds, minutes, hours } = this.state.timeWhenInactivityStarted;\n    const { inactivityInSeconds } = this.props.timeInactivity;\n\n    const stateSeconds = getSecondsOutOfTime({ seconds, minutes, hours })\n\n    const addSecondsOfInactivityToClock = ({ seconds, minutes, hours } = {}) => this.setNewTimer(seconds, minutes, hours);\n\n    if (this.props.isCountDown) {\n\n      const newTimer = makeTimeNumberOperations(stateSeconds, inactivityInSeconds, 'rest');\n      addSecondsOfInactivityToClock(newTimer);\n\n    } else {\n\n      const newTimer = makeTimeNumberOperations(stateSeconds, inactivityInSeconds, 'sum');\n      addSecondsOfInactivityToClock(newTimer);\n\n    }\n\n    this.setState({\n      timeWhenInactivityStarted: {\n        seconds: null,\n        minutes: null,\n        hours: null,\n        isInactive: false,\n      },\n    })\n  }\n\n  componentDidUpdate(prevProps){\n\n    const { \n      clockStarted,\n      clockPaused, \n      timeWhenInactivityStarted : { isInactive: isClockInactive }, \n    } = this.state;\n    const { focusOnInput, inputValueLength, keyPressed } = this.props;\n\n    const areHoursDisplayedInClock = (this.state.hours !== 0 || this.props.focusOnInput);\n\n    const areConditionsForSettingANewTimer = (!this.props.inputValueLength && !clockStarted && !clockPaused &&\n      (this.state.hours !== prevProps.hours ||\n      this.state.minutes !== prevProps.minutes ||\n      this.state.seconds !== prevProps.seconds));\n\n    if (prevProps.keyPressed !== keyPressed) this.keyPressingOnClock(this.props.keyPressed);\n\n    if (inputValueLength && clockPaused) this.stopClock();\n\n    if (focusOnInput && !prevProps.focusOnInput && clockStarted) this.pauseClock();\n\n    if (areConditionsForSettingANewTimer) {\n      this.setNewTimer(prevProps.seconds, prevProps.minutes, prevProps.hours);\n    }\n\n    if (areHoursDisplayedInClock !== this.props.hoursDisplayedInClock.value) {\n      \n      const { setHoursInClock, stateName } = this.props.hoursDisplayedInClock;\n\n      setHoursInClock(stateName, areHoursDisplayedInClock);\n    }\n\n    const { isWindowTabActive } = this.props.timeInactivity;\n\n    if (prevProps.timeInactivity.isWindowTabActive && !isWindowTabActive && clockStarted && !clockPaused) this.setClockInactivity()\n\n    if (!prevProps.timeInactivity.isWindowTabActive && isWindowTabActive && isClockInactive) this.handleClockInactivity();\n\n  }\n  \n  render () {\n\n    const { \n      clockStarted, \n      clockPaused,\n    } = this.state;\n\n    const seconds = (this.props.inputValueLength) ? this.props.seconds : this.state.seconds;\n    const minutes = (this.props.inputValueLength) ? this.props.minutes : this.state.minutes;\n    const hours = (this.props.inputValueLength) ? this.props.hours : this.state.hours;\n\n    const isTimerInZero = checkIfTimerIsInZero(this.props.isCountDown, seconds, minutes, hours)\n    \n    return (\n      <div id={this.props.ariaIdForContainer} aria-labelledby={this.props.ariaIdForContainer} role='tabpanel'>\n        <div role='timer' className={styles.container}>\n          <NumbersOfClock \n            seconds={seconds}\n            minutes={minutes}\n            hours={hours}\n            isCountDown={this.props.isCountDown}\n            spanToBorder={this.props.numberClicked}\n            focusOnInput={this.props.focusOnInput}\n            inputValueLength={this.props.inputValueLength}\n            handleClockEvents={this.props.handleClockEvents}\n            setPositionOfCursorInInput={this.props.setPositionOfCursorInInput}\n          />\n          {this.props.children}\n          <ClockLabels hoursDisplayed={this.props.hoursDisplayedInClock.value}/>\n        </div>\n        <ClockButtons\n          methods={this.clockMethods}\n          states={{\n            started: clockStarted,\n            paused: clockPaused,\n          }}\n          isTimerInZero={isTimerInZero}\n          firstButtonRef={el => this.startAndPauseButton = el}\n        />\n      </div>\n    );  \n  }\n}\n \nClock.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    minutes: PropTypes.number.isRequired,\n    hours: PropTypes.number.isRequired,\n    isCountDown: PropTypes.bool.isRequired,\n    children: PropTypes.element,\n    handleOnInputFocus: PropTypes.func,\n    numberClicked: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    ringEvery: PropTypes.number,\n    setPositionOfCursorInInput: PropTypes.func,\n    hoursDisplayedInClock: PropTypes.object,\n    timeInactivity: PropTypes.shape({\n      start: PropTypes.number,\n      inactivityInSeconds: PropTypes.number,\n      isWindowTabActive: PropTypes.bool,\n  }),\n    ariaIdForContainer: PropTypes.string,\n};\n\nClock.defaultProps = {\n    seconds: 0,\n    minutes: 5,\n    hours: 0,\n    isCountDown: false,\n    focusOnInput: false,\n};\n\nexport default Clock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Clock from './Clock.js'\nimport styles from './css/Timer.module.scss';\nimport { isNaturalNumber } from '../../generalFunctions.js';\nimport { solveExcessInTimeUnitsOfTwoDigits } from './clock-functions.js';\n\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.inputClockRef = React.createRef();\n\n        const { \n            seconds: initialSeconds,\n            minutes: initialMinutes,\n            hours: initialHours, \n            } = this.props;\n\n        this.state = {\n            inputValue: '',\n            focusOnInput: false,\n            inputSeconds: initialSeconds,\n            inputMinutes: initialMinutes,\n            inputHours: initialHours,\n            clickedInClockContainer: false,\n            numberClicked: null,\n        };\n    }\n\n    onInputChange = (ev) => {\n\n        const isValidNumber = isNaturalNumber(ev.target.value);\n        if (!isValidNumber) return;\n        \n        const value = ev.target.value.toString();\n\n        if (value) {\n\n            const timeToSet = {\n                seconds: (value[value.length - 2] || 0) + (value[value.length - 1] || 0),\n                minutes: (value[value.length - 4] || 0) + (value[value.length - 3] || 0),\n                hours: (value[value.length -6] || 0) + (value[value.length -5] || 0),\n            };\n\n            const inputValue = (value.length >= 7) ? value.slice(value.length - 6, value.length) : value;\n        \n            this.setState({ \n                inputValue: inputValue,\n                inputSeconds: +timeToSet.seconds,\n                inputMinutes: +timeToSet.minutes,\n                inputHours: +timeToSet.hours,\n            });\n        } else {\n            this.setState({\n                inputValue: '',\n                inputSeconds: 0,\n                inputMinutes: 0,\n                inputHours: 0,\n            })\n        }\n    };\n\n    changeTimerNumbers = () => {\n        const { inputSeconds, inputMinutes, inputHours} = this.state;\n        const { seconds, minutes, hours} = solveExcessInTimeUnitsOfTwoDigits(inputSeconds, inputMinutes, inputHours);\n\n        this.setState({ \n            inputSeconds: seconds,\n            inputMinutes: minutes,\n            inputHours: hours,\n        });\n    }\n\n    handleOnInputFocus = (focusOnInput = !this.state.focusOnInput) => {\n\n        if (!focusOnInput) {\n            this.changeTimerNumbers();\n        }\n\n        if (!focusOnInput && document.activeElement === this.inputClockRef.current) {\n            this.inputClockRef.current.blur();\n        }\n\n        this.setState({ \n            focusOnInput: focusOnInput,\n            inputValue: '',\n        });\n    };\n\n    setPositionOfCursorInInput = position => {\n        if (!this.state.inputValue.length) return;\n\n        const value = this.state.inputValue.length - position;\n        this.inputClockRef.current.setSelectionRange(value, value);\n    }\n\n    handleOnBlur = () => {\n\n        if (document.activeElement === this.inputClockRef.current) return; \n        //Avoid losing focus when changing tab or going out of browser\n\n        if (this.state.clickedInClockContainer) {\n\n            this.setState({ clickedInClockContainer: false });\n            return;\n        }\n\n        this.handleOnInputFocus(false);\n        this.setState({ numberClicked: null })\n\n        return;\n    }\n\n    handleOnFocus = () => {\n        \n        if (!this.state.focusOnInput) {\n\n            this.handleOnInputFocus(true);\n            this.inputClockRef.current.focus();\n\n            return;\n        }\n    }\n\n    handleOnMouseDown = () => {\n        if (!this.state.clickedInClockContainer) this.setState({ clickedInClockContainer: true });\n    }\n\n    handleOnClick = (ev) => {\n\n        if (ev.target.nodeName === 'SPAN') this.setState({ numberClicked: ev.target });\n        \n        if (!this.state.focusOnInput) this.handleOnInputFocus(true);\n\n        this.inputClockRef.current.focus();\n        this.setState({ clickedInClockContainer: false });\n\n    }\n\n    handleClockEvents = (ev) => {\n\n        const eventsHandlers = {\n            'blur': this.handleOnBlur,\n            'click': this.handleOnClick,\n            'focus': this.handleOnFocus,\n            'mousedown': this.handleOnMouseDown,\n        }\n\n        const getEventHandler = (event) => eventsHandlers[event];\n        const handler = getEventHandler(ev.type);\n\n        return handler(ev);\n\n    };\n   \n    render () {\n        \n        const { \n            focusOnInput, \n            inputValue,\n            inputHours,\n            inputMinutes,\n            inputSeconds,\n            numberClicked,\n        } = this.state;\n\n        return (\n            <Clock\n                hours={inputHours} \n                minutes={inputMinutes} \n                seconds={inputSeconds} \n                isCountDown={true}\n                numberClicked={numberClicked}\n                focusOnInput={focusOnInput}\n                inputValueLength={inputValue.length}\n                handleClockEvents={this.handleClockEvents}\n                handleOnInputFocus={this.handleOnInputFocus}\n                bellStarting={this.props.bellStarting}\n                keyPressed={this.props.keyPressed}\n                setPositionOfCursorInInput={this.setPositionOfCursorInInput}\n                setHoursInClock={this.props.setHoursInClock}\n                hoursDisplayedInClock={this.props.hoursDisplayedInClock}\n                timeInactivity={this.props.timeInactivity}\n                ariaIdForContainer={this.props.ariaIdForContainer}\n            >\n                <input\n                    tabIndex={0}\n                    ref={this.inputClockRef}\n                    onBlur={this.handleClockEvents}\n                    onFocus={this.handleClockEvents}\n                    inputMode='numeric'\n                    type='text'\n                    onChange={this.onInputChange}\n                    className={styles.hiddenInput}\n                    value={inputValue}\n                    aria-hidden=\"true\"\n                />\n            </Clock>\n        );  \n    }       \n}\n\n\nTimer.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    hoursDisplayedInClock: PropTypes.object,\n    timeInactivity: PropTypes.shape({\n        start: PropTypes.number,\n        inactivityInSeconds: PropTypes.number,\n        isWindowTabActive: PropTypes.bool,\n    }),\n    ariaIdForContainer: PropTypes.string,\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/Modal.module.scss';\nimport { noop } from '../../generalFunctions.js'\n\nclass Modal extends Component {\n  \n  constructor(props) {\n    super(props); \n\n    this.divToFocus = null;\n\n    this.setDivFocus = element => {\n      this.divToFocus = element;\n    };\n\n    this.focusDiv = () => {\n      this.divToFocus.focus();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (this.props.modalState && prevProps.modalState !== this.props.modalState) {\n\n      this.focusDiv();\n\n    }\n  }\n\n  closeModalOnKeyPress = (ev) => {\n\n    if (this.props.stopKeyEventPropagation) ev.nativeEvent.stopImmediatePropagation();\n\n    switch (ev.key) {\n      case 'Escape':\n        return this.props.closeModal(ev);\n      case 'Enter':\n        return this.props.closeSuccessModal(ev);\n      default:\n        noop();\n    };\n\n  };\n\n  render() {\n\n    const { modalState, children, title, modalValidation } = this.props;\n\n    return (\n      <div \n        role='dialog'\n        aria-labelledby='modalDialogTitle'\n        aria-describedby=\"bellsDialog\"\n        ref={this.setDivFocus}\n        tabIndex={0} \n        className={\n          `${styles.globalAlert} \n          ${styles.modalEffect} \n          ${(modalState) ? styles.showModal : ''} \n          ${(modalValidation) ? '' : styles.invalidModal}`\n        }\n        onKeyDown={(ev) => this.closeModalOnKeyPress(ev)}>\n        <div className={styles.modalContent}>\n          <div className={styles.modalTitleContainer}>\n            <h2 id='modalDialogTitle' className={styles.modalTitle}>{title}</h2>\n          </div>\n          {children}\n        </div>\n      </div>\n      );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  modalState: PropTypes.bool.isRequired,\n  modalValidation: PropTypes.bool,\n  closeSuccessModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  stopKeyEventPropagation: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  title: 'Modal',\n  modalState: false,\n  modalValidation: true,\n};\n\nexport default Modal;","import longBell from  '../.././static/Audio/long-bell.mp3';\nimport bowlStruck from '../.././static/Audio/bowl-struck.mp3';\nimport japaneseGong from '../.././static/Audio/bell4.mp3';\nimport buddhistPrayerBell from '../.././static/Audio/buddhist-prayer-bell.mp3';\nimport burmeseGong from '../.././static/Audio/gong-burmese.wav';\nimport chineseGong from '../.././static/Audio/gong-chinese.wav';\nimport tingshaBell from '../.././static/Audio/tingsha.wav';\nimport zenBell from '../.././static/Audio/zen-bell.mp3';\nimport deepBell from '../.././static/Audio/deep-bell.mp3';\nimport oceanWaves from '../.././static/Audio/ocean-waves.mp3';\nimport rainforestWaterways from '../.././static/Audio/rainforest-waterways.mp3';\nimport soothingWinds from '../.././static/Audio/soothing-winds.mp3';\nimport tibetanBell from '../.././static/Audio/tibetan-bell.mp3';\n\nconst defaultAudioSelected = 'Bowl Struck';\n\nconst audiosInfoArray = [\n    {\n        name: 'Long Bell',\n        src: longBell,\n    },\n    {\n        name: 'Bowl Struck',\n        src: bowlStruck,\n    },\n    {\n        name: 'Japanese Gong',\n        src: japaneseGong,\n    },\n    {\n        name: 'Buddhist Prayer Bell',\n        src: buddhistPrayerBell,\n    },\n    {\n        name: 'Burmese Gong',\n        src: burmeseGong,\n    },\n    {\n        name: 'Chinese Gong',\n        src: chineseGong,\n    },\n    {\n        name: 'Tingsha Bell',\n        src: tingshaBell,\n    },\n    {\n        name: 'Zen Bell',\n        src: zenBell,\n    },\n    {\n        name: 'Deep Bell',\n        src: deepBell,\n    },\n    {\n        name: 'Ocean Waves',\n        src: oceanWaves,\n    },\n    {\n        name: 'Rainforest Waterways',\n        src: rainforestWaterways,\n    },\n    {\n        name: 'Soothing Winds',\n        src: soothingWinds,\n    },\n    {\n        name: 'Tibetan Bell',\n        src: tibetanBell,\n    },\n];\n\nexport { audiosInfoArray, defaultAudioSelected };","import React, { Component } from 'react';\nimport Modal from './Modal.js'\nimport PropTypes from 'prop-types';\nimport styles from './css/AudiosModal.module.scss';\nimport { audiosInfoArray, defaultAudioSelected } from '../Bells';\nimport { TextField, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport AutoComplete from '@material-ui/lab/Autocomplete';\nimport { getNumberWithTimeUnitLabel } from '../../generalFunctions.js';\nimport { SizeContextConsumer } from '../../Context/ToggleContexts.js';\n\nconst maxOfMinutesSelection = 360;\n\nconst notIncludedNumber = num => {\n    return ((num > 60 && num % 5 !== 0) ||  \n     (num > 90 && num % 10 !== 0) ||\n     (num > 120 && num % 30 !== 0))\n}\n\nclass AudiosModal extends Component {\n    constructor(props) {\n        super(props);\n\n        let initialSelectValue = (this.props.ringBellEvery === 1) ?\n         `${this.props.ringBellEvery} minute` :\n         `${this.props.ringBellEvery} minutes`;\n\n        this.state = {\n            selectAudiosValue: defaultAudioSelected,\n            autoCompleteInputValue: initialSelectValue,\n        };\n    }\n\n    handleSelectAudiosChange = (ev) => this.setState({ selectAudiosValue: ev.target.value });\n\n    handleInputChange = (ev, value) => {\n        if (!ev) return;\n\n        this.setState({ autoCompleteInputValue: value});\n    }\n\n    startAudioBellFromBeginning = () => {\n\n        this.bellRef.currentTime = 0;\n        this.bellRef.play();\n    };\n\n    closeSuccessModal = () => this.props.closeModal();\n    \n    closeModal = (ev) => this.props.closeModal(ev, false);\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.bellStarting === false && this.props.bellStarting === true) {\n            this.startAudioBellFromBeginning();\n        }\n    }\n\n    render() {\n\n        const { autoCompleteInputValue, selectAudiosValue } = this.state;\n\n        const sortComparison = (nameA, nameB) =>  (nameA > nameB) ? 1 : (nameA < nameB) ? -1 : 0;\n\n        const orderedAudios = audiosInfoArray.sort((objA, objB) => sortComparison(objA.name, objB.name));\n        const audios = orderedAudios.map(({ name }, i) => {\n\n            return <MenuItem key={i} value={name}> {name} </MenuItem>\n        });\n\n        const { src: selectedAudioSrc } = audiosInfoArray.find(({ name }) => name === selectAudiosValue);\n        const minutesOptionsArr = getNumberWithTimeUnitLabel(maxOfMinutesSelection, notIncludedNumber);\n        \n        return (\n            <Modal \n                title={'Settings'}\n                modalState={this.props.modalState}\n                closeModal={this.closeModal}\n                closeSuccessModal={this.closeSuccessModal}\n                stopKeyEventPropagation={this.props.stopKeyEventPropagation}\n            >   \n            <SizeContextConsumer>\n                {({ size }) => (\n                    <div className={(size === 'big' ? styles.bigContainer : '')}>\n                        <div className={styles.audioSelection}>\n                            <FormControl>\n                                <InputLabel id=\"simple-select-label\">Bells</InputLabel>\n                                <Select\n                                    labelId=\"simple-select-label\"\n                                    id=\"simple-select\"\n                                    value={this.state.selectAudiosValue}\n                                    onChange={this.handleSelectAudiosChange}\n                                >\n                                    {audios}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <figure className={styles.reproduceAudio}>\n                            <figcaption>Reproduce Bell</figcaption>\n                            <audio ref={e => this.bellRef = e} src={selectedAudioSrc} controls>\n                                Your browser does not support the\n                                <code>audio</code> element.\n                            </audio>\n                        </figure>\n                        <div className={`${styles.inputContainer} ${(this.props.showTimer) ? styles.hide : ''}`}>\n                            <AutoComplete\n                                id=\"combo-box\"\n                                options={minutesOptionsArr}\n                                getOptionSelected={(option, { value }) => option.value === value}\n                                getOptionLabel={(option) => option.label}\n                                onChange={this.props.handleMinutesSelect}\n                                onInputChange={(ev, value) => this.handleInputChange(ev, value)}\n                                inputValue={autoCompleteInputValue}\n                                handleHomeEndKeys={true}\n                                filterSelectedOptions={true}\n                                fullWidth={true}\n                                renderInput={(params) => <TextField {...params} label=\"Ring every\" variant=\"outlined\" />}\n                            />\n                        </div>\n                        <div className={styles.buttonsContainer}>\n                            <button \n                                className={`${styles.alertButton} ${styles.button} ${(this.props.showTimer) ? styles.hide : ''}`}\n                                onClick={(ev) => this.closeModal(ev, false)}>\n                                Cancel\n                            </button>\n                            <button className={`${styles.successButton} ${styles.button}`} onClick={this.closeSuccessModal}>Save changes</button>\n                        </div>\n                    </div>\n                )}\n            </SizeContextConsumer>\n            </Modal>\n        );\n    }\n}\n\nAudiosModal.propTypes = {\n    modalState: PropTypes.bool,\n    ringBellEvery: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    closeModal: PropTypes.func,\n    closeSuccessModal: PropTypes.func,\n    stopKeyEventPropagation: PropTypes.bool,\n    bellStarting: PropTypes.bool,\n    handleMinutesSelect: PropTypes.func,\n    showTimer: PropTypes.bool,\n}\n\nexport default AudiosModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './css/TabButtons.module.scss';\nimport { SizeContextConsumer } from '../../Context/ToggleContexts.js';\n\n\nexport default function TabButtons({ classNames, handleClick, buttonsText, amountOfButtons, activeTab }) {\n\n    let buttons = [];\n\n    for (let i = 0; i < amountOfButtons; i++) {\n\n        let buttonText = (buttonsText[i]) ? buttonsText[i] : 'Button';\n\n        buttons.push(\n            <button\n                key={i}\n                tabIndex={0}\n                role='tab'\n                aria-selected={(activeTab === i)}\n                aria-controls={`Clock-${i + 1}`}\n                className={\n                    `${styles.buttons}\n                    ${(activeTab === i) ? styles.btnSelected : ''}\n                    ${(classNames.button) ? classNames.button : ''}`\n                }\n                onClick={() => handleClick(i)}\n            >\n                {buttonText}\n            </button>\n        )\n    }\n\n    return (\n        <SizeContextConsumer>\n            {({ size }) => (\n                <div role='tablist' aria-label='Clocks tablist' className={\n                    `${styles.container}\n                    ${(size === 'big') ? styles.bigContainer : ''}\n                    ${(classNames.container) ? classNames.container : ''}`}>\n                    {buttons}\n                </div>\n            )}\n        </SizeContextConsumer>\n    );\n}\n\nTabButtons.propTypes = {\n    activeTab: PropTypes.number,\n    handleClick: PropTypes.func,\n    amountOfButtons: PropTypes.number,\n    buttonsText: PropTypes.arrayOf(PropTypes.string),\n    classNames: PropTypes.shape({\n        container: PropTypes.string,\n        button: PropTypes.string,\n    }),\n};\n\nTabButtons.defaultProps = {\n    amountOfButtons: 2,\n    classNames: {\n        container: '',\n        button: '',\n        buttons: [''],\n    },\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsSVG from '../../static/Logos/cog-solid.svg';\nimport { ThemeContextConsumer, SizeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/BelowClockContainer.module.scss';\n\nfunction BelowClockContainer({ showTimer, numberToRing, handleModal, modalClicked }) {\n\n    return (\n        <ThemeContextConsumer>\n            {({ theme }) => (\n                <SizeContextConsumer>\n                    {({ size }) => (\n                        <div className={`${styles.container} ${(size === 'big') ? styles.bigContainer : ''}`}>\n                            <span className={`${styles[`${theme}ContainerInfo`]} ${(showTimer) ? styles.hidden : '' }`} >    \n                                Ring every {numberToRing} {(numberToRing === 1) ? 'minute' : 'minutes'}\n                            </span>\n                            <div className={styles.settingsContainer}>\n                                <button className={styles.settingsLogoBtn} onClick={handleModal} aria-pressed={modalClicked}>\n                                    <figure>\n                                        <img \n                                            src={SettingsSVG}\n                                            style={{ filter: (theme === 'light') ? 'invert(1)' : 'invert(0.1)'}}\n                                            className={styles.settingsLogo} \n                                            alt='Settings Logo' \n                                            height='20' \n                                            width='20'\n                                        />\n                                    </figure>\n                                </button>\n                                <span className={styles.tooltip}>Settings</span>\n                            </div>\n                        </div>\n                    )}\n                </SizeContextConsumer>   \n            )}\n        </ThemeContextConsumer>\n    );\n}\n\nBelowClockContainer.propTypes = {\n    showTimer: PropTypes.bool,\n    numberToRing: PropTypes.number,\n    handleModal: PropTypes.func,\n    modalClicked: PropTypes.bool,\n}\n\nexport default BelowClockContainer;","import React from 'react';\nimport { ThemeContextConsumer, SizeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/SizeToggler.module.scss';\n\nexport default function SizeToggler() {\n\n    return (\n        <ThemeContextConsumer>\n            {({ theme }) => (\n                <SizeContextConsumer>\n                    {({ size, toggle }) => (\n                    <div className={`${styles.container} ${(size === 'big') ? styles.bigContainer : ''}`}>\n                        <button onClick={toggle} className={styles[`${theme}Button`]} aria-pressed={(size === 'big')}>\n                            {(size === 'big') ? 'Make it Small' : 'Make it Big' }\n                        </button>\n                    </div>\n                    )}\n                </SizeContextConsumer>\n            )}\n        </ThemeContextConsumer>\n    );\n    \n}","import React from 'react';\nimport { ThemeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/ThemeToggler.module.scss';\n\nexport default function ThemeToggler () {\n    \n    return (\n        <ThemeContextConsumer>\n            {\n                ({ theme, toggle }) => (\n                    <div className={styles.container}>\n                        <button\n                            onClick={toggle} \n                            className={styles[`${theme}Button`]}\n                            aria-pressed={(theme === 'dark')}\n                            aria-label={'Toggle Theme of Website'}\n                        >\n                        </button>\n                    </div>\n                )\n            }\n        </ThemeContextConsumer>\n    )\n}","import React from 'react';\nimport ThemeToggler from './ThemeToggler.js';\nimport { ThemeContextConsumer } from '../../Context/ToggleContexts.js';\nimport styles from './css/NavBar.module.scss';\n\nexport default function NavBar() {\n\n    return (\n        <ThemeContextConsumer>\n            {\n                ({ theme }) => (\n                    <ul className={styles[`${theme}NavBar`]}>\n                        <li>\n                            <ThemeToggler/>\n                        </li>\n                    </ul>\n                )\n            }\n        </ThemeContextConsumer>\n    )\n}\n","import React from 'react';\nimport './css/Footer.module.scss';\n\nexport default function Footer() {\n    return (\n        <footer>\n            <span>\n                Logos taken by&nbsp;\n                <a href='https://fontawesome.com/license'>Font Awesome</a>\n                &nbsp;and&nbsp;\n                <a href='https://icons8.com/'>Icons 8</a>\n            </span>\n        </footer>\n    )\n}","import React from 'react';\nimport Timer from './Components/Clock/Timer.js';\nimport { getClosestSecond } from './Components/Clock/clock-functions.js';\nimport { default as Stopwatch } from './Components/Clock/Clock.js';\nimport styles from './css/App.module.scss';\nimport AudiosModal from './Components/Modals/AudiosModal.js';\nimport { BelowClockContainer, TabButtons, SizeToggler, NavBar, Footer } from './Components/App';\nimport { ThemeContextConsumer, SizeContextConsumer } from './Context/ToggleContexts.js';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.mainContainerRef = React.createRef();\n\n        const initialStopwatchRingTime = 2;\n\n        this.state = {\n            activeTab: 0,\n            keyPressedEvent: null,\n            bellStarting: false,\n            timeOfTabInactivity: {\n                start: null,\n                inactivityInSeconds: null,\n                isWindowTabActive: true,\n            },\n            isTimerShowingHours: false,\n            isStopwatchShowingHours: false,\n            modalClicked: false,\n            modalSelectValue: initialStopwatchRingTime,\n            showingOverlay: false,  \n            numberToRing: initialStopwatchRingTime,\n        };\n    }\n\n    handleClockBtns = tabIndex => this.setState({ activeTab: tabIndex });\n\n    handleModal = (ev, succeed = true) => {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if ((!succeed && modalClicked) || (modalClicked && modalSelectValue === '')) {\n            this.setState({ modalSelectValue: this.state.numberToRing });\n        } \n\n        this.setState({ \n            modalClicked: !modalClicked,\n            showingOverlay: !this.state.showingOverlay,\n        });\n    };\n\n    setHoursInClock = (state, value) => this.setState({ [state]: value });\n\n    bellStarting = () => this.setState({ bellStarting: true });\n\n    onBodyKeydown = ({ key }) => this.setState({ keyPressed: key});\n\n    handleModalSelect = (ev, optionSelectedObj) => {\n\n        const value = (optionSelectedObj) ? optionSelectedObj.value : '';\n\n        this.setState({ \n            modalSelectValue: value,\n        });\n    }\n\n    handleVisibilityChange = (ev) => {\n\n        const { timeStamp } = ev || {};\n        const { start: inactivityStart } = this.state.timeOfTabInactivity;\n\n        if (document.visibilityState === 'hidden') {\n\n            if (inactivityStart !== null) return;\n\n            this.setState({\n                timeOfTabInactivity: {\n                    start: timeStamp,\n                    inactivityInSeconds: null,\n                    isWindowTabActive: false,\n                },\n            });\n\n        } else {\n\n            const timeOfInactivityInMs = timeStamp - inactivityStart;\n\n            const timeOfInactivityInSeconds = getClosestSecond(timeOfInactivityInMs / 1000)\n    \n            this.setState({\n                timeOfTabInactivity: {\n                    start: null,\n                    inactivityInSeconds: timeOfInactivityInSeconds,\n                    isWindowTabActive: true,\n                },\n            });\n        }\n    }\n    \n    componentDidMount() {\n        document.addEventListener('keydown', this.onBodyKeydown);\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\n        document.addEventListener('resume', this.handleVisibilityChange);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onBodyKeydown);\n        document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n        document.removeEventListener('resume', this.handleVisibilityChange);\n    }\n \n    componentDidUpdate(prevProps, prevState) {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if (this.state.keyPressed) this.setState({ keyPressed: null });\n\n        if (this.state.bellStarting) this.setState({ bellStarting: false });\n\n        if (prevState.modalClicked && !modalClicked) this.setState({ numberToRing: +modalSelectValue });\n    }\n\n    render () {\n        const { \n            activeTab, \n            keyPressed, \n            bellStarting, \n            numberToRing, \n            isTimerShowingHours,\n            isStopwatchShowingHours,\n            showingOverlay,\n            modalClicked,\n            modalSelectValue,\n            timeOfTabInactivity,\n        } = this.state;\n\n        const showTimer = (!activeTab);\n\n        const hoursInClock = (( showTimer && isTimerShowingHours) || (!showTimer && isStopwatchShowingHours));\n        \n        const hoursBeingDisplayed = (isTimer) => {\n            return {\n                setHoursInClock: (state, value) => this.setHoursInClock(state, value),\n                stateName: (isTimer) ? 'isTimerShowingHours' : 'isStopwatchShowingHours',\n                value: (isTimer) ? isTimerShowingHours : isStopwatchShowingHours,\n            }\n        }\n\n        const buttonsClassnames = {\n            container: (hoursInClock) ? styles.hoursInClock : '',\n        };\n\n        return (\n            <ThemeContextConsumer>\n                {({ theme }) => (\n                    <SizeContextConsumer>\n                        {({ size }) => (\n                            <div className={`${styles[`${theme}MainContainer`]} ${(size === 'big') ? styles.bigContainer : ''}`}>\n                                <div onClick={this.handleModal} className={`${styles.modalOverlay} ${(showingOverlay) ? styles.showOverlay : ''}`}></div>\n                                <AudiosModal \n                                    stopKeyEventPropagation={true}\n                                    bellStarting={bellStarting}\n                                    closeModal={this.handleModal} \n                                    modalState={modalClicked}\n                                    ringBellEvery={modalSelectValue}\n                                    handleMinutesSelect={this.handleModalSelect}\n                                    showTimer={showTimer}\n                                />\n                                <NavBar/>\n                                <div className={styles.appContainer}>\n                                    <SizeToggler />\n                                    <main className={styles.appSubContainer}>\n                                            <TabButtons\n                                                activeTab={activeTab}\n                                                handleClick={this.handleClockBtns}\n                                                amountOfButtons={2}\n                                                buttonsText={['Timer', 'Stopwatch']}\n                                                classNames={buttonsClassnames}\n                                            />\n                                            <section>\n                                                <div className={styles.clock}>\n                                                    <div className={(showTimer) ? '' : styles.hide}>\n                                                        <Timer \n                                                            keyPressed={(showTimer) ? keyPressed : null} \n                                                            bellStarting={this.bellStarting} \n                                                            hours={0}\n                                                            minutes={10} \n                                                            seconds={0}\n                                                            hoursDisplayedInClock={hoursBeingDisplayed(true)}\n                                                            timeInactivity={timeOfTabInactivity}\n                                                            ariaIdForContainer={'Clock-1'}\n                                                        />\n                                                    </div>\n                                                    <div className={(showTimer) ? styles.hide : ''}>\n                                                        <Stopwatch \n                                                            keyPressed={(showTimer) ? null : keyPressed}\n                                                            bellStarting={this.bellStarting}\n                                                            hours={0} \n                                                            minutes={0} \n                                                            seconds={0}\n                                                            ringEvery={numberToRing}\n                                                            hoursDisplayedInClock={hoursBeingDisplayed(false)}\n                                                            timeInactivity={timeOfTabInactivity}\n                                                            ariaIdForContainer={'Clock-2'}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </section>\n                                            <BelowClockContainer \n                                                showTimer={showTimer} \n                                                numberToRing={numberToRing} \n                                                handleModal={this.handleModal}\n                                                modalClicked={modalClicked}\n                                            />\n                                    </main>\n                                </div>\n                                <Footer/>\n                            </div>\n                        )}\n                    </SizeContextConsumer>\n                )}\n            </ThemeContextConsumer>\n        );\n    }\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport 'focus-visible';\nimport { ThemeContextProvider, SizeContextProvider } from './Context/ToggleContexts.js';\n\nReactDOM.render(\n    <ThemeContextProvider>\n      <SizeContextProvider>\n        <App />\n      </SizeContextProvider>\n    </ThemeContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}