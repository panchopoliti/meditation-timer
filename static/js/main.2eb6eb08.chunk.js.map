{"version":3,"sources":["static/Audio/long-bell.mp3","static/Audio/bowl-struck.mp3","static/Audio/bell4.mp3","static/Audio/buddhist-prayer-bell.mp3","static/Audio/gong-burmese.wav","static/Audio/gong-chinese.wav","static/Audio/tingsha.wav","static/Audio/zen-bell.mp3","static/Audio/deep-bell.mp3","static/Audio/ocean-waves.mp3","static/Audio/rainforest-waterways.mp3","static/Audio/soothing-winds.mp3","static/Audio/tibetan-bell.mp3","static/Logos/cog-solid.svg","Components/Clock/ClockLabels.js","generalFunctions.js","Components/Clock/clock-functions.js","Components/Clock/NumbersOfClock.js","Components/Clock/ClockButtons.js","Components/Clock/Clock.js","Components/Clock/Timer.js","Components/Modals/Modal.js","Components/Bells/index.js","Components/Modals/AudiosModal.js","Components/App/TabButtons.js","Components/App/BelowClockContainer.js","Components/App/ChangeSizeButton.js","App.js","index.js"],"names":["module","exports","ClockLabels","hoursDisplayed","className","noop","getClockMethod","clockStarted","clockPaused","clockMethods","isTimerInZero","startClock","pauseClock","checkIfTimerIsInZero","isCountDown","seconds","minutes","hours","getClosestSecond","ms","toFixed","makeTimeNumberOperations","firstNumInSeconds","secondNumInSeconds","result","operation","getTimeOutOfSeconds","numOfAnyDigitsInSeconds","num","time","Number","parseInt","secondsWithDecimals","solveExcessInTimeUnitsOfTwoDigits","numOfSeconds","numOfMinutes","numOfHours","convertHours","addLeadingZero","stringNum","toString","TIME_UNITS","NumbersOfClock","props","removeClassOfSpanExceptTargeted","spanRefsArr","target","targetSpan","find","element","setState","activeSpan","setPositionOfCursorInInput","positionInClockRightToLeft","selectBorderForSpan","spanToBorder","focusOnInput","spanRefs","spanRefsSettings","map","spanSettings","cloneObj","Object","assign","ref","defaultSelectedSpan","spanElements","e","elem","classList","contains","undefined","isSpanAvailableToBorder","includes","state","unit","prevProps","this","inputValueLength","handleClockEvents","numbersByUnit","clockSpans","obj","i","value","inputLength","key","hoursToDisplay","slice","minutesToDisplay","secondsToDisplay","onClick","onMouseDown","Component","defaultProps","ClockButtons","firstButton","secondButton","text","Clock","tick","stopClock","bellStarting","nextSecond","nextMinute","nextHour","setNextSecondAndNextMinute","isTimeToRing","isInteger","ringEvery","clockId","setInterval","clearInterval","setNewTimer","newMinutes","newSeconds","newHours","keyPressingOnClock","document","activeElement","startAndPauseButton","arrayOfMethods","clockStatus","clockByUnits","focusOnInputSettings","isFocused","handleFocus","push","keyMethod","getMethodsForEnterPressing","handleOnInputFocus","forEach","fn","setClockInactivity","timeWhenInactivityStarted","isInactive","handleClockInactivity","inactivityInSeconds","timeInactivity","stateSeconds","addSecondsOfInactivityToClock","initialSeconds","initialMinutes","initialHours","isClockInactive","keyPressed","areHoursDisplayedInClock","areConditionsForSettingANewTimer","hoursDisplayedInClock","setHoursInClock","stateName","isWindowTabActive","firstButtonProps","onClickMethods","btnInfo","getSettingsForButton","firstButtonRef","el","id","ariaIdForContainer","aria-labelledby","role","numberClicked","children","React","Timer","onInputChange","ev","length","numberToTest","isNaN","isNaturalNumber","timeToSet","inputValue","inputSeconds","inputMinutes","inputHours","changeTimerNumbers","inputClockRef","current","blur","position","setSelectionRange","handleOnBlur","clickedInClockContainer","handleOnFocus","focus","handleOnMouseDown","handleOnClick","nodeName","event","eventsHandlers","type","createRef","tabIndex","onBlur","onFocus","inputMode","onChange","Modal","closeModalOnKeyPress","stopKeyEventPropagation","nativeEvent","stopImmediatePropagation","closeModal","closeSuccessModal","divToFocus","setDivFocus","focusDiv","modalState","title","modalValidation","aria-describedby","onKeyDown","audiosInfoArray","name","src","longBell","bowlStruck","japaneseGong","buddhistPrayerBell","burmeseGong","chineseGong","tingshaBell","zenBell","deepBell","oceanWaves","rainforestWaterways","soothingWinds","tibetanBell","notIncludedNumber","AudiosModal","handleSelectAudiosChange","selectAudiosValue","handleInputChange","autoCompleteInputValue","startAudioBellFromBeginning","bellRef","currentTime","play","initialSelectValue","ringBellEvery","audios","sort","objA","objB","nameA","nameB","MenuItem","selectedAudioSrc","minutesOptionsArr","maxMinutes","notIncludedNumbersCb","minutesAndHoursArray","getLabel","minute","hour","units","getNumWithUnit","setUnit","hourWithUnit","minuteWithUnit","label","getNumberWithTimeUnitLabel","FormControl","InputLabel","Select","labelId","controls","showTimer","options","getOptionSelected","option","getOptionLabel","handleMinutesSelect","handleHomeEndKeys","filterSelectedOptions","fullWidth","renderInput","params","TextField","variant","TabButtons","classNames","handleClick","buttonsText","amountOfButtons","activeTab","buttons","buttonText","aria-selected","aria-controls","button","aria-label","container","BelowClockContainer","numberToRing","handleModal","SettingsSVG","alt","height","width","ChangeSizeButton","App","handleClockBtns","succeed","modalClicked","modalSelectValue","showingOverlay","setAppInBigSize","showAppInBig","onBodyKeydown","handleModalSelect","optionSelectedObj","handleVisibilityChange","timeStamp","inactivityStart","timeOfTabInactivity","start","visibilityState","timeOfInactivityInSeconds","mainContainerRef","keyPressedEvent","isTimerShowingHours","isStopwatchShowingHours","addEventListener","removeEventListener","prevState","hoursBeingDisplayed","isTimer","buttonsClassnames","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2eb6eb08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/long-bell.7cd5fe25.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bowl-struck.2e1feb19.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bell4.68b60366.mp3\";","module.exports = __webpack_public_path__ + \"static/media/buddhist-prayer-bell.fa1328fc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gong-burmese.368c1978.wav\";","module.exports = __webpack_public_path__ + \"static/media/gong-chinese.b8a8b3be.wav\";","module.exports = __webpack_public_path__ + \"static/media/tingsha.760cc3b2.wav\";","module.exports = __webpack_public_path__ + \"static/media/zen-bell.85f7bec3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/deep-bell.d7c7a634.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ocean-waves.cf5e5b17.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rainforest-waterways.248de7eb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/soothing-winds.817175e6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tibetan-bell.48e1cfbe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cog-solid.9f07a3df.svg\";","import React from 'react';\nimport PropTyes from 'prop-types';\n\nfunction ClockLabels({ hoursDisplayed }) {\n    return (\n      <div className='titlesContainer'>\n        <div className={`titleSpan ${(hoursDisplayed) ? '' : 'hide'}`}>HOURS</div>\n        <div className='titleSpan'>MINUTES</div>\n        <div className='titleSpan'>SECONDS</div>\n      </div>\n    );\n  }\n\n  ClockLabels.propTypes = {\n      hoursDisplayed: PropTyes.bool,\n  };\n\n  export default ClockLabels;","export const noop = () => {};\n\nexport function getNumberWithTimeUnitLabel(maxMinutes, notIncludedNumbersCb) {\n    \n    const minutesAndHoursArray = [];\n\n    const getLabel = (minute, hour) => {\n\n        const units = {\n            minute: 'minute',\n            hour: 'hour',\n        };\n        const setUnit = (num, unit) => (num === 1) ? unit : `${unit}s`;\n        const getNumWithUnit = (num, unit) => `${num} ${setUnit(num, unit)}`;\n\n        const hourWithUnit = getNumWithUnit(hour, units.hour);;\n        const minuteWithUnit = getNumWithUnit(minute, units.minute);\n\n        if (!hour) return minuteWithUnit;\n\n        if (!minute) return hourWithUnit;\n\n        return `${hourWithUnit} ${minuteWithUnit}`;\n    }\n\n    for ( let num = 1; num <= maxMinutes; num++) {\n\n        const numberNotIncluded = notIncludedNumbersCb(num);\n\n        if (numberNotIncluded) continue;\n\n        const hourNum = parseInt(num/60);\n        const minuteNum = num % 60;\n\n        const label = getLabel(minuteNum, hourNum);\n\n        minutesAndHoursArray.push({\n            label: label,\n            value: num,\n        });\n    }\n\n    return minutesAndHoursArray;\n};\n\nexport function isNaturalNumber (num) {\n\n    if (num[num.length -1] === '.') return false;\n\n    const numberToTest = Number(num);\n\n    if (Number.isNaN(numberToTest)) return false;\n\n    if (!Number.isInteger(numberToTest)) return false;\n\n    return true;\n};","import { noop } from '../../generalFunctions.js'\n\nexport const getClockMethod = (clockStarted, clockPaused, clockMethods, isTimerInZero = false) => {\n\n    const { startClock, pauseClock } = clockMethods;\n\n    if (isTimerInZero) return noop;\n\n    if (clockStarted && !clockPaused) return pauseClock;\n\n    return startClock;\n};\n\nexport const checkIfTimerIsInZero = (isCountDown, seconds, minutes, hours) => (isCountDown && seconds === 0 && minutes === 0 && hours === 0);\n\nexport const getSettingsForButton = (clockStarted, clockPaused, onClickMethods, isTimerInZero) => {\n\n    const clockMethod = getClockMethod(clockStarted, clockPaused, onClickMethods, isTimerInZero);\n\n    const btnInfo = {\n        onClick: clockMethod,\n    };\n\n    if (!clockStarted) {\n\n        btnInfo.text = 'Start';\n        btnInfo.className = `${(isTimerInZero) ? 'notAllow' : 'startButton'}`;\n\n\n    } else if (!clockPaused) {\n\n        btnInfo.text = 'Pause';\n        btnInfo.className = 'warningButton animateToLeft';\n\n    } else {\n\n        btnInfo.text = 'Continue';\n        btnInfo.className = 'successButton animateToLeft';\n    }\n\n    return btnInfo;\n  \n};\n\nexport const setNextSecondAndNextMinute = (isCountDown, seconds, minutes, hours) => {\n\n    let nextSecond = seconds;\n    let nextMinute = minutes;\n    let nextHour = hours;\n\n    if (isCountDown) {\n\n      if (nextSecond === 0) {\n\n        nextSecond = 59;\n\n        if (nextMinute === 0) {\n\n          nextMinute = 59;\n          nextHour--;\n\n        } else {\n\n          nextMinute--;\n\n        }\n      } else {\n\n        nextSecond--;\n\n      }\n\n    } else {\n\n      if (nextSecond === 59) {\n\n        nextSecond = 0;\n\n        if (nextMinute === 59) {\n\n          nextMinute = 0;\n          nextHour++;\n\n        } else {\n\n        nextMinute++;\n\n        }\n      } else {\n\n        nextSecond++;\n\n      }\n    }\n\n    return {\n        nextSecond,\n        nextMinute,\n        nextHour,\n    }\n};\n\nexport const getClosestSecond = (ms) => +ms.toFixed();\n\nexport const getMethodsForEnterPressing = ({\n  clockStatus,\n  clockByUnits, \n  clockMethods,\n  setNewTimer, \n  focusOnInputSettings, \n  isCountDown\n}) => {\n\n  const { clockStarted, clockPaused } = clockStatus;\n  const { seconds, minutes, hours } = clockByUnits;\n  const { isFocused, handleFocus } = focusOnInputSettings\n\n  let arrayOfMethods = [];\n\n  if (!clockStarted && !clockPaused) {\n    arrayOfMethods.push(() => setNewTimer(seconds, minutes, hours));\n  }\n\n  if (isCountDown && isFocused) arrayOfMethods.push(() => handleFocus(false));\n\n  const isTimerInZero = checkIfTimerIsInZero(isCountDown, seconds, minutes, hours);\n\n  const keyMethod = getClockMethod(clockStarted, clockPaused, clockMethods, isTimerInZero);\n  arrayOfMethods.push(keyMethod);\n\n  return arrayOfMethods;\n};\n\nexport function makeTimeNumberOperations(firstNumInSeconds, secondNumInSeconds, operation = 'sum') {\n\n  let result;\n\n  switch(operation) {\n    case 'sum':\n      result = firstNumInSeconds + secondNumInSeconds; \n      return getTimeOutOfSeconds(result);\n    case 'rest':\n      result = firstNumInSeconds - secondNumInSeconds;\n      return (result >= 0) ? getTimeOutOfSeconds(result) : getTimeOutOfSeconds(0);\n    default: \n      result = firstNumInSeconds + secondNumInSeconds;\n      return getTimeOutOfSeconds(result)\n  }\n}\n\nexport function getSecondsOutOfTime({ seconds, minutes, hours }) {\n  return seconds + minutes * 60 + hours * 3600;\n}\n\nexport function getTimeOutOfSeconds(numOfAnyDigitsInSeconds) {\n\n  let num = numOfAnyDigitsInSeconds;\n  const time = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n  }\n\n  if (num < 60) {\n\n    time.seconds = getClosestSecond(num);\n\n    return time;\n  }\n\n  num = num / 60;\n  if (num < 60) {\n\n    time.minutes = Number.parseInt(num);\n    const secondsWithDecimals = numOfAnyDigitsInSeconds - time.minutes * 60;\n\n    time.seconds = getClosestSecond(secondsWithDecimals);\n\n    return time;\n  \n  }\n\n  num = num / 60;\n  if (num <= 99) {\n\n    time.hours = Number.parseInt(num);\n    time.minutes = Number.parseInt(numOfAnyDigitsInSeconds / 60 - time.hours * 60);\n\n    const secondsWithDecimals = numOfAnyDigitsInSeconds - time.minutes * 60 - time.hours * 3600;\n\n    time.seconds = getClosestSecond(secondsWithDecimals);\n\n    return time;\n\n  }\n\n  time.seconds = 59;\n  time.minutes = 59;\n  time.hours = 99;\n\n}\n\n// It recieves only Natural Numbers\nexport function solveExcessInTimeUnitsOfTwoDigits(numOfSeconds = 0, numOfMinutes = 0, numOfHours = 0, convertHours = true) {\n\n  let seconds = numOfSeconds,\n      minutes = numOfMinutes,\n      hours = numOfHours;\n\n  if (seconds <= 60 && minutes <= 60 && hours <= 99) return { seconds, minutes, hours };\n\n  if (seconds > 60) {\n      seconds -= 60;\n      minutes += 1;\n  }\n\n  if (convertHours && minutes > 60) {\n      minutes -= 60;\n      hours += 1;\n  }\n\n  if (hours > 99) {\n\n      hours = 99;\n      minutes = 59;\n      seconds = 59;\n      \n  }\n\n  return {\n      seconds,\n      minutes,\n      hours,\n  };\n};\n\nexport const addLeadingZero = num => {\n  const stringNum = num.toString();\n\n  return (num < 10) ? ['0', stringNum] : [stringNum[0], stringNum[1]];\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\nimport { addLeadingZero } from './clock-functions.js';\nimport { noop } from '../../generalFunctions.js';\n\nconst TIME_UNITS = {\n    seconds: 'seconds',\n    minutes: 'minutes',\n    hours: 'hours',\n}\n\nclass NumbersOfClock extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            activeSpan: null,\n        };\n\n        this.spanRefsSettings = [\n            {\n                positionInClockRightToLeft: 6,\n                ref: 'secondDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 5,\n                ref: 'firstDigitHours',\n                unit: TIME_UNITS.hours,\n            },\n            {\n                positionInClockRightToLeft: 4,\n                ref: 'secondDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 3,\n                ref: 'firstDigitMinutes',\n                unit: TIME_UNITS.minutes,\n            },\n            {\n                positionInClockRightToLeft: 2,\n                ref: 'secondDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n            {\n                positionInClockRightToLeft: 1,\n                ref: 'firstDigitSeconds',\n                unit: TIME_UNITS.seconds,\n            },\n        ]\n    }\n\n    removeClassOfSpanExceptTargeted = (spanRefsArr, target) => {\n\n        let targetSpan = spanRefsArr.find(({ element }) => element === target);\n\n        if ( !targetSpan ) return this.setState({ activeSpan: null })\n\n        this.setState({ activeSpan: targetSpan.element});\n        this.props.setPositionOfCursorInInput(targetSpan.positionInClockRightToLeft - 1);\n\n        return;\n\n    };\n\n    selectBorderForSpan = () => {\n\n        const { spanToBorder, focusOnInput } = this.props;\n\n        const spanRefs = this.spanRefsSettings.map((spanSettings) => {\n            const cloneObj = Object.assign({}, spanSettings);\n            const { positionInClockRightToLeft, ref} = cloneObj;\n\n            cloneObj.element = this[ref];\n            cloneObj.defaultSelectedSpan = (positionInClockRightToLeft === 1)\n            \n            return cloneObj;\n        });\n\n        if (!focusOnInput) {\n            this.removeClassOfSpanExceptTargeted(spanRefs, null);\n\n            return;\n        }\n\n        const spanElements = spanRefs.map(e => e.element)\n        const activeSpan = spanElements.find( elem => (elem.classList.contains('activeSpan')) ? elem : undefined);\n        const isSpanAvailableToBorder = (spanToBorder) ? spanToBorder.classList.contains('defaultSpanColor') : false;\n\n        if ( (activeSpan && !isSpanAvailableToBorder) ||\n        (activeSpan && !spanToBorder) ||\n        (spanToBorder && !spanElements.includes(spanToBorder))) return;\n\n        if ( (!activeSpan && !spanToBorder) || (!activeSpan && !isSpanAvailableToBorder) ) {\n\n            const { element: targetSpan } = spanRefs.find(({ defaultSelectedSpan }) => (defaultSelectedSpan === true));\n\n            this.removeClassOfSpanExceptTargeted(spanRefs, targetSpan);\n\n            return;\n        }\n\n        this.removeClassOfSpanExceptTargeted(spanRefs, spanToBorder);\n    };\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.spanToBorder !== this.props.spanToBorder ||\n            prevProps.focusOnInput !== this.props.focusOnInput) {\n            \n            this.selectBorderForSpan();\n        }\n    }\n\n    render () {\n        \n        const { hours, focusOnInput, inputValueLength, handleClockEvents, isCountDown } = this.props;\n        const { activeSpan } = this.state;\n\n        const numbersByUnit = {\n            [TIME_UNITS.seconds]: addLeadingZero(this.props.seconds),\n            [TIME_UNITS.minutes]: addLeadingZero(this.props.minutes),\n            [TIME_UNITS.hours]: addLeadingZero(this.props.hours),\n        };\n\n        const spanRefsSettings = this.spanRefsSettings.map((obj, i) => {\n            const cloneObj = Object.assign({}, obj);\n\n            const unitArray = numbersByUnit[obj.unit];\n            const value = unitArray[i % 2];\n\n            cloneObj.value = value\n\n            return cloneObj;\n        });\n\n        const clockSpans = spanRefsSettings.map(({ \n            positionInClockRightToLeft: inputLength,\n            ref,\n            value,\n        }) => {\n        return <span\n            key={ref}\n            ref={e => this[ref] = e}\n            className={\n                `${(activeSpan === this[ref]) ? 'activeSpan' : ''} ${(focusOnInput && inputValueLength < inputLength) ?\n                'withoutInputValue' : (isCountDown) ? 'defaultSpanColor' : ''}`\n            } \n        >\n            {value}\n        </span>\n    });\n\n        const hoursToDisplay = clockSpans.slice(0,2)\n        const minutesToDisplay = clockSpans.slice(2, 4);\n        const secondsToDisplay = clockSpans.slice(4, 6);\n\n        return (\n            <div \n                className={`numbersContainer ${(!focusOnInput && isCountDown) ? 'clockDefined' : ''}`}\n                onClick={handleClockEvents}\n                onMouseDown={handleClockEvents}\n            >   \n                <div className={`hoursContainer ${(hours === 0 && !focusOnInput) ? 'hide' : ''}`}>\n                    <div className='numbers'>{hoursToDisplay}</div>\n                    <div className='numbers'>:</div>\n                </div>\n                <div className='numbers'>{minutesToDisplay}</div>\n                <div className='numbers'>:</div>\n                <div className='numbers'>{secondsToDisplay}</div>\n            </div>\n        );\n    }\n}\n\nNumbersOfClock.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    isCountDown: PropTypes.bool,\n    spanToBorder: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    setPositionOfCursorInInput: PropTypes.func,\n};\n\nNumbersOfClock.defaultProps = {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    focusOnInput: false,\n    inputValueLength: 0,\n    handleClockEvents: noop,\n};\n\n\nexport default NumbersOfClock;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ClockButtons({firstButton, secondButton}){\n    return (\n        <div className='clockButtonsContainer'>\n            <button \n                className={`clockButtons ${firstButton.className}`} \n                onClick={firstButton.onClick}\n                ref={firstButton.ref}\n            >\n                {firstButton.text}\n            </button>\n            <button \n                className={`clockButtons ${secondButton.className}`} \n                onClick={secondButton.onClick}\n                ref={secondButton.ref}\n            >\n                {secondButton.text}\n            </button>\n        </div>\n    );\n}\n\nClockButtons.propTypes = {\n    firstButton: PropTypes.shape({\n        onClick: PropTypes.func,\n        text: PropTypes.string,\n        className: PropTypes.string,\n        ref: PropTypes.func,\n    }),\n    secondButton: PropTypes.shape({\n        onClick: PropTypes.func,\n        text: PropTypes.string,\n        className: PropTypes.string,\n        ref: PropTypes.func,\n    })\n};\n\nexport default ClockButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\nimport { NumbersOfClock, ClockLabels, ClockButtons } from './index.js';\nimport { noop } from '../../generalFunctions.js';\nimport { \n  solveExcessInTimeUnitsOfTwoDigits,\n  checkIfTimerIsInZero,\n  getSettingsForButton, \n  setNextSecondAndNextMinute,\n  getMethodsForEnterPressing,\n  makeTimeNumberOperations,\n  getSecondsOutOfTime,\n} from './clock-functions.js';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props) \n\n    const { seconds: initialSeconds, minutes: initialMinutes, hours: initialHours } = this.props;\n\n    this.state = {\n      clockStarted: false,\n      clockPaused: false,\n      seconds: initialSeconds,\n      minutes: initialMinutes,\n      hours: initialHours,\n      timeWhenInactivityStarted : {\n        seconds: null,\n        minutes: null,\n        hours: null,\n        isInactive: false,\n      },\n    }\n\n    this.clockMethods = {\n      startClock: this.startClock, \n      pauseClock: this.pauseClock,\n      stopClock: this.stopClock,\n    };\n\n  }\n  \n  tick = () => {\n    const { seconds, minutes, hours } = this.state;\n\n    if (this.props.isCountDown && seconds === 0 && minutes === 0 && hours === 0) {\n        \n      this.stopClock();\n      this.props.bellStarting();\n      return;\n\n    }\n\n    if (!this.props.isCountDown && seconds === 59 && minutes === 59 && hours === 99) {\n\n      this.stopClock();\n      return;\n\n    }\n\n    const { nextSecond, nextMinute, nextHour } = setNextSecondAndNextMinute(this.props.isCountDown, seconds, minutes, hours)\n\n    const isTimeToRing = (Number.isInteger(nextMinute / this.props.ringEvery) && nextSecond === 0);\n\n    if (!this.props.isCountDown && isTimeToRing) this.props.bellStarting();\n    \n    this.setState({\n      seconds: nextSecond,\n      minutes: nextMinute,\n      hours: nextHour,\n    })\n  };\n\n  startClock = () => {\n    this.clockId = setInterval(this.tick, 1000);\n\n    this.setState({ \n      clockStarted: true,\n      clockPaused: false,\n     });\n  };\n\n  pauseClock = () => {\n    clearInterval(this.clockId);\n\n    this.setState({ clockPaused: true });\n  };\n\n\n  stopClock = () => {\n    const { seconds, minutes, hours } = this.props;\n\n    clearInterval(this.clockId);\n\n    this.setState({ \n      clockStarted: false,\n      clockPaused: false,\n      seconds: seconds,\n      minutes: minutes,\n      hours: hours,\n     });\n  };\n\n  setNewTimer = (seconds, minutes, hours) => {\n\n    const { \n      minutes: newMinutes,\n      seconds: newSeconds,\n      hours: newHours,\n    } = solveExcessInTimeUnitsOfTwoDigits(seconds, minutes, hours);\n\n    this.setState({\n      seconds: newSeconds,\n      minutes: newMinutes,\n      hours: newHours,\n    });\n  }\n\n  keyPressingOnClock = (key) => {\n\n    const { clockStarted, clockPaused } = this.state;\n    const { isCountDown, focusOnInput, hours, minutes, seconds } = this.props;\n\n    if (document.activeElement === this.startAndPauseButton) return;\n\n    const arrayOfMethods = getMethodsForEnterPressing({\n      clockStatus: { clockStarted, clockPaused },\n      clockByUnits: { seconds, minutes, hours },\n      clockMethods: this.clockMethods,\n      focusOnInputSettings: {\n        isFocused: focusOnInput,\n        handleFocus: () => this.props.handleOnInputFocus(false),\n      },\n      setNewTimer: this.setNewTimer,\n      isCountDown,\n    });\n\n    switch (key) {\n      case 'Enter':\n        arrayOfMethods.forEach(fn => fn());\n        break;\n\n      default:\n        noop();\n    };\n  };\n\n  setClockInactivity = () => {\n\n    this.setState({\n      timeWhenInactivityStarted: {\n        seconds: this.state.seconds,\n        minutes: this.state.minutes,\n        hours: this.state.hours,\n        isInactive: true,\n      },\n    });\n  }\n\n  handleClockInactivity = () => {\n    const { seconds, minutes, hours } = this.state.timeWhenInactivityStarted;\n    const { inactivityInSeconds } = this.props.timeInactivity;\n\n    const stateSeconds = getSecondsOutOfTime({ seconds, minutes, hours })\n\n    const addSecondsOfInactivityToClock = ({ seconds, minutes, hours } = {}) => this.setNewTimer(seconds, minutes, hours);\n\n    if (this.props.isCountDown) {\n\n      const newTimer = makeTimeNumberOperations(stateSeconds, inactivityInSeconds, 'rest');\n      addSecondsOfInactivityToClock(newTimer);\n\n    } else {\n\n      const newTimer = makeTimeNumberOperations(stateSeconds, inactivityInSeconds, 'sum');\n      addSecondsOfInactivityToClock(newTimer);\n\n    }\n\n    this.setState({\n      timeWhenInactivityStarted: {\n        seconds: null,\n        minutes: null,\n        hours: null,\n        isInactive: false,\n      },\n    })\n  }\n\n  componentDidUpdate(prevProps){\n\n    const { \n      clockStarted,\n      clockPaused, \n      timeWhenInactivityStarted : { isInactive: isClockInactive }, \n    } = this.state;\n    const { focusOnInput, inputValueLength, keyPressed } = this.props;\n\n    const areHoursDisplayedInClock = (this.state.hours !== 0 || this.props.focusOnInput);\n\n    const areConditionsForSettingANewTimer = (!this.props.inputValueLength && !clockStarted && !clockPaused &&\n      (this.state.hours !== prevProps.hours ||\n      this.state.minutes !== prevProps.minutes ||\n      this.state.seconds !== prevProps.seconds));\n\n    if (prevProps.keyPressed !== keyPressed) this.keyPressingOnClock(this.props.keyPressed);\n\n    if (inputValueLength && clockPaused) this.stopClock();\n\n    if (focusOnInput && !prevProps.focusOnInput && clockStarted) this.pauseClock();\n\n    if (areConditionsForSettingANewTimer) {\n      this.setNewTimer(prevProps.seconds, prevProps.minutes, prevProps.hours);\n    }\n\n    if (areHoursDisplayedInClock !== this.props.hoursDisplayedInClock.value) {\n      \n      const { setHoursInClock, stateName } = this.props.hoursDisplayedInClock;\n\n      setHoursInClock(stateName, areHoursDisplayedInClock);\n    }\n\n    const { isWindowTabActive } = this.props.timeInactivity;\n\n    if (prevProps.timeInactivity.isWindowTabActive && !isWindowTabActive && clockStarted && !clockPaused) this.setClockInactivity()\n\n    if (!prevProps.timeInactivity.isWindowTabActive && isWindowTabActive && isClockInactive) this.handleClockInactivity();\n\n  }\n  \n  render () {\n\n    const { \n      clockStarted, \n      clockPaused,\n    } = this.state;\n\n    const seconds = (this.props.inputValueLength) ? this.props.seconds : this.state.seconds;\n    const minutes = (this.props.inputValueLength) ? this.props.minutes : this.state.minutes;\n    const hours = (this.props.inputValueLength) ? this.props.hours : this.state.hours;\n\n    const isTimerInZero = checkIfTimerIsInZero(this.props.isCountDown, seconds, minutes, hours)\n\n    let firstButtonProps = getSettingsForButton(clockStarted, clockPaused, this.clockMethods, isTimerInZero);\n    const firstButtonRef = { ref: el => this.startAndPauseButton = el};\n    firstButtonProps = Object.assign(firstButtonProps, firstButtonRef);\n    \n    return (\n      <div id={this.props.ariaIdForContainer} aria-labelledby={this.props.ariaIdForContainer} role='tabpanel'>\n        <div role='timer' className='clockContainer'>\n          <NumbersOfClock \n            seconds={seconds}\n            minutes={minutes}\n            hours={hours}\n            isCountDown={this.props.isCountDown}\n            spanToBorder={this.props.numberClicked}\n            focusOnInput={this.props.focusOnInput}\n            inputValueLength={this.props.inputValueLength}\n            handleClockEvents={this.props.handleClockEvents}\n            setPositionOfCursorInInput={this.props.setPositionOfCursorInInput}\n          />\n          {this.props.children}\n          <ClockLabels hoursDisplayed={this.props.hoursDisplayedInClock.value}/>\n        </div>\n        <ClockButtons\n          firstButton={firstButtonProps}\n          secondButton={{\n            onClick: this.stopClock,\n            text: 'Reset',\n            className: `dangerButton ${(clockStarted) ? 'animateToRight' : 'hideBtn'}`\n          }}\n        />\n      </div>\n    );  \n  }\n}\n \nClock.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    minutes: PropTypes.number.isRequired,\n    hours: PropTypes.number.isRequired,\n    isCountDown: PropTypes.bool.isRequired,\n    children: PropTypes.element,\n    handleOnInputFocus: PropTypes.func,\n    numberClicked: PropTypes.object, //Span Element\n    focusOnInput: PropTypes.bool,\n    inputValueLength: PropTypes.number,\n    handleClockEvents: PropTypes.func,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    ringEvery: PropTypes.number,\n    setPositionOfCursorInInput: PropTypes.func,\n    hoursDisplayedInClock: PropTypes.object,\n    timeInactivity: PropTypes.shape({\n      start: PropTypes.number,\n      inactivityInSeconds: PropTypes.number,\n      isWindowTabActive: PropTypes.bool,\n  }),\n    ariaIdForContainer: PropTypes.string,\n};\n\nClock.defaultProps = {\n    seconds: 0,\n    minutes: 5,\n    hours: 0,\n    isCountDown: false,\n    focusOnInput: false,\n};\n\nexport default Clock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Clock from './Clock.js'\nimport './clock.scss';\nimport { isNaturalNumber } from '../../generalFunctions.js';\nimport { solveExcessInTimeUnitsOfTwoDigits } from './clock-functions.js';\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.inputClockRef = React.createRef();\n\n        const { \n            seconds: initialSeconds,\n            minutes: initialMinutes,\n            hours: initialHours, \n            } = this.props;\n\n        this.state = {\n            inputValue: '',\n            focusOnInput: false,\n            inputSeconds: initialSeconds,\n            inputMinutes: initialMinutes,\n            inputHours: initialHours,\n            clickedInClockContainer: false,\n            numberClicked: null,\n        };\n    }\n\n    onInputChange = (ev) => {\n\n        const isValidNumber = isNaturalNumber(ev.target.value);\n        if (!isValidNumber) return;\n        \n        const value = ev.target.value.toString();\n\n        if (value) {\n\n            const timeToSet = {\n                seconds: (value[value.length - 2] || 0) + (value[value.length - 1] || 0),\n                minutes: (value[value.length - 4] || 0) + (value[value.length - 3] || 0),\n                hours: (value[value.length -6] || 0) + (value[value.length -5] || 0),\n            };\n\n            const inputValue = (value.length >= 7) ? value.slice(value.length - 6, value.length) : value;\n        \n            this.setState({ \n                inputValue: inputValue,\n                inputSeconds: +timeToSet.seconds,\n                inputMinutes: +timeToSet.minutes,\n                inputHours: +timeToSet.hours,\n            });\n        } else {\n            this.setState({\n                inputValue: '',\n                inputSeconds: 0,\n                inputMinutes: 0,\n                inputHours: 0,\n            })\n        }\n    };\n\n    changeTimerNumbers = () => {\n        const { inputSeconds, inputMinutes, inputHours} = this.state;\n        const { seconds, minutes, hours} = solveExcessInTimeUnitsOfTwoDigits(inputSeconds, inputMinutes, inputHours);\n\n        this.setState({ \n            inputSeconds: seconds,\n            inputMinutes: minutes,\n            inputHours: hours,\n        });\n    }\n\n    handleOnInputFocus = (focusOnInput = !this.state.focusOnInput) => {\n\n        if (!focusOnInput) {\n            this.changeTimerNumbers();\n        }\n\n        if (!focusOnInput && document.activeElement === this.inputClockRef.current) {\n            this.inputClockRef.current.blur();\n        }\n\n        this.setState({ \n            focusOnInput: focusOnInput,\n            inputValue: '',\n        });\n    };\n\n    setPositionOfCursorInInput = position => {\n        if (!this.state.inputValue.length) return;\n\n        const value = this.state.inputValue.length - position;\n        this.inputClockRef.current.setSelectionRange(value, value);\n    }\n\n    handleOnBlur = () => {\n\n        if (document.activeElement === this.inputClockRef.current) return; \n        //Avoid losing focus when changing tab or going out of browser\n\n        if (this.state.clickedInClockContainer) {\n\n            this.setState({ clickedInClockContainer: false });\n            return;\n        }\n\n        this.handleOnInputFocus(false);\n        this.setState({ numberClicked: null })\n\n        return;\n    }\n\n    handleOnFocus = () => {\n        \n        if (!this.state.focusOnInput) {\n\n            this.handleOnInputFocus(true);\n            this.inputClockRef.current.focus();\n\n            return;\n        }\n    }\n\n    handleOnMouseDown = () => {\n        if (!this.state.clickedInClockContainer) this.setState({ clickedInClockContainer: true });\n    }\n\n    handleOnClick = (ev) => {\n\n        if (ev.target.nodeName === 'SPAN') this.setState({ numberClicked: ev.target });\n        \n        if (!this.state.focusOnInput) this.handleOnInputFocus(true);\n\n        this.inputClockRef.current.focus();\n        this.setState({ clickedInClockContainer: false });\n\n    }\n\n    handleClockEvents = (ev) => {\n\n        const eventsHandlers = {\n            'blur': this.handleOnBlur,\n            'click': this.handleOnClick,\n            'focus': this.handleOnFocus,\n            'mousedown': this.handleOnMouseDown,\n        }\n\n        const getEventHandler = (event) => eventsHandlers[event];\n        const handler = getEventHandler(ev.type);\n\n        return handler(ev);\n\n    };\n   \n    render () {\n        \n        const { \n            focusOnInput, \n            inputValue,\n            inputHours,\n            inputMinutes,\n            inputSeconds,\n            numberClicked,\n        } = this.state;\n\n        return (\n            <Clock\n                hours={inputHours} \n                minutes={inputMinutes} \n                seconds={inputSeconds} \n                isCountDown={true}\n                numberClicked={numberClicked}\n                focusOnInput={focusOnInput}\n                inputValueLength={inputValue.length}\n                handleClockEvents={this.handleClockEvents}\n                handleOnInputFocus={this.handleOnInputFocus}\n                bellStarting={this.props.bellStarting}\n                keyPressed={this.props.keyPressed}\n                setPositionOfCursorInInput={this.setPositionOfCursorInInput}\n                setHoursInClock={this.props.setHoursInClock}\n                hoursDisplayedInClock={this.props.hoursDisplayedInClock}\n                timeInactivity={this.props.timeInactivity}\n                ariaIdForContainer={this.props.ariaIdForContainer}\n            >\n                <input\n                    tabIndex={0}\n                    ref={this.inputClockRef}\n                    onBlur={this.handleClockEvents}\n                    onFocus={this.handleClockEvents}\n                    inputMode='numeric'\n                    type='text'\n                    onChange={this.onInputChange}\n                    className={'hiddenInput'}\n                    value={inputValue}\n                />\n            </Clock>\n        );  \n    }       \n}\n\n\nTimer.propTypes = {\n    seconds: PropTypes.number,\n    minutes: PropTypes.number,\n    hours: PropTypes.number,\n    bellStarting: PropTypes.func,\n    keyPressed: PropTypes.string,\n    hoursDisplayedInClock: PropTypes.object,\n    timeInactivity: PropTypes.shape({\n        start: PropTypes.number,\n        inactivityInSeconds: PropTypes.number,\n        isWindowTabActive: PropTypes.bool,\n    }),\n    ariaIdForContainer: PropTypes.string,\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modals.scss';\nimport { noop } from '../../generalFunctions.js'\n\nclass Modal extends Component {\n  \n  constructor(props) {\n    super(props); \n\n    this.divToFocus = null;\n\n    this.setDivFocus = element => {\n      this.divToFocus = element;\n    };\n\n    this.focusDiv = () => {\n      this.divToFocus.focus();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (this.props.modalState && prevProps.modalState !== this.props.modalState) {\n\n      this.focusDiv();\n\n    }\n  }\n\n  closeModalOnKeyPress = (ev) => {\n\n    if (this.props.stopKeyEventPropagation) ev.nativeEvent.stopImmediatePropagation();\n\n    switch (ev.key) {\n      case 'Escape':\n        return this.props.closeModal(ev);\n      case 'Enter':\n        return this.props.closeSuccessModal(ev);\n      default:\n        noop();\n    };\n\n  };\n\n  render() {\n\n    const { modalState, children, title, modalValidation } = this.props;\n\n    return (\n      <div \n        role='dialog'\n        aria-labelledby='modalDialogTitle'\n        aria-describedby=\"bellsDialog\"\n        ref={this.setDivFocus}\n        tabIndex={0} \n        className={`globalAlert modalEffect ${(modalState) ? 'showModal' : ''} ${(modalValidation) ? '' : 'invalidModal'}`}\n        onKeyDown={(ev) => this.closeModalOnKeyPress(ev)}>\n        <div className='modalContent'>\n          <div className='modalTitleContainer'>\n            <h2 id='modalDialogTitle' className='modalTitle'>{title}</h2>\n          </div>\n          {children}\n        </div>\n      </div>\n      );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  modalState: PropTypes.bool.isRequired,\n  modalValidation: PropTypes.bool,\n  closeSuccessModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  stopKeyEventPropagation: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  title: 'Modal',\n  modalState: false,\n  modalValidation: true,\n};\n\nexport default Modal;","import longBell from  '../.././static/Audio/long-bell.mp3';\nimport bowlStruck from '../.././static/Audio/bowl-struck.mp3';\nimport japaneseGong from '../.././static/Audio/bell4.mp3';\nimport buddhistPrayerBell from '../.././static/Audio/buddhist-prayer-bell.mp3';\nimport burmeseGong from '../.././static/Audio/gong-burmese.wav';\nimport chineseGong from '../.././static/Audio/gong-chinese.wav';\nimport tingshaBell from '../.././static/Audio/tingsha.wav';\nimport zenBell from '../.././static/Audio/zen-bell.mp3';\nimport deepBell from '../.././static/Audio/deep-bell.mp3';\nimport oceanWaves from '../.././static/Audio/ocean-waves.mp3';\nimport rainforestWaterways from '../.././static/Audio/rainforest-waterways.mp3';\nimport soothingWinds from '../.././static/Audio/soothing-winds.mp3';\nimport tibetanBell from '../.././static/Audio/tibetan-bell.mp3';\n\nconst defaultAudioSelected = 'Bowl Struck';\n\nconst audiosInfoArray = [\n    {\n        name: 'Long Bell',\n        src: longBell,\n    },\n    {\n        name: 'Bowl Struck',\n        src: bowlStruck,\n    },\n    {\n        name: 'Japanese Gong',\n        src: japaneseGong,\n    },\n    {\n        name: 'Buddhist Prayer Bell',\n        src: buddhistPrayerBell,\n    },\n    {\n        name: 'Burmese Gong',\n        src: burmeseGong,\n    },\n    {\n        name: 'Chinese Gong',\n        src: chineseGong,\n    },\n    {\n        name: 'Tingsha Bell',\n        src: tingshaBell,\n    },\n    {\n        name: 'Zen Bell',\n        src: zenBell,\n    },\n    {\n        name: 'Deep Bell',\n        src: deepBell,\n    },\n    {\n        name: 'Ocean Waves',\n        src: oceanWaves,\n    },\n    {\n        name: 'Rainforest Waterways',\n        src: rainforestWaterways,\n    },\n    {\n        name: 'Soothing Winds',\n        src: soothingWinds,\n    },\n    {\n        name: 'Tibetan Bell',\n        src: tibetanBell,\n    },\n];\n\nexport { audiosInfoArray, defaultAudioSelected };","import React, { Component } from 'react';\nimport Modal from './Modal.js'\nimport PropTypes from 'prop-types';\nimport './Modals.scss'\nimport { audiosInfoArray, defaultAudioSelected } from '../Bells';\nimport { TextField, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport AutoComplete from '@material-ui/lab/Autocomplete';\nimport { getNumberWithTimeUnitLabel } from '../../generalFunctions.js';\n\nconst maxOfMinutesSelection = 360;\n\nconst notIncludedNumber = num => {\n    return ((num > 60 && num % 5 !== 0) ||  \n     (num > 90 && num % 10 !== 0) ||\n     (num > 120 && num % 30 !== 0))\n}\n\nclass AudiosModal extends Component {\n    constructor(props) {\n        super(props);\n\n        let initialSelectValue = (this.props.ringBellEvery === 1) ?\n         `${this.props.ringBellEvery} minute` :\n         `${this.props.ringBellEvery} minutes`;\n\n        this.state = {\n            selectAudiosValue: defaultAudioSelected,\n            autoCompleteInputValue: initialSelectValue,\n        };\n    }\n\n    handleSelectAudiosChange = (ev) => this.setState({ selectAudiosValue: ev.target.value });\n\n    handleInputChange = (ev, value) => {\n        if (!ev) return;\n\n        this.setState({ autoCompleteInputValue: value});\n    }\n\n    startAudioBellFromBeginning = () => {\n\n        this.bellRef.currentTime = 0;\n        this.bellRef.play();\n    };\n\n    closeSuccessModal = () => this.props.closeModal();\n    \n    closeModal = (ev) => this.props.closeModal(ev, false);\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.bellStarting === false && this.props.bellStarting === true) {\n            this.startAudioBellFromBeginning();\n        }\n    }\n\n    render() {\n\n        const { autoCompleteInputValue, selectAudiosValue } = this.state;\n\n        const sortComparison = (nameA, nameB) =>  (nameA > nameB) ? 1 : (nameA < nameB) ? -1 : 0;\n\n        const orderedAudios = audiosInfoArray.sort((objA, objB) => sortComparison(objA.name, objB.name));\n        const audios = orderedAudios.map(({ name }, i) => {\n\n            return <MenuItem key={i} value={name}> {name} </MenuItem>\n        });\n\n        const { src: selectedAudioSrc } = audiosInfoArray.find(({ name }) => name === selectAudiosValue);\n        const minutesOptionsArr = getNumberWithTimeUnitLabel(maxOfMinutesSelection, notIncludedNumber);\n        \n        return (\n            <Modal \n                title={'Settings'}\n                modalState={this.props.modalState}\n                closeModal={this.closeModal}\n                closeSuccessModal={this.closeSuccessModal}\n                stopKeyEventPropagation={this.props.stopKeyEventPropagation}\n            >\n                <div className='audioSelection'>\n                    <FormControl>\n                        <InputLabel id=\"simple-select-label\">Bells</InputLabel>\n                        <Select\n                            labelId=\"simple-select-label\"\n                            id=\"simple-select\"\n                            value={this.state.selectAudiosValue}\n                            onChange={this.handleSelectAudiosChange}\n                        >\n                            {audios}\n                        </Select>\n                    </FormControl>\n                </div>\n                <figure className='reproduceAudio'>\n                    <figcaption>Reproduce Bell</figcaption>\n                    <audio ref={e => this.bellRef = e} src={selectedAudioSrc} controls>\n                        Your browser does not support the\n                        <code>audio</code> element.\n                    </audio>\n                </figure>\n                <div className={`inputContainer ${(this.props.showTimer) ? 'hide' : ''}`}>\n                    <AutoComplete\n                        id=\"combo-box\"\n                        options={minutesOptionsArr}\n                        getOptionSelected={(option, { value }) => option.value === value}\n                        getOptionLabel={(option) => option.label}\n                        onChange={this.props.handleMinutesSelect}\n                        onInputChange={(ev, value) => this.handleInputChange(ev, value)}\n                        inputValue={autoCompleteInputValue}\n                        handleHomeEndKeys={true}\n                        filterSelectedOptions={true}\n                        fullWidth={true}\n                        renderInput={(params) => <TextField {...params} label=\"Ring every\" variant=\"outlined\" />}\n                    />\n                </div>\n                <div className='buttonsInModalContainer'>\n                    <button \n                        className={`alertButton buttonsInModal ${(this.props.showTimer) ? 'hide' : ''}`}\n                        onClick={(ev) => this.closeModal(ev, false)}>\n                        Cancel\n                    </button>\n                    <button className='successButton buttonsInModal' onClick={this.closeSuccessModal}>Save changes</button>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nAudiosModal.propTypes = {\n    modalState: PropTypes.bool,\n    ringBellEvery: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    closeModal: PropTypes.func,\n    closeSuccessModal: PropTypes.func,\n    stopKeyEventPropagation: PropTypes.bool,\n    bellStarting: PropTypes.bool,\n    handleMinutesSelect: PropTypes.func,\n    showTimer: PropTypes.bool,\n}\n\nexport default AudiosModal;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TabButtons({ classNames, handleClick, buttonsText, amountOfButtons, activeTab }) {\n\n    let buttons = [];\n\n    for (let i = 0; i < amountOfButtons; i++) {\n\n        let buttonText = (buttonsText[i]) ? buttonsText[i] : 'Button';\n\n        buttons.push(\n            <button\n                key={i}\n                tabIndex={0}\n                role='tab'\n                aria-selected={(activeTab === i)}\n                aria-controls={`clock${i + 1}`}\n                className={`buttons ${(classNames.button) ? classNames.button : ''} ${(classNames.buttons[i] ? classNames.buttons[i] : '')}`}\n                onClick={() => handleClick(i)}\n            >\n                {buttonText}\n            </button>\n        )\n    }\n\n    return (\n        <div role='tablist' aria-label='Clocks tablist' className={`btnsContainer ${(classNames.container) ? classNames.container : ''}`}>\n            {buttons}\n        </div>\n    );\n}\n\nTabButtons.propTypes = {\n    activeTab: PropTypes.number,\n    handleClick: PropTypes.func,\n    amountOfButtons: PropTypes.number,\n    buttonsText: PropTypes.arrayOf(PropTypes.string),\n    classNames: PropTypes.shape({\n        container: PropTypes.string,\n        button: PropTypes.string,\n        buttons: PropTypes.arrayOf(PropTypes.string),\n    }),\n};\n\nTabButtons.defaultProps = {\n    amountOfButtons: 2,\n    classNames: {\n        container: '',\n        button: '',\n        buttons: [''],\n    },\n}\n\nexport default TabButtons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsSVG from '../../static/Logos/cog-solid.svg';\n\nfunction BelowClockContainer({ showTimer, numberToRing, handleModal }) {\n\n    return(\n        <div className='belowClockContainer'>\n            <span className={`belowClockContainerInfo ${(showTimer) ? 'hidden' : '' }`} >    \n                Ring every {numberToRing} {(numberToRing === 1) ? 'minute' : 'minutes'}\n            </span>\n            <div className='settingsContainer'>\n                <button className='settingsLogoBtn' onClick={handleModal}>\n                    <figure>\n                        <img src={SettingsSVG} className='settingsLogo' alt='Settings Logo' height='20' width='20'/>\n                    </figure>\n                </button>\n                <span className='tooltip'>Settings</span>\n            </div>\n        </div>\n    );\n}\n\nBelowClockContainer.propTypes = {\n    showTimer: PropTypes.bool,\n    numberToRing: PropTypes.number,\n    handleModal: PropTypes.func,\n}\n\nexport default BelowClockContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChangeSizeButton({ onClick, classNames = {}, buttonText }) {\n\n    return (\n        <div className={`sizeAppButtonContainer ${classNames.container}}`}>\n            <button onClick={onClick} className={`${classNames.button}`}>{buttonText}</button>\n        </div>\n    );\n    \n}\n\nChangeSizeButton.propTypes = {\n    onClick: PropTypes.func,\n    buttonText: PropTypes.string,\n    classNames: PropTypes.shape({\n        container: PropTypes.string,\n        button: PropTypes.string,\n    }),\n}\n\nChangeSizeButton.defaultProps = {\n    buttonText: 'Change Size Button',\n    classNames: {\n        container: '',\n        button: '',\n    },\n}\n\nexport default ChangeSizeButton;","import React from 'react';\nimport Timer from './Components/Clock/Timer.js';\nimport { getClosestSecond } from './Components/Clock/clock-functions.js';\nimport { default as Stopwatch } from './Components/Clock/Clock.js';\nimport './css/app.scss';\nimport AudiosModal from './Components/Modals/AudiosModal.js';\nimport { BelowClockContainer, TabButtons, ChangeSizeButton } from './Components/App';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.mainContainerRef = React.createRef();\n\n        const initialStopwatchRingTime = 2;\n\n        this.state = {\n            activeTab: 0,\n            keyPressedEvent: null,\n            bellStarting: false,\n            timeOfTabInactivity: {\n                start: null,\n                inactivityInSeconds: null,\n                isWindowTabActive: true,\n            },\n            isTimerShowingHours: false,\n            isStopwatchShowingHours: false,\n            modalClicked: false,\n            modalSelectValue: initialStopwatchRingTime,\n            showingOverlay: false,  \n            numberToRing: initialStopwatchRingTime,\n            showAppInBig: false,\n        };\n    }\n\n    handleClockBtns = tabIndex => this.setState({ activeTab: tabIndex });\n\n    handleModal = (ev, succeed = true) => {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if ((!succeed && modalClicked) || (modalClicked && modalSelectValue === '')) {\n            this.setState({ modalSelectValue: this.state.numberToRing });\n        } \n\n        this.setState({ \n            modalClicked: !modalClicked,\n            showingOverlay: !this.state.showingOverlay,\n        });\n    };\n\n    setAppInBigSize = () => {\n\n        this.setState({ showAppInBig: !this.state.showAppInBig });\n    }\n\n    setHoursInClock = (state, value) => this.setState({ [state]: value });\n\n    bellStarting = () => this.setState({ bellStarting: true });\n\n    onBodyKeydown = ({ key }) => this.setState({ keyPressed: key});\n\n    handleModalSelect = (ev, optionSelectedObj) => {\n\n        const value = (optionSelectedObj) ? optionSelectedObj.value : '';\n\n        this.setState({ \n            modalSelectValue: value,\n        });\n    }\n\n    handleVisibilityChange = (ev) => {\n\n        const { timeStamp } = ev || {};\n        const { start: inactivityStart } = this.state.timeOfTabInactivity;\n\n        if (document.visibilityState === 'hidden') {\n\n            if (inactivityStart !== null) return;\n\n            this.setState({\n                timeOfTabInactivity: {\n                    start: timeStamp,\n                    inactivityInSeconds: null,\n                    isWindowTabActive: false,\n                },\n            });\n\n        } else {\n\n            const timeOfInactivityInMs = timeStamp - inactivityStart;\n\n            const timeOfInactivityInSeconds = getClosestSecond(timeOfInactivityInMs / 1000)\n    \n            this.setState({\n                timeOfTabInactivity: {\n                    start: null,\n                    inactivityInSeconds: timeOfInactivityInSeconds,\n                    isWindowTabActive: true,\n                },\n            });\n        }\n    }\n    \n    componentDidMount() {\n        document.addEventListener('keydown', this.onBodyKeydown);\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\n        document.addEventListener('resume', this.handleVisibilityChange);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onBodyKeydown);\n        document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n        document.removeEventListener('resume', this.handleVisibilityChange);\n    }\n \n    componentDidUpdate(prevProps, prevState) {\n\n        const { modalClicked, modalSelectValue } = this.state;\n\n        if (this.state.keyPressed) this.setState({ keyPressed: null });\n\n        if (this.state.bellStarting) this.setState({ bellStarting: false });\n\n        if (prevState.modalClicked && !modalClicked) this.setState({ numberToRing: +modalSelectValue });\n    }\n\n    render () {\n        const { \n            activeTab, \n            keyPressed, \n            bellStarting, \n            numberToRing, \n            isTimerShowingHours,\n            isStopwatchShowingHours,\n            showingOverlay,\n            modalClicked,\n            modalSelectValue,\n            showAppInBig,\n            timeOfTabInactivity,\n        } = this.state;\n\n        const showTimer = (!activeTab);\n\n        const hoursInClock = (( showTimer && isTimerShowingHours) || (!showTimer && isStopwatchShowingHours));\n        \n        const hoursBeingDisplayed = (isTimer) => {\n            return {\n                setHoursInClock: (state, value) => this.setHoursInClock(state, value),\n                stateName: (isTimer) ? 'isTimerShowingHours' : 'isStopwatchShowingHours',\n                value: (isTimer) ? isTimerShowingHours : isStopwatchShowingHours,\n            }\n        }\n\n        const buttonsClassnames = {\n            container: (hoursInClock) ? 'hoursInClock' : '',\n            buttons: [],\n        };\n\n        buttonsClassnames.buttons[activeTab] = 'btnSelected';\n\n        return (\n            <div className={`mainContainer ${(showAppInBig) ? 'bigScreenMode' : ''}`}>\n                <div onClick={this.handleModal} className={`modalOverlay ${(showingOverlay) ? 'showOverlay' : ''}`}></div>\n                <AudiosModal \n                    stopKeyEventPropagation={true}\n                    bellStarting={bellStarting}\n                    closeModal={this.handleModal} \n                    modalState={modalClicked}\n                    ringBellEvery={modalSelectValue}\n                    handleMinutesSelect={this.handleModalSelect}\n                    showTimer={showTimer}\n                />\n                <div className='appContainer'>\n                    <ChangeSizeButton\n                        onClick={this.setAppInBigSize}\n                        buttonText={(showAppInBig) ? 'Make it Small' : 'Make it Big!'} \n                    />\n                    <main className='appSubContainer'>\n                            <TabButtons\n                                activeTab={activeTab}\n                                handleClick={this.handleClockBtns}\n                                amountOfButtons={2}\n                                buttonsText={['Timer', 'Stopwatch']}\n                                classNames={buttonsClassnames}\n                            />\n                            <section>\n                                <div className='clock'>\n                                    <div className={`${(showTimer) ? '' : 'hide' }`}>\n                                        <Timer \n                                            keyPressed={(showTimer) ? keyPressed : null} \n                                            bellStarting={this.bellStarting} \n                                            hours={0}\n                                            minutes={10} \n                                            seconds={0}\n                                            hoursDisplayedInClock={hoursBeingDisplayed(true)}\n                                            timeInactivity={timeOfTabInactivity}\n                                            ariaIdForContainer={'Clock 1'}\n                                        />\n                                    </div>\n                                    <div className={`${(showTimer) ? 'hide' : '' }`}>\n                                        <Stopwatch \n                                            keyPressed={(showTimer) ? null : keyPressed}\n                                            bellStarting={this.bellStarting}\n                                            hours={0} \n                                            minutes={0} \n                                            seconds={0}\n                                            ringEvery={numberToRing}\n                                            hoursDisplayedInClock={hoursBeingDisplayed(false)}\n                                            timeInactivity={timeOfTabInactivity}\n                                            ariaIdForContainer={'Clock 2'}\n                                        />\n                                    </div>\n                                </div>\n                            </section>\n                            <BelowClockContainer \n                                showTimer={showTimer} \n                                numberToRing={numberToRing} \n                                handleModal={this.handleModal}\n                            />\n                    </main>\n                </div>\n                <footer>\n                    <span>\n                        Logos taken by&nbsp;\n                        <a href='https://fontawesome.com/license'>Font Awesome</a>\n                        &nbsp;and&nbsp;\n                        <a href='https://icons8.com/'>Icons 8</a>\n                    </span>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}